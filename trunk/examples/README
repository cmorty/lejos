Building the examples from SVN in Eclipse
-----------------------------------------

To build the examples directly from SVN under Eclipse, 
do the following:

- Get the SVN plug-in
- Checkout the nxtvm project 
- Checkout and build the jtools project
- Checkout and build the classes project
- Checkout and build the pccomms project
- Checkout and build the pctools project
- Build or get the jlibnxt library
- Checkout and build the Bluetooth project
- Checkout and build the examples project

You can then add a new example - see below.

Get the SVN plug-in
-------------------

Get the SVN plug-in for Eclipse, if you do not have it already.

See http://sourceforge.net/docman?group id=178176

Checkout the nxtvm project
--------------------------

Get it from from https://svn.sourceforge.net/svnroot/lejos/trunk/nxtvm.

You do not need to build it if you are not doing VM devlopment.

It is needed by the build of jtools.

Checkout and build the jtools project
-------------------------------------

Get it from https://svn.sourceforge.net/svnroot/lejos/trunk/jtools.

To build it, right click on build.xml and select RunAs Ant Build.

The jtools project needs nxtvm to be present as it uses classes.db and signatures.db
from that project.

Checkout and build the classes project
--------------------------------------

Get it from https://svn.sourceforge.net/svnroot/lejos/trunk/classes.

To build it, right click on build.xml and select RunAs Ant Build.

Check out and build the pccomms project
--------------------------------------

Get it from https://svn.sourceforge.net/svnroot/lejos/trunk/pccomms.

To build it, right click on build.xml and select RunAs Ant Build.

This is needed by the pctools project.

Check out and build the pctools project
--------------------------------------

Get it from https://svn.sourceforge.net/svnroot/lejos/trunk/pctools.

To build it, right click on build.xml and select RunAs Ant Build.

This project is need for the NXJUpload utility.

Build or get the jlibnxt library
--------------------------------

This is needed for driving USB.

On Linux you can checkout the libnxt project from 
https://svn.sourceforge.net/svnroot/lejos/trunk/libnxt
and build it.

To build this project you need to have the CDT installed in Eclipse, 
so that you can build C/C++ projects, and you need to be in the
C/C++ perspective.

This project is built with Scons, so you need to install it,
if it is not already on your system.

To build it select Project, Build Make Target, default.

On Windows, you can use the pre-built version is the snapshot project.

To get the snapshop project, check it out from
https://svn.sourceforge.net/svnroot/lejos/trunk/snapshot.

Checkput and buils the Bluetooth project
----------------------------------------

On Linux, you need to build the jbluez project.

This, again, is a C/C++ project. It uses make.

You can get the project from 
https://svn.sourceforge.net/svnroot/lejos/trunk/bluez.

To build it, select project, Make Buuild Target, all.

On Windows, Bluettoth support is provided by luecove, and bluecove.jar is
part of the pccomms project, so there is nothing to do.

Checkout the examples project
-----------------------------

Get it from https://svn.sourceforge.net/svnroot/lejos/trunk/classes.

You need to build each example separately. Note that the build
relies on the jtools and classes project being present and under the
same directory (e.g. workspace) as examples. If this is not the case on your machine,
edit the samples.properties file to specify where all the jar files are.

You also need to specify the java library path in samples.properies.

On Windows you set:

nxj.library.path=../../snapshot/bin

On Linux, you set:

nxj.library.path=../../libnxt:../../jbluez

To build each example, right click on its build.xml file and select RunAs Ant Build.

By default this will compile, link, upload and run the example. If you don't want to do 
all this, then select "RunAs", "Ant Build..." and select the build targets
that you want.

Adding a new example
--------------------

Make sure you are in the Java perspective.

Create a folder for the example.

Under the project's properties Java Build path, Source tab, add the new folder.

Create the Java classes for the example. Make the name of the class containing the
main method, the same as the folder.

Copy a build.xml file from one of the other examples, e.g. HelloWorld. As long as
the main class has the same name as the folder, it should require no changes.

To build the example, right click on its build.xml file and select RunAs Ant Build.
By default this will build, link, upload and run the example.

