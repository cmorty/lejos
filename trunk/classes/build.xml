<!--
  ==================================================
  Buildfile for building classes.jar for NXT
  ==================================================
-->
<project name="leJOS NXT Java classes" default="all" basedir=".">
	
	<property file="build.properties" />
	<property name="nirvana.dir" value="${build.dir}/nirvana" />
		
	<target name="prepare">
  		<mkdir dir="${build.dir}" />
  		<mkdir dir="${nirvana.dir}" />
	</target>
	
 	<!-- compiles the classes -->
  	<target name="classes" description="compile classes" depends="prepare">
  		<!--
  			Ant is NOT suitable for incremental compilation.
  			It doesn't keep track of inlined constants and possibly
  			other things. So we simply delete the output folder.
  		--> 
		<delete dir="${classes.dir}" />
		<mkdir dir="${classes.dir}" />
  		<javac
  			includes="${source.include}"
  			excludes="${source.exclude}"
  			encoding="${source.encoding}"
  			source="${source.version}"
			target="${target.version}"
			destdir="${classes.dir}"
			debug="true"
			includeAntRuntime="false"
			includeJavaRuntime="false"
  			bootclasspath="${nirvana.dir}"
  			extdirs="${nirvana.dir}"
			verbose="false"
		>
      		<!--
      			bootclasspath and extdirs are set to an empty directory, to kick any class from
      			Sun's JDK out of the classpath. Use verbose="true" to check that javac really doesn't
      			touch anything from the JDK, Ant, etc.
      			There doesn't seem to be a clean way of having an empty (boot)classpath.
      			Hence the workaround with an empty dir (nirvana.dir).
      		-->
  			<src path="${source.dir}" />
  			<src path="${source.dir2}" />
  			
			<!-- enable warnings -->
			<compilerarg value="-Xlint:${source.warn}" />
		</javac>
  	</target>
	
 	<!-- creates the classes jar -->
	<target name="classes.jar" description="generate jar of classes" depends="prepare,classes">
		<jar destfile="${classes.jar}">
			<fileset
				dir="${classes.dir}"
			/>
			<fileset
				dir="${resource.dir}"
				includes="${resource.include}"
				excludes="${resource.exclude}"
			/>
		</jar>
	</target>
	
 	<!-- creates the classes jar -->
	<target name="classes.src.zip" description="generate zip of sources" depends="prepare">
		<zip destfile="${classes.src.zip}">
			<fileset dir="${source.dir}"  includes="${source.include}" excludes="${source.exclude}" />
			<fileset dir="${source.dir2}" includes="${source.include}" excludes="${source.exclude}" />
		</zip>
	</target>
	
	<!-- generate javadocs -->
	<target name="docs" description="generate javadocs" depends="prepare">
		<delete dir="${docs.dir}" />
		<mkdir dir="${docs.dir}" />
		<javadoc
			destdir="${docs.dir}"
			source="${source.version}"
			encoding="${source.encoding}"
			charset="utf-8"
			locale="en_US"
			author="true"
			access="protected"
			windowtitle="leJOS NXJ API documentation"
			bootclasspath="${nirvana.dir}"
			extdirs="${nirvana.dir}"
			verbose="false"
		>
			<arg value="-quiet"/>
			
			<packageset dir="${source.dir}"  includes="${docs.include}" excludes="${docs.exclude}" />
			<packageset dir="${source.dir2}" includes="${docs.include}" excludes="${docs.exclude}" />
		</javadoc>
	</target>
	
	<!-- zip the javadocs -->
	<target name="docs.zip" description="generate zip of javadocs" depends="docs">
    	<zip
			destfile="${docs.zip}"
    		basedir="${docs.dir}"
    	/>
	</target>
	
	<!-- zip the project -->
	<target name="dist.zip" description="generate zip of sources">
    	<zip
    		destfile="${dist.zip}"
    		basedir="${basedir}"
    		includes="${dist.include}"
    		excludes="${dist.exclude}"
    	/>
	</target>
	
	<target name="all" description="classes.jar, docs.zip and source.zip" depends="classes.jar, classes.src.zip, docs.zip, dist.zip" />
		
	<!-- delete everything generated -->
	<target name="clean" description="clean up all generated files">
		<delete dir="${build.dir}" />
	</target>
</project>
