package js.tinyvm;
/**
 * Machine-generated file. Do not modify.
 */

public interface SpecialSignatureConstants {
  static final String[] SIGNATURES = {
    "main([Ljava/lang/String;)V",
    "run()V",
    "<init>()V",
    "<clinit>()V",
    "notify()V",
    "notifyAll()V",
    "wait()V",
    "wait(J)V",
    "start()V",
    "yield()V",
    "sleep(J)V",
    "currentThread()Ljava/lang/Thread;",
    "getPriority()I",
    "setPriority(I)V",
    "interrupt()V",
    "interrupted()Z",
    "isInterrupted()Z",
    "setDaemon(Z)V",
    "isDaemon()Z",
    "join()V",
    "join(J)V",
    "currentTimeMillis()J",
    "exit(I)V",
    "freeMemory()J",
    "totalMemory()J",
    "getMessage()Ljava/lang/String;",
    "readSensorValue(I)I",
    "setADTypeById(II)V",
    "setPowerTypeById(II)V",
    "setPoller()V",
    "setThrottle(I)V",
    "test(Ljava/lang/String;Z)V",
    "testEQ(Ljava/lang/String;II)V",
    "floatToIntBits(F)I",
    "intBitsToFloat(I)F",
    "drawString(Ljava/lang/String;II)V",
    "drawInt(III)V",
    "drawInt(IIII)V",
    "refresh()V",
    "clear()V",
    "setDisplay([I)V",
    "getVoltageMilliVolt()I",
    "readButtons()I",
    "getTachoCountById(I)I",
    "controlMotorById(III)V",
    "resetTachoCountById(I)V",
    "i2cEnableById(I)V",
    "i2cBusyById(I)I",
    "i2cStartById(IIII[BII)I",
    "i2cDisableById(I)V",
    "playTone(II)V",
    "btSend([BI)V",
    "btReceive([B)V",
    "btGetCmdMode()I",
    "btSetCmdMode(I)V",
    "btStartADConverter()V",
    "usbRead([BI)I",
    "usbWrite([BI)V",
    "usbReset()V",
    "writePage([BI)V",
    "readPage([BI)V",
    "exec(II)V",
    "playSample(IIII)V",
    "getDataAddress(Ljava/lang/Object;)I",
    "gc()V",
    "shutDown()V"
  };
}
