<?xml version="1.0" encoding="UTF-8"?>
<!--
*** GENERATED FROM project.xml - DO NOT EDIT  ***
***         EDIT ../build.xml INSTEAD         ***

For the purpose of easier reading the script
is divided into following sections:

  - initialization
  - compilation
  - jar
  - execution
  - debugging
  - javadoc
  - junit compilation
  - junit execution
  - junit debugging
  - applet
  - cleanup

        -->
<project xmlns:j2seproject1="http://www.netbeans.org/ns/j2se-project/1" xmlns:j2seproject3="http://www.netbeans.org/ns/j2se-project/3" xmlns:jaxrpc="http://www.netbeans.org/ns/j2se-project/jax-rpc" basedir=".." default="default" name="samples-impl">
    <target depends="test,jar,javadoc" description="Build and test whole project." name="default"/>
    <!-- 
                ======================
                INITIALIZATION SECTION 
                ======================
            -->
    <target name="-pre-init">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="-pre-init" name="-init-private">
        <property file="nbproject/private/config.properties"/>
        <property file="nbproject/private/configs/${config}.properties"/>
        <property file="nbproject/private/private.properties"/>
    </target>
    <target depends="-pre-init,-init-private" name="-init-user">
        <property file="${user.properties.file}"/>
        <!-- The two properties below are usually overridden -->
        <!-- by the active platform. Just a fallback. -->
        <property name="default.javac.source" value="1.4"/>
        <property name="default.javac.target" value="1.4"/>
    </target>
    <target depends="-pre-init,-init-private,-init-user" name="-init-project">
        <property file="nbproject/configs/${config}.properties"/>
        <property file="nbproject/project.properties"/>
    </target>
    <target depends="-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property" name="-do-init">
        <available file="${manifest.file}" property="manifest.available"/>
        <condition property="manifest.available+main.class">
            <and>
                <isset property="manifest.available"/>
                <isset property="main.class"/>
                <not>
                    <equals arg1="${main.class}" arg2="" trim="true"/>
                </not>
            </and>
        </condition>
        <condition property="manifest.available+main.class+mkdist.available">
            <and>
                <istrue value="${manifest.available+main.class}"/>
                <isset property="libs.CopyLibs.classpath"/>
            </and>
        </condition>
        <condition property="have.tests">
            <or/>
        </condition>
        <condition property="have.sources">
            <or>
                <available file="${src.BlueStats.dir}"/>
                <available file="${src.BTConnectTest.dir}"/>
                <available file="${src.BTGPS.dir}"/>
                <available file="${src.BTReceive.dir}"/>
                <available file="${src.BumperCar.dir}"/>
                <available file="${src.BumpNavigator.dir}"/>
                <available file="${src.ColorSensorTest.dir}"/>
                <available file="${src.ColorDetector.dir}"/>
                <available file="${src.CommandLine.dir}"/>
                <available file="${src.CompassTest.dir}"/>
                <available file="${src.DistanceTest.dir}"/>
                <available file="${src.DLTest.dir}"/>
                <available file="${src.EchoNavigator.dir}"/>
                <available file="${src.ExceptionTest.dir}"/>
                <available file="${src.FileTest.dir}"/>
                <available file="${src.GPSInfo.dir}"/>
                <available file="${src.GraphicsSample.dir}"/>
                <available file="${src.HelloWorld.dir}"/>
                <available file="${src.Homer.dir}"/>
                <available file="${src.I2CDevices.dir}"/>
                <available file="${src.KalmanTest.dir}"/>
                <available file="${src.LatteboxTest.dir}"/>
                <available file="${src.LCDUI.dir}"/>
                <available file="${src.Line.dir}"/>
                <available file="${src.Listen.dir}"/>
                <available file="${src.LLCMonitor.dir}"/>
                <available file="${src.MatrixTest.dir}"/>
                <available file="${src.MemoryTest.dir}"/>
                <available file="${src.MonitorTest.dir}"/>
                <available file="${src.NXTCamTest.dir}"/>
                <available file="${src.NXTConnectTest.dir}"/>
                <available file="${src.NXTLCPRespond.dir}"/>
                <available file="${src.NXTReceive.dir}"/>
                <available file="${src.NXTServoTest.dir}"/>
                <available file="${src.ObstacleNavigator.dir}"/>
                <available file="${src.PerformanceTest.dir}"/>
                <available file="${src.PFLinkTest.dir}"/>
                <available file="${src.PFMateTest.dir}"/>
                <available file="${src.PFTest.dir}"/>
                <available file="${src.PilotTester.dir}"/>
                <available file="${src.RCNavigator.dir}"/>
                <available file="${src.RCXEmulator.dir}"/>
                <available file="${src.RCXMMTest.dir}"/>
                <available file="${src.RCXMuxTest.dir}"/>
                <available file="${src.RCXPortTest.dir}"/>
                <available file="${src.RCXRemote.dir}"/>
                <available file="${src.RCXRemoteMotor.dir}"/>
                <available file="${src.RCXTempTest.dir}"/>
                <available file="${src.RemoteNXTTest.dir}"/>
                <available file="${src.RFIDTest.dir}"/>
                <available file="${src.SignalTest.dir}"/>
                <available file="${src.SocketTest.dir}"/>
                <available file="${src.SonicTest.dir}"/>
                <available file="${src.SoundSample.dir}"/>
                <available file="${src.SpeedTest.dir}"/>
                <available file="${src.Subsumption1.dir}"/>
                <available file="${src.Subsumption2.dir}"/>
                <available file="${src.TiltTest.dir}"/>
                <available file="${src.TimeTest.dir}"/>
                <available file="${src.Tune.dir}"/>
                <available file="${src.USBReceive.dir}"/>
                <available file="${src.View.dir}"/>
                <available file="${src.WaypointNav.dir}"/>
            </or>
        </condition>
        <condition property="netbeans.home+have.tests">
            <and>
                <isset property="netbeans.home"/>
                <isset property="have.tests"/>
            </and>
        </condition>
        <condition property="no.javadoc.preview">
            <and>
                <isset property="javadoc.preview"/>
                <isfalse value="${javadoc.preview}"/>
            </and>
        </condition>
        <property name="run.jvmargs" value=""/>
        <property name="javac.compilerargs" value=""/>
        <property name="work.dir" value="${basedir}"/>
        <condition property="no.deps">
            <and>
                <istrue value="${no.dependencies}"/>
            </and>
        </condition>
        <property name="javac.debug" value="true"/>
        <property name="javadoc.preview" value="true"/>
        <property name="application.args" value=""/>
        <property name="source.encoding" value="${file.encoding}"/>
        <condition property="javadoc.encoding.used" value="${javadoc.encoding}">
            <and>
                <isset property="javadoc.encoding"/>
                <not>
                    <equals arg1="${javadoc.encoding}" arg2=""/>
                </not>
            </and>
        </condition>
        <property name="javadoc.encoding.used" value="${source.encoding}"/>
        <property name="includes" value="**"/>
        <property name="excludes" value=""/>
        <property name="do.depend" value="false"/>
        <condition property="do.depend.true">
            <istrue value="${do.depend}"/>
        </condition>
        <condition else="" property="javac.compilerargs.jaxws" value="-Djava.endorsed.dirs='${jaxws.endorsed.dir}'">
            <and>
                <isset property="jaxws.endorsed.dir"/>
                <available file="nbproject/jaxws-build.xml"/>
            </and>
        </condition>
    </target>
    <target name="-post-init">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="-pre-init,-init-private,-init-user,-init-project,-do-init" name="-init-check">
        <fail unless="src.BlueStats.dir">Must set src.BlueStats.dir</fail>
        <fail unless="src.BTConnectTest.dir">Must set src.BTConnectTest.dir</fail>
        <fail unless="src.BTGPS.dir">Must set src.BTGPS.dir</fail>
        <fail unless="src.BTReceive.dir">Must set src.BTReceive.dir</fail>
        <fail unless="src.BumperCar.dir">Must set src.BumperCar.dir</fail>
        <fail unless="src.BumpNavigator.dir">Must set src.BumpNavigator.dir</fail>
        <fail unless="src.ColorSensorTest.dir">Must set src.ColorSensorTest.dir</fail>
        <fail unless="src.ColorDetector.dir">Must set src.ColorDetector.dir</fail>
        <fail unless="src.CommandLine.dir">Must set src.CommandLine.dir</fail>
        <fail unless="src.CompassTest.dir">Must set src.CompassTest.dir</fail>
        <fail unless="src.DistanceTest.dir">Must set src.DistanceTest.dir</fail>
        <fail unless="src.DLTest.dir">Must set src.DLTest.dir</fail>
        <fail unless="src.EchoNavigator.dir">Must set src.EchoNavigator.dir</fail>
        <fail unless="src.ExceptionTest.dir">Must set src.ExceptionTest.dir</fail>
        <fail unless="src.FileTest.dir">Must set src.FileTest.dir</fail>
        <fail unless="src.GPSInfo.dir">Must set src.GPSInfo.dir</fail>
        <fail unless="src.GraphicsSample.dir">Must set src.GraphicsSample.dir</fail>
        <fail unless="src.HelloWorld.dir">Must set src.HelloWorld.dir</fail>
        <fail unless="src.Homer.dir">Must set src.Homer.dir</fail>
        <fail unless="src.I2CDevices.dir">Must set src.I2CDevices.dir</fail>
        <fail unless="src.KalmanTest.dir">Must set src.KalmanTest.dir</fail>
        <fail unless="src.LatteboxTest.dir">Must set src.LatteboxTest.dir</fail>
        <fail unless="src.LCDUI.dir">Must set src.LCDUI.dir</fail>
        <fail unless="src.Line.dir">Must set src.Line.dir</fail>
        <fail unless="src.Listen.dir">Must set src.Listen.dir</fail>
        <fail unless="src.LLCMonitor.dir">Must set src.LLCMonitor.dir</fail>
        <fail unless="src.MatrixTest.dir">Must set src.MatrixTest.dir</fail>
        <fail unless="src.MemoryTest.dir">Must set src.MemoryTest.dir</fail>
        <fail unless="src.MonitorTest.dir">Must set src.MonitorTest.dir</fail>
        <fail unless="src.NXTCamTest.dir">Must set src.NXTCamTest.dir</fail>
        <fail unless="src.NXTConnectTest.dir">Must set src.NXTConnectTest.dir</fail>
        <fail unless="src.NXTLCPRespond.dir">Must set src.NXTLCPRespond.dir</fail>
        <fail unless="src.NXTReceive.dir">Must set src.NXTReceive.dir</fail>
        <fail unless="src.NXTServoTest.dir">Must set src.NXTServoTest.dir</fail>
        <fail unless="src.ObstacleNavigator.dir">Must set src.ObstacleNavigator.dir</fail>
        <fail unless="src.PerformanceTest.dir">Must set src.PerformanceTest.dir</fail>
        <fail unless="src.PFLinkTest.dir">Must set src.PFLinkTest.dir</fail>
        <fail unless="src.PFMateTest.dir">Must set src.PFMateTest.dir</fail>
        <fail unless="src.PFTest.dir">Must set src.PFTest.dir</fail>
        <fail unless="src.PilotTester.dir">Must set src.PilotTester.dir</fail>
        <fail unless="src.RCNavigator.dir">Must set src.RCNavigator.dir</fail>
        <fail unless="src.RCXEmulator.dir">Must set src.RCXEmulator.dir</fail>
        <fail unless="src.RCXMMTest.dir">Must set src.RCXMMTest.dir</fail>
        <fail unless="src.RCXMuxTest.dir">Must set src.RCXMuxTest.dir</fail>
        <fail unless="src.RCXPortTest.dir">Must set src.RCXPortTest.dir</fail>
        <fail unless="src.RCXRemote.dir">Must set src.RCXRemote.dir</fail>
        <fail unless="src.RCXRemoteMotor.dir">Must set src.RCXRemoteMotor.dir</fail>
        <fail unless="src.RCXTempTest.dir">Must set src.RCXTempTest.dir</fail>
        <fail unless="src.RemoteNXTTest.dir">Must set src.RemoteNXTTest.dir</fail>
        <fail unless="src.RFIDTest.dir">Must set src.RFIDTest.dir</fail>
        <fail unless="src.SignalTest.dir">Must set src.SignalTest.dir</fail>
        <fail unless="src.SocketTest.dir">Must set src.SocketTest.dir</fail>
        <fail unless="src.SonicTest.dir">Must set src.SonicTest.dir</fail>
        <fail unless="src.SoundSample.dir">Must set src.SoundSample.dir</fail>
        <fail unless="src.SpeedTest.dir">Must set src.SpeedTest.dir</fail>
        <fail unless="src.Subsumption1.dir">Must set src.Subsumption1.dir</fail>
        <fail unless="src.Subsumption2.dir">Must set src.Subsumption2.dir</fail>
        <fail unless="src.TiltTest.dir">Must set src.TiltTest.dir</fail>
        <fail unless="src.TimeTest.dir">Must set src.TimeTest.dir</fail>
        <fail unless="src.Tune.dir">Must set src.Tune.dir</fail>
        <fail unless="src.USBReceive.dir">Must set src.USBReceive.dir</fail>
        <fail unless="src.View.dir">Must set src.View.dir</fail>
        <fail unless="src.WaypointNav.dir">Must set src.WaypointNav.dir</fail>
        <fail unless="build.dir">Must set build.dir</fail>
        <fail unless="dist.dir">Must set dist.dir</fail>
        <fail unless="build.classes.dir">Must set build.classes.dir</fail>
        <fail unless="dist.javadoc.dir">Must set dist.javadoc.dir</fail>
        <fail unless="build.test.classes.dir">Must set build.test.classes.dir</fail>
        <fail unless="build.test.results.dir">Must set build.test.results.dir</fail>
        <fail unless="build.classes.excludes">Must set build.classes.excludes</fail>
        <fail unless="dist.jar">Must set dist.jar</fail>
    </target>
    <target name="-init-macrodef-property">
        <macrodef name="property" uri="http://www.netbeans.org/ns/j2se-project/1">
            <attribute name="name"/>
            <attribute name="value"/>
            <sequential>
                <property name="@{name}" value="${@{value}}"/>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-javac">
        <macrodef name="javac" uri="http://www.netbeans.org/ns/j2se-project/3">
            <attribute default="${src.BlueStats.dir}:${src.BTConnectTest.dir}:${src.BTGPS.dir}:${src.BTReceive.dir}:${src.BumperCar.dir}:${src.BumpNavigator.dir}:${src.ColorSensorTest.dir}:${src.ColorDetector.dir}:${src.CommandLine.dir}:${src.CompassTest.dir}:${src.DistanceTest.dir}:${src.DLTest.dir}:${src.EchoNavigator.dir}:${src.ExceptionTest.dir}:${src.FileTest.dir}:${src.GPSInfo.dir}:${src.GraphicsSample.dir}:${src.HelloWorld.dir}:${src.Homer.dir}:${src.I2CDevices.dir}:${src.KalmanTest.dir}:${src.LatteboxTest.dir}:${src.LCDUI.dir}:${src.Line.dir}:${src.Listen.dir}:${src.LLCMonitor.dir}:${src.MatrixTest.dir}:${src.MemoryTest.dir}:${src.MonitorTest.dir}:${src.NXTCamTest.dir}:${src.NXTConnectTest.dir}:${src.NXTLCPRespond.dir}:${src.NXTReceive.dir}:${src.NXTServoTest.dir}:${src.ObstacleNavigator.dir}:${src.PerformanceTest.dir}:${src.PFLinkTest.dir}:${src.PFMateTest.dir}:${src.PFTest.dir}:${src.PilotTester.dir}:${src.RCNavigator.dir}:${src.RCXEmulator.dir}:${src.RCXMMTest.dir}:${src.RCXMuxTest.dir}:${src.RCXPortTest.dir}:${src.RCXRemote.dir}:${src.RCXRemoteMotor.dir}:${src.RCXTempTest.dir}:${src.RemoteNXTTest.dir}:${src.RFIDTest.dir}:${src.SignalTest.dir}:${src.SocketTest.dir}:${src.SonicTest.dir}:${src.SoundSample.dir}:${src.SpeedTest.dir}:${src.Subsumption1.dir}:${src.Subsumption2.dir}:${src.TiltTest.dir}:${src.TimeTest.dir}:${src.Tune.dir}:${src.USBReceive.dir}:${src.View.dir}:${src.WaypointNav.dir}" name="srcdir"/>
            <attribute default="${build.classes.dir}" name="destdir"/>
            <attribute default="${javac.classpath}" name="classpath"/>
            <attribute default="${includes}" name="includes"/>
            <attribute default="${excludes}" name="excludes"/>
            <attribute default="${javac.debug}" name="debug"/>
            <attribute default="/does/not/exist" name="sourcepath"/>
            <element name="customize" optional="true"/>
            <sequential>
                <javac debug="@{debug}" deprecation="${javac.deprecation}" destdir="@{destdir}" encoding="${source.encoding}" excludes="@{excludes}" includeantruntime="false" includes="@{includes}" source="${javac.source}" sourcepath="@{sourcepath}" srcdir="@{srcdir}" target="${javac.target}">
                    <classpath>
                        <path path="@{classpath}"/>
                    </classpath>
                    <compilerarg line="${javac.compilerargs} ${javac.compilerargs.jaxws}"/>
                    <customize/>
                </javac>
            </sequential>
        </macrodef>
        <macrodef name="depend" uri="http://www.netbeans.org/ns/j2se-project/3">
            <attribute default="${src.BlueStats.dir}:${src.BTConnectTest.dir}:${src.BTGPS.dir}:${src.BTReceive.dir}:${src.BumperCar.dir}:${src.BumpNavigator.dir}:${src.ColorSensorTest.dir}:${src.ColorDetector.dir}:${src.CommandLine.dir}:${src.CompassTest.dir}:${src.DistanceTest.dir}:${src.DLTest.dir}:${src.EchoNavigator.dir}:${src.ExceptionTest.dir}:${src.FileTest.dir}:${src.GPSInfo.dir}:${src.GraphicsSample.dir}:${src.HelloWorld.dir}:${src.Homer.dir}:${src.I2CDevices.dir}:${src.KalmanTest.dir}:${src.LatteboxTest.dir}:${src.LCDUI.dir}:${src.Line.dir}:${src.Listen.dir}:${src.LLCMonitor.dir}:${src.MatrixTest.dir}:${src.MemoryTest.dir}:${src.MonitorTest.dir}:${src.NXTCamTest.dir}:${src.NXTConnectTest.dir}:${src.NXTLCPRespond.dir}:${src.NXTReceive.dir}:${src.NXTServoTest.dir}:${src.ObstacleNavigator.dir}:${src.PerformanceTest.dir}:${src.PFLinkTest.dir}:${src.PFMateTest.dir}:${src.PFTest.dir}:${src.PilotTester.dir}:${src.RCNavigator.dir}:${src.RCXEmulator.dir}:${src.RCXMMTest.dir}:${src.RCXMuxTest.dir}:${src.RCXPortTest.dir}:${src.RCXRemote.dir}:${src.RCXRemoteMotor.dir}:${src.RCXTempTest.dir}:${src.RemoteNXTTest.dir}:${src.RFIDTest.dir}:${src.SignalTest.dir}:${src.SocketTest.dir}:${src.SonicTest.dir}:${src.SoundSample.dir}:${src.SpeedTest.dir}:${src.Subsumption1.dir}:${src.Subsumption2.dir}:${src.TiltTest.dir}:${src.TimeTest.dir}:${src.Tune.dir}:${src.USBReceive.dir}:${src.View.dir}:${src.WaypointNav.dir}" name="srcdir"/>
            <attribute default="${build.classes.dir}" name="destdir"/>
            <attribute default="${javac.classpath}" name="classpath"/>
            <sequential>
                <depend cache="${build.dir}/depcache" destdir="@{destdir}" excludes="${excludes}" includes="${includes}" srcdir="@{srcdir}">
                    <classpath>
                        <path path="@{classpath}"/>
                    </classpath>
                </depend>
            </sequential>
        </macrodef>
        <macrodef name="force-recompile" uri="http://www.netbeans.org/ns/j2se-project/3">
            <attribute default="${build.classes.dir}" name="destdir"/>
            <sequential>
                <fail unless="javac.includes">Must set javac.includes</fail>
                <pathconvert pathsep="," property="javac.includes.binary">
                    <path>
                        <filelist dir="@{destdir}" files="${javac.includes}"/>
                    </path>
                    <globmapper from="*.java" to="*.class"/>
                </pathconvert>
                <delete>
                    <files includes="${javac.includes.binary}"/>
                </delete>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-junit">
        <macrodef name="junit" uri="http://www.netbeans.org/ns/j2se-project/3">
            <attribute default="${includes}" name="includes"/>
            <attribute default="${excludes}" name="excludes"/>
            <attribute default="**" name="testincludes"/>
            <sequential>
                <junit dir="${work.dir}" errorproperty="tests.failed" failureproperty="tests.failed" fork="true" showoutput="true">
                    <batchtest todir="${build.test.results.dir}"/>
                    <classpath>
                        <path path="${run.test.classpath}"/>
                    </classpath>
                    <syspropertyset>
                        <propertyref prefix="test-sys-prop."/>
                        <mapper from="test-sys-prop.*" to="*" type="glob"/>
                    </syspropertyset>
                    <formatter type="brief" usefile="false"/>
                    <formatter type="xml"/>
                    <jvmarg line="${run.jvmargs}"/>
                </junit>
            </sequential>
        </macrodef>
    </target>
    <target depends="-init-debug-args" name="-init-macrodef-nbjpda">
        <macrodef name="nbjpdastart" uri="http://www.netbeans.org/ns/j2se-project/1">
            <attribute default="${main.class}" name="name"/>
            <attribute default="${debug.classpath}" name="classpath"/>
            <attribute default="" name="stopclassname"/>
            <sequential>
                <nbjpdastart addressproperty="jpda.address" name="@{name}" stopclassname="@{stopclassname}" transport="${debug-transport}">
                    <classpath>
                        <path path="@{classpath}"/>
                    </classpath>
                </nbjpdastart>
            </sequential>
        </macrodef>
        <macrodef name="nbjpdareload" uri="http://www.netbeans.org/ns/j2se-project/1">
            <attribute default="${build.classes.dir}" name="dir"/>
            <sequential>
                <nbjpdareload>
                    <fileset dir="@{dir}" includes="${fix.classes}">
                        <include name="${fix.includes}*.class"/>
                    </fileset>
                </nbjpdareload>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-debug-args">
        <property name="version-output" value="java version &quot;${ant.java.version}"/>
        <condition property="have-jdk-older-than-1.4">
            <or>
                <contains string="${version-output}" substring="java version &quot;1.0"/>
                <contains string="${version-output}" substring="java version &quot;1.1"/>
                <contains string="${version-output}" substring="java version &quot;1.2"/>
                <contains string="${version-output}" substring="java version &quot;1.3"/>
            </or>
        </condition>
        <condition else="-Xdebug" property="debug-args-line" value="-Xdebug -Xnoagent -Djava.compiler=none">
            <istrue value="${have-jdk-older-than-1.4}"/>
        </condition>
        <condition else="dt_socket" property="debug-transport-by-os" value="dt_shmem">
            <os family="windows"/>
        </condition>
        <condition else="${debug-transport-by-os}" property="debug-transport" value="${debug.transport}">
            <isset property="debug.transport"/>
        </condition>
    </target>
    <target depends="-init-debug-args" name="-init-macrodef-debug">
        <macrodef name="debug" uri="http://www.netbeans.org/ns/j2se-project/3">
            <attribute default="${main.class}" name="classname"/>
            <attribute default="${debug.classpath}" name="classpath"/>
            <element name="customize" optional="true"/>
            <sequential>
                <java classname="@{classname}" dir="${work.dir}" fork="true">
                    <jvmarg line="${debug-args-line}"/>
                    <jvmarg value="-Xrunjdwp:transport=${debug-transport},address=${jpda.address}"/>
                    <jvmarg line="${run.jvmargs}"/>
                    <classpath>
                        <path path="@{classpath}"/>
                    </classpath>
                    <syspropertyset>
                        <propertyref prefix="run-sys-prop."/>
                        <mapper from="run-sys-prop.*" to="*" type="glob"/>
                    </syspropertyset>
                    <customize/>
                </java>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-java">
        <macrodef name="java" uri="http://www.netbeans.org/ns/j2se-project/1">
            <attribute default="${main.class}" name="classname"/>
            <element name="customize" optional="true"/>
            <sequential>
                <java classname="@{classname}" dir="${work.dir}" fork="true">
                    <jvmarg line="${run.jvmargs}"/>
                    <classpath>
                        <path path="${run.classpath}"/>
                    </classpath>
                    <syspropertyset>
                        <propertyref prefix="run-sys-prop."/>
                        <mapper from="run-sys-prop.*" to="*" type="glob"/>
                    </syspropertyset>
                    <customize/>
                </java>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-presetdef-jar">
        <presetdef name="jar" uri="http://www.netbeans.org/ns/j2se-project/1">
            <jar compress="${jar.compress}" jarfile="${dist.jar}">
                <j2seproject1:fileset dir="${build.classes.dir}"/>
            </jar>
        </presetdef>
    </target>
    <target depends="-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-junit,-init-macrodef-nbjpda,-init-macrodef-debug,-init-macrodef-java,-init-presetdef-jar" name="init"/>
    <!--
                ===================
                COMPILATION SECTION
                ===================
            -->
    <target depends="init" name="deps-jar" unless="no.deps"/>
    <target depends="init,-check-automatic-build,-clean-after-automatic-build" name="-verify-automatic-build"/>
    <target depends="init" name="-check-automatic-build">
        <available file="${build.classes.dir}/.netbeans_automatic_build" property="netbeans.automatic.build"/>
    </target>
    <target depends="init" if="netbeans.automatic.build" name="-clean-after-automatic-build">
        <antcall target="clean"/>
    </target>
    <target depends="init,deps-jar" name="-pre-pre-compile">
        <mkdir dir="${build.classes.dir}"/>
    </target>
    <target name="-pre-compile">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target if="do.depend.true" name="-compile-depend">
        <j2seproject3:depend/>
    </target>
    <target depends="init,deps-jar,-pre-pre-compile,-pre-compile,-compile-depend" if="have.sources" name="-do-compile">
        <j2seproject3:javac/>
        <copy todir="${build.classes.dir}">
            <fileset dir="${src.BlueStats.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.BTConnectTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.BTGPS.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.BTReceive.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.BumperCar.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.BumpNavigator.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.ColorSensorTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.ColorDetector.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.CommandLine.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.CompassTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.DistanceTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.DLTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.EchoNavigator.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.ExceptionTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.FileTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.GPSInfo.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.GraphicsSample.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.HelloWorld.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.Homer.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.I2CDevices.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.KalmanTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.LatteboxTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.LCDUI.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.Line.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.Listen.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.LLCMonitor.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.MatrixTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.MemoryTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.MonitorTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.NXTCamTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.NXTConnectTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.NXTLCPRespond.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.NXTReceive.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.NXTServoTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.ObstacleNavigator.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.PerformanceTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.PFLinkTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.PFMateTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.PFTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.PilotTester.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.RCNavigator.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.RCXEmulator.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.RCXMMTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.RCXMuxTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.RCXPortTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.RCXRemote.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.RCXRemoteMotor.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.RCXTempTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.RemoteNXTTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.RFIDTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.SignalTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.SocketTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.SonicTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.SoundSample.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.SpeedTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.Subsumption1.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.Subsumption2.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.TiltTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.TimeTest.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.Tune.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.USBReceive.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.View.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
            <fileset dir="${src.WaypointNav.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
        </copy>
    </target>
    <target name="-post-compile">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile,-do-compile,-post-compile" description="Compile project." name="compile"/>
    <target name="-pre-compile-single">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="init,deps-jar,-pre-pre-compile" name="-do-compile-single">
        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
        <j2seproject3:force-recompile/>
        <j2seproject3:javac excludes="" includes="${javac.includes}" sourcepath="${src.BlueStats.dir}:${src.BTConnectTest.dir}:${src.BTGPS.dir}:${src.BTReceive.dir}:${src.BumperCar.dir}:${src.BumpNavigator.dir}:${src.ColorSensorTest.dir}:${src.ColorDetector.dir}:${src.CommandLine.dir}:${src.CompassTest.dir}:${src.DistanceTest.dir}:${src.DLTest.dir}:${src.EchoNavigator.dir}:${src.ExceptionTest.dir}:${src.FileTest.dir}:${src.GPSInfo.dir}:${src.GraphicsSample.dir}:${src.HelloWorld.dir}:${src.Homer.dir}:${src.I2CDevices.dir}:${src.KalmanTest.dir}:${src.LatteboxTest.dir}:${src.LCDUI.dir}:${src.Line.dir}:${src.Listen.dir}:${src.LLCMonitor.dir}:${src.MatrixTest.dir}:${src.MemoryTest.dir}:${src.MonitorTest.dir}:${src.NXTCamTest.dir}:${src.NXTConnectTest.dir}:${src.NXTLCPRespond.dir}:${src.NXTReceive.dir}:${src.NXTServoTest.dir}:${src.ObstacleNavigator.dir}:${src.PerformanceTest.dir}:${src.PFLinkTest.dir}:${src.PFMateTest.dir}:${src.PFTest.dir}:${src.PilotTester.dir}:${src.RCNavigator.dir}:${src.RCXEmulator.dir}:${src.RCXMMTest.dir}:${src.RCXMuxTest.dir}:${src.RCXPortTest.dir}:${src.RCXRemote.dir}:${src.RCXRemoteMotor.dir}:${src.RCXTempTest.dir}:${src.RemoteNXTTest.dir}:${src.RFIDTest.dir}:${src.SignalTest.dir}:${src.SocketTest.dir}:${src.SonicTest.dir}:${src.SoundSample.dir}:${src.SpeedTest.dir}:${src.Subsumption1.dir}:${src.Subsumption2.dir}:${src.TiltTest.dir}:${src.TimeTest.dir}:${src.Tune.dir}:${src.USBReceive.dir}:${src.View.dir}:${src.WaypointNav.dir}"/>
    </target>
    <target name="-post-compile-single">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile-single,-do-compile-single,-post-compile-single" name="compile-single"/>
    <!--
                ====================
                JAR BUILDING SECTION
                ====================
            -->
    <target depends="init" name="-pre-pre-jar">
        <dirname file="${dist.jar}" property="dist.jar.dir"/>
        <mkdir dir="${dist.jar.dir}"/>
    </target>
    <target name="-pre-jar">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="init,compile,-pre-pre-jar,-pre-jar" name="-do-jar-without-manifest" unless="manifest.available">
        <j2seproject1:jar/>
    </target>
    <target depends="init,compile,-pre-pre-jar,-pre-jar" if="manifest.available" name="-do-jar-with-manifest" unless="manifest.available+main.class">
        <j2seproject1:jar manifest="${manifest.file}"/>
    </target>
    <target depends="init,compile,-pre-pre-jar,-pre-jar" if="manifest.available+main.class" name="-do-jar-with-mainclass" unless="manifest.available+main.class+mkdist.available">
        <j2seproject1:jar manifest="${manifest.file}">
            <j2seproject1:manifest>
                <j2seproject1:attribute name="Main-Class" value="${main.class}"/>
            </j2seproject1:manifest>
        </j2seproject1:jar>
        <echo>To run this application from the command line without Ant, try:</echo>
        <property location="${build.classes.dir}" name="build.classes.dir.resolved"/>
        <property location="${dist.jar}" name="dist.jar.resolved"/>
        <pathconvert property="run.classpath.with.dist.jar">
            <path path="${run.classpath}"/>
            <map from="${build.classes.dir.resolved}" to="${dist.jar.resolved}"/>
        </pathconvert>
        <echo>java -cp "${run.classpath.with.dist.jar}" ${main.class}</echo>
    </target>
    <target depends="init,compile,-pre-pre-jar,-pre-jar" if="manifest.available+main.class+mkdist.available" name="-do-jar-with-libraries">
        <property location="${build.classes.dir}" name="build.classes.dir.resolved"/>
        <pathconvert property="run.classpath.without.build.classes.dir">
            <path path="${run.classpath}"/>
            <map from="${build.classes.dir.resolved}" to=""/>
        </pathconvert>
        <pathconvert pathsep=" " property="jar.classpath">
            <path path="${run.classpath.without.build.classes.dir}"/>
            <chainedmapper>
                <flattenmapper/>
                <globmapper from="*" to="lib/*"/>
            </chainedmapper>
        </pathconvert>
        <taskdef classname="org.netbeans.modules.java.j2seproject.copylibstask.CopyLibs" classpath="${libs.CopyLibs.classpath}" name="copylibs"/>
        <copylibs compress="${jar.compress}" jarfile="${dist.jar}" manifest="${manifest.file}" runtimeclasspath="${run.classpath.without.build.classes.dir}">
            <fileset dir="${build.classes.dir}"/>
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
                <attribute name="Class-Path" value="${jar.classpath}"/>
            </manifest>
        </copylibs>
        <echo>To run this application from the command line without Ant, try:</echo>
        <property location="${dist.jar}" name="dist.jar.resolved"/>
        <echo>java -jar "${dist.jar.resolved}"</echo>
    </target>
    <target name="-post-jar">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="init,compile,-pre-jar,-do-jar-with-manifest,-do-jar-without-manifest,-do-jar-with-mainclass,-do-jar-with-libraries,-post-jar" description="Build JAR." name="jar"/>
    <!--
                =================
                EXECUTION SECTION
                =================
            -->
    <target depends="init,compile" description="Run a main class." name="run">
        <j2seproject1:java>
            <customize>
                <arg line="${application.args}"/>
            </customize>
        </j2seproject1:java>
    </target>
    <target name="-do-not-recompile">
        <property name="javac.includes.binary" value=""/>
    </target>
    <target depends="init,-do-not-recompile,compile-single" name="run-single">
        <fail unless="run.class">Must select one file in the IDE or set run.class</fail>
        <j2seproject1:java classname="${run.class}"/>
    </target>
    <!--
                =================
                DEBUGGING SECTION
                =================
            -->
    <target depends="init" if="netbeans.home" name="-debug-start-debugger">
        <j2seproject1:nbjpdastart name="${debug.class}"/>
    </target>
    <target depends="init,compile" name="-debug-start-debuggee">
        <j2seproject3:debug>
            <customize>
                <arg line="${application.args}"/>
            </customize>
        </j2seproject3:debug>
    </target>
    <target depends="init,compile,-debug-start-debugger,-debug-start-debuggee" description="Debug project in IDE." if="netbeans.home" name="debug"/>
    <target depends="init" if="netbeans.home" name="-debug-start-debugger-stepinto">
        <j2seproject1:nbjpdastart stopclassname="${main.class}"/>
    </target>
    <target depends="init,compile,-debug-start-debugger-stepinto,-debug-start-debuggee" if="netbeans.home" name="debug-stepinto"/>
    <target depends="init,compile-single" if="netbeans.home" name="-debug-start-debuggee-single">
        <fail unless="debug.class">Must select one file in the IDE or set debug.class</fail>
        <j2seproject3:debug classname="${debug.class}"/>
    </target>
    <target depends="init,-do-not-recompile,compile-single,-debug-start-debugger,-debug-start-debuggee-single" if="netbeans.home" name="debug-single"/>
    <target depends="init" name="-pre-debug-fix">
        <fail unless="fix.includes">Must set fix.includes</fail>
        <property name="javac.includes" value="${fix.includes}.java"/>
    </target>
    <target depends="init,-pre-debug-fix,compile-single" if="netbeans.home" name="-do-debug-fix">
        <j2seproject1:nbjpdareload/>
    </target>
    <target depends="init,-pre-debug-fix,-do-debug-fix" if="netbeans.home" name="debug-fix"/>
    <!--
                ===============
                JAVADOC SECTION
                ===============
            -->
    <target depends="init" name="-javadoc-build">
        <mkdir dir="${dist.javadoc.dir}"/>
        <javadoc additionalparam="${javadoc.additionalparam}" author="${javadoc.author}" charset="UTF-8" destdir="${dist.javadoc.dir}" docencoding="UTF-8" encoding="${javadoc.encoding.used}" failonerror="true" noindex="${javadoc.noindex}" nonavbar="${javadoc.nonavbar}" notree="${javadoc.notree}" private="${javadoc.private}" source="${javac.source}" splitindex="${javadoc.splitindex}" use="${javadoc.use}" useexternalfile="true" version="${javadoc.version}" windowtitle="${javadoc.windowtitle}">
            <classpath>
                <path path="${javac.classpath}"/>
            </classpath>
            <fileset dir="${src.BlueStats.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.BTConnectTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.BTGPS.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.BTReceive.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.BumperCar.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.BumpNavigator.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.ColorSensorTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.ColorDetector.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.CommandLine.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.CompassTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.DistanceTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.DLTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.EchoNavigator.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.ExceptionTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.FileTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.GPSInfo.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.GraphicsSample.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.HelloWorld.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.Homer.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.I2CDevices.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.KalmanTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.LatteboxTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.LCDUI.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.Line.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.Listen.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.LLCMonitor.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.MatrixTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.MemoryTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.MonitorTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.NXTCamTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.NXTConnectTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.NXTLCPRespond.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.NXTReceive.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.NXTServoTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.ObstacleNavigator.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.PerformanceTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.PFLinkTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.PFMateTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.PFTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.PilotTester.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.RCNavigator.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.RCXEmulator.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.RCXMMTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.RCXMuxTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.RCXPortTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.RCXRemote.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.RCXRemoteMotor.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.RCXTempTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.RemoteNXTTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.RFIDTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.SignalTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.SocketTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.SonicTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.SoundSample.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.SpeedTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.Subsumption1.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.Subsumption2.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.TiltTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.TimeTest.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.Tune.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.USBReceive.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.View.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
            <fileset dir="${src.WaypointNav.dir}" excludes="${excludes}" includes="${includes}">
                <filename name="**/*.java"/>
            </fileset>
        </javadoc>
    </target>
    <target depends="init,-javadoc-build" if="netbeans.home" name="-javadoc-browse" unless="no.javadoc.preview">
        <nbbrowse file="${dist.javadoc.dir}/index.html"/>
    </target>
    <target depends="init,-javadoc-build,-javadoc-browse" description="Build Javadoc." name="javadoc"/>
    <!--
                =========================
                JUNIT COMPILATION SECTION
                =========================
            -->
    <target depends="init,compile" if="have.tests" name="-pre-pre-compile-test">
        <mkdir dir="${build.test.classes.dir}"/>
    </target>
    <target name="-pre-compile-test">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target if="do.depend.true" name="-compile-test-depend">
        <j2seproject3:depend classpath="${javac.test.classpath}" destdir="${build.test.classes.dir}" srcdir=""/>
    </target>
    <target depends="init,compile,-pre-pre-compile-test,-pre-compile-test,-compile-test-depend" if="have.tests" name="-do-compile-test">
        <j2seproject3:javac classpath="${javac.test.classpath}" debug="true" destdir="${build.test.classes.dir}" srcdir=""/>
        <copy todir="${build.test.classes.dir}"/>
    </target>
    <target name="-post-compile-test">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="init,compile,-pre-pre-compile-test,-pre-compile-test,-do-compile-test,-post-compile-test" name="compile-test"/>
    <target name="-pre-compile-test-single">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="init,compile,-pre-pre-compile-test,-pre-compile-test-single" if="have.tests" name="-do-compile-test-single">
        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
        <j2seproject3:force-recompile destdir="${build.test.classes.dir}"/>
        <j2seproject3:javac classpath="${javac.test.classpath}" debug="true" destdir="${build.test.classes.dir}" excludes="" includes="${javac.includes}" sourcepath="" srcdir=""/>
        <copy todir="${build.test.classes.dir}"/>
    </target>
    <target name="-post-compile-test-single">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="init,compile,-pre-pre-compile-test,-pre-compile-test-single,-do-compile-test-single,-post-compile-test-single" name="compile-test-single"/>
    <!--
                =======================
                JUNIT EXECUTION SECTION
                =======================
            -->
    <target depends="init" if="have.tests" name="-pre-test-run">
        <mkdir dir="${build.test.results.dir}"/>
    </target>
    <target depends="init,compile-test,-pre-test-run" if="have.tests" name="-do-test-run">
        <j2seproject3:junit testincludes="**/*Test.java"/>
    </target>
    <target depends="init,compile-test,-pre-test-run,-do-test-run" if="have.tests" name="-post-test-run">
        <fail if="tests.failed">Some tests failed; see details above.</fail>
    </target>
    <target depends="init" if="have.tests" name="test-report"/>
    <target depends="init" if="netbeans.home+have.tests" name="-test-browse"/>
    <target depends="init,compile-test,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse" description="Run unit tests." name="test"/>
    <target depends="init" if="have.tests" name="-pre-test-run-single">
        <mkdir dir="${build.test.results.dir}"/>
    </target>
    <target depends="init,compile-test-single,-pre-test-run-single" if="have.tests" name="-do-test-run-single">
        <fail unless="test.includes">Must select some files in the IDE or set test.includes</fail>
        <j2seproject3:junit excludes="" includes="${test.includes}"/>
    </target>
    <target depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single" if="have.tests" name="-post-test-run-single">
        <fail if="tests.failed">Some tests failed; see details above.</fail>
    </target>
    <target depends="init,-do-not-recompile,compile-test-single,-pre-test-run-single,-do-test-run-single,-post-test-run-single" description="Run single unit test." name="test-single"/>
    <!--
                =======================
                JUNIT DEBUGGING SECTION
                =======================
            -->
    <target depends="init,compile-test" if="have.tests" name="-debug-start-debuggee-test">
        <fail unless="test.class">Must select one file in the IDE or set test.class</fail>
        <property location="${build.test.results.dir}/TEST-${test.class}.xml" name="test.report.file"/>
        <delete file="${test.report.file}"/>
        <mkdir dir="${build.test.results.dir}"/>
        <j2seproject3:debug classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner" classpath="${ant.home}/lib/ant.jar:${ant.home}/lib/ant-junit.jar:${debug.test.classpath}">
            <customize>
                <syspropertyset>
                    <propertyref prefix="test-sys-prop."/>
                    <mapper from="test-sys-prop.*" to="*" type="glob"/>
                </syspropertyset>
                <arg value="${test.class}"/>
                <arg value="showoutput=true"/>
                <arg value="formatter=org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter"/>
                <arg value="formatter=org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter,${test.report.file}"/>
            </customize>
        </j2seproject3:debug>
    </target>
    <target depends="init,compile-test" if="netbeans.home+have.tests" name="-debug-start-debugger-test">
        <j2seproject1:nbjpdastart classpath="${debug.test.classpath}" name="${test.class}"/>
    </target>
    <target depends="init,-do-not-recompile,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test" name="debug-test"/>
    <target depends="init,-pre-debug-fix,compile-test-single" if="netbeans.home" name="-do-debug-fix-test">
        <j2seproject1:nbjpdareload dir="${build.test.classes.dir}"/>
    </target>
    <target depends="init,-pre-debug-fix,-do-debug-fix-test" if="netbeans.home" name="debug-fix-test"/>
    <!--
                =========================
                APPLET EXECUTION SECTION
                =========================
            -->
    <target depends="init,compile-single" name="run-applet">
        <fail unless="applet.url">Must select one file in the IDE or set applet.url</fail>
        <j2seproject1:java classname="sun.applet.AppletViewer">
            <customize>
                <arg value="${applet.url}"/>
            </customize>
        </j2seproject1:java>
    </target>
    <!--
                =========================
                APPLET DEBUGGING  SECTION
                =========================
            -->
    <target depends="init,compile-single" if="netbeans.home" name="-debug-start-debuggee-applet">
        <fail unless="applet.url">Must select one file in the IDE or set applet.url</fail>
        <j2seproject3:debug classname="sun.applet.AppletViewer">
            <customize>
                <arg value="${applet.url}"/>
            </customize>
        </j2seproject3:debug>
    </target>
    <target depends="init,compile-single,-debug-start-debugger,-debug-start-debuggee-applet" if="netbeans.home" name="debug-applet"/>
    <!--
                ===============
                CLEANUP SECTION
                ===============
            -->
    <target depends="init" name="deps-clean" unless="no.deps"/>
    <target depends="init" name="-do-clean">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>
    <target name="-post-clean">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="init,deps-clean,-do-clean,-post-clean" description="Clean build products." name="clean"/>
</project>
