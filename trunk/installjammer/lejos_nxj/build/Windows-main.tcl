## $Id$
##
## BEGIN LICENSE BLOCK
##
## Copyright (C) 2002  Damon Courtney
## 
## This program is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License
## version 2 as published by the Free Software Foundation.
## 
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License version 2 for more details.
## 
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the
##     Free Software Foundation, Inc.
##     51 Franklin Street, Fifth Floor
##     Boston, MA  02110-1301, USA.
##
## END LICENSE BLOCK

if {[info exists ::InstallJammer]} { return }

namespace eval ::InstallAPI {}
namespace eval ::InstallJammer {}

set ::debug   0
set ::verbose 0

set ::conf(osx)      [string equal $::tcl_platform(os) "Darwin"]
set ::conf(unix)     [string equal $::tcl_platform(platform) "unix"]
set ::conf(windows)  [string equal $::tcl_platform(platform) "windows"]

set ::conf(threaded) [info exists ::tcl_platform(threaded)]

set ::info(Testing)   0
set ::info(Debugging) 0

## Trace the virtual text array for changes and execute any
## attached commands or auto-update actions.
trace add variable ::info write ::InstallJammer::VirtualTextTrace

proc ::InstallJammer::VirtualTextTrace { name1 name2 op } {
    upvar #0 ::info($name2) var

    if {[info exists ::InstallJammer::UpdateVarCmds($name2)]} {
        foreach cmd $::InstallJammer::UpdateVarCmds($name2) {
            uplevel #0 $cmd
        }
    }

    if {[info exists ::InstallJammer::AutoUpdateVars($name2)]
        && $var ne $::InstallJammer::AutoUpdateVars($name2)} {
        set ::InstallJammer::AutoUpdateVars($name2) $var
        ::InstallJammer::UpdateWidgets -updateidletasks 1
    }
}

proc ::InstallJammer::SourceCachedFile { file {namespace "::"} } {
    if {[info exists ::InstallJammer::files($file)]} {
        namespace eval $namespace $::InstallJammer::files($file)
        return 1
    }
    return 0
}

namespace eval ::InstallAPI {}
namespace eval ::InstallJammer {}
set conf(version)     1.2.9
set info(Platform)    Windows
set info(InstallerID) 4D4F5E6B-8B2C-4AF8-BD61-B7E2A326002D
array set ::InstallJammer::languagecodes {en English}
array set info {
AllowLanguageSelection
No

AppName
{leJOS NXJ}

ApplicationID
253252E2-EFAE-4AA8-96B6-0828619E536C

ApplicationURL
{}

BuildVersion
0

CancelledInstallAction
{Rollback and Stop}

CleanupCancelledInstall
Yes

Company
lejos.org

CompressionMethod
zlib

Copyright
{}

DefaultLanguage
English

ExtractSolidArchivesOnStartup
No

Icon
Modern/Small/SetupModernSmall01.gif

Image
Modern/SetupModern01.gif

IncludeDebugging
Yes

InstallDir
<%PROGRAM_FILES%>/<%AppName%>

InstallMode
Standard

InstallType
Typical

InstallVersion
0.6.0.0

MajorVersion
1

MinorVersion
0

PackageDescription
{}

PackageLicense
{}

PackageMaintainer
{}

PackageName
<%ShortAppName%>

PackagePackager
{}

PackageRelease
<%PatchVersion%>

PackageSummary
{}

PackageVersion
<%MajorVersion%>.<%MinorVersion%>

PatchVersion
0

ProgramExecutable
{}

ProgramFolderAllUsers
No

ProgramFolderName
<%AppName%>

ProgramLicense
<%InstallDir%>/LICENSE

ProgramName
{}

ProgramReadme
<%InstallDir%>/README.html

ShortAppName
{leJOS NXJ}

UpgradeApplicationID
{}

Version
0.6

WizardHeight
365

WizardWidth
500

}
array set ::InstallJammer::CommandLineOptions {
debug
{Debugging Switch Yes No {} {run installer in debug mode}}

debugconsole
{ShowConsole Switch Yes No {} {run installer with a debug console open}}

mode
{InstallMode Choice No No {Console Default Silent Standard} {set the mode to run the installer in}}

prefix
{InstallDir String No No {} {set the installation directory}}

test
{Testing Switch Yes No {} {run installer without installing any files}}

}
array set ::InstallJammer::Properties {
0B440438-4277-4EF2-AEC5-724E6AE64293,Active
Yes

0B440438-4277-4EF2-AEC5-724E6AE64293,Comments
{}

0B440438-4277-4EF2-AEC5-724E6AE64293,Component
{}

0B440438-4277-4EF2-AEC5-724E6AE64293,Conditions
{1 condition}

0B440438-4277-4EF2-AEC5-724E6AE64293,Contact
{}

0B440438-4277-4EF2-AEC5-724E6AE64293,DisplayIcon
<%ProgramExecutable%>

0B440438-4277-4EF2-AEC5-724E6AE64293,DisplayName
<%AppName%>

0B440438-4277-4EF2-AEC5-724E6AE64293,DisplayVersion
<%Version%>

0B440438-4277-4EF2-AEC5-724E6AE64293,ExecuteAction
1

0B440438-4277-4EF2-AEC5-724E6AE64293,HelpLink
{}

0B440438-4277-4EF2-AEC5-724E6AE64293,HelpTelephone
{}

0B440438-4277-4EF2-AEC5-724E6AE64293,ID
{}

0B440438-4277-4EF2-AEC5-724E6AE64293,IgnoreErrors
No

0B440438-4277-4EF2-AEC5-724E6AE64293,Include
0

0B440438-4277-4EF2-AEC5-724E6AE64293,InstallDate
{<%Date %Y%m%d%>}

0B440438-4277-4EF2-AEC5-724E6AE64293,InstallLocation
<%InstallDir%>

0B440438-4277-4EF2-AEC5-724E6AE64293,InstallSource
<%InstallSource%>

0B440438-4277-4EF2-AEC5-724E6AE64293,Publisher
<%Company%>

0B440438-4277-4EF2-AEC5-724E6AE64293,QuietUninstallString
{<%Uninstaller%> -S}

0B440438-4277-4EF2-AEC5-724E6AE64293,Readme
<%ProgramReadme%>

0B440438-4277-4EF2-AEC5-724E6AE64293,RegistryKeyName
<%ApplicationID%>

0B440438-4277-4EF2-AEC5-724E6AE64293,URLInfoAbout
<%ApplicationURL%>

0B440438-4277-4EF2-AEC5-724E6AE64293,URLUpdateInfo
<%ApplicationURL%>

0B440438-4277-4EF2-AEC5-724E6AE64293,UninstallString
<%Uninstaller%>

0CF8A941-C6B7-4DF9-8DEB-BE87A57CA285,Active
Yes

0CF8A941-C6B7-4DF9-8DEB-BE87A57CA285,Component
{}

0CF8A941-C6B7-4DF9-8DEB-BE87A57CA285,Conditions
{1 condition}

0CF8A941-C6B7-4DF9-8DEB-BE87A57CA285,ExecuteAction
1

0CF8A941-C6B7-4DF9-8DEB-BE87A57CA285,ID
{}

0CF8A941-C6B7-4DF9-8DEB-BE87A57CA285,IgnoreErrors
No

0CF8A941-C6B7-4DF9-8DEB-BE87A57CA285,Include
0

0CF8A941-C6B7-4DF9-8DEB-BE87A57CA285,Message
<%BuildUninstallText%>

0CF8A941-C6B7-4DF9-8DEB-BE87A57CA285,UninstallDirectory
<%InstallDir%>

0CF8A941-C6B7-4DF9-8DEB-BE87A57CA285,UninstallFilename
uninstall<%Ext%>

15DAE539-105B-4492-B815-135A1843117F,Active
Yes

15DAE539-105B-4492-B815-135A1843117F,Checked
Yes

15DAE539-105B-4492-B815-135A1843117F,ComponentGroup
{}

15DAE539-105B-4492-B815-135A1843117F,Description,subst
1

15DAE539-105B-4492-B815-135A1843117F,DisplayName,subst
1

15DAE539-105B-4492-B815-135A1843117F,FileGroups
20C58F69-C30F-497D-A4BA-E1B395EC15A7

15DAE539-105B-4492-B815-135A1843117F,ID
{}

15DAE539-105B-4492-B815-135A1843117F,Name
{Default Component}

15DAE539-105B-4492-B815-135A1843117F,RequiredComponent
Yes

15DAE539-105B-4492-B815-135A1843117F,ShowComponent
Yes

15DAE539-105B-4492-B815-135A1843117F,Size
{}

16C944AD-C102-410B-A75B-3C63E59429F4,Active
Yes

16C944AD-C102-410B-A75B-3C63E59429F4,Component
{}

16C944AD-C102-410B-A75B-3C63E59429F4,Conditions
{}

16C944AD-C102-410B-A75B-3C63E59429F4,EchoInput
Yes

16C944AD-C102-410B-A75B-3C63E59429F4,ExecuteAction
1

16C944AD-C102-410B-A75B-3C63E59429F4,ID
{}

16C944AD-C102-410B-A75B-3C63E59429F4,IgnoreErrors
No

16C944AD-C102-410B-A75B-3C63E59429F4,Include
0

16C944AD-C102-410B-A75B-3C63E59429F4,Prompt
<%ConsoleSelectDestinationText%>

16C944AD-C102-410B-A75B-3C63E59429F4,RequireResponse
No

16C944AD-C102-410B-A75B-3C63E59429F4,TrimResult
Yes

16C944AD-C102-410B-A75B-3C63E59429F4,VirtualText
InstallDir

20C58F69-C30F-497D-A4BA-E1B395EC15A7,Active
Yes

20C58F69-C30F-497D-A4BA-E1B395EC15A7,Attributes
{}

20C58F69-C30F-497D-A4BA-E1B395EC15A7,CompressionMethod
{}

20C58F69-C30F-497D-A4BA-E1B395EC15A7,Destination
<%InstallDir%>

20C58F69-C30F-497D-A4BA-E1B395EC15A7,FileSize
11615914

20C58F69-C30F-497D-A4BA-E1B395EC15A7,FileUpdateMethod
0

20C58F69-C30F-497D-A4BA-E1B395EC15A7,ID
{}

20C58F69-C30F-497D-A4BA-E1B395EC15A7,Name
{Program Files}

20C58F69-C30F-497D-A4BA-E1B395EC15A7,Permissions
{}

20C58F69-C30F-497D-A4BA-E1B395EC15A7,Size
{}

20C58F69-C30F-497D-A4BA-E1B395EC15A7,Version
{}

2261441E-6BF0-47A7-8785-50CB585D25C1,Active
Yes

2261441E-6BF0-47A7-8785-50CB585D25C1,Component
{}

2261441E-6BF0-47A7-8785-50CB585D25C1,Conditions
{0 conditions}

2261441E-6BF0-47A7-8785-50CB585D25C1,ExecuteAction
1

2261441E-6BF0-47A7-8785-50CB585D25C1,ID
{}

2261441E-6BF0-47A7-8785-50CB585D25C1,IgnoreErrors
No

2261441E-6BF0-47A7-8785-50CB585D25C1,Include
0

22B22D81-67CF-4BFD-A7FE-5FECA55B49A4,Active
Yes

22B22D81-67CF-4BFD-A7FE-5FECA55B49A4,Component
{}

22B22D81-67CF-4BFD-A7FE-5FECA55B49A4,Conditions
{0 conditions}

22B22D81-67CF-4BFD-A7FE-5FECA55B49A4,ExecuteAction
1

22B22D81-67CF-4BFD-A7FE-5FECA55B49A4,ID
{}

22B22D81-67CF-4BFD-A7FE-5FECA55B49A4,IgnoreErrors
No

22B22D81-67CF-4BFD-A7FE-5FECA55B49A4,Include
0

22B22D81-67CF-4BFD-A7FE-5FECA55B49A4,ResultVirtualText
JDKDescription

22B22D81-67CF-4BFD-A7FE-5FECA55B49A4,TclScript
{catch { exec javac.exe -version } output
set firstline [lindex [split $output \n] 0]
set firstline [lindex [split $output :] 0]
set firstword [lindex $firstline 0]
if {$firstword != "javac"} {
  return "No JDK Installed"
}
set lastword [lindex $firstline end]
return "JDK version is $lastword"

}

2B058846-92EC-4F3C-910C-E3203A5DFEC7,Active
Yes

2B058846-92EC-4F3C-910C-E3203A5DFEC7,Component
{}

2B058846-92EC-4F3C-910C-E3203A5DFEC7,Conditions
{0 conditions}

2B058846-92EC-4F3C-910C-E3203A5DFEC7,ExecuteAction
1

2B058846-92EC-4F3C-910C-E3203A5DFEC7,ID
{}

2B058846-92EC-4F3C-910C-E3203A5DFEC7,IgnoreErrors
No

2B058846-92EC-4F3C-910C-E3203A5DFEC7,Include
0

36E6FB50-375B-4B44-A060-2120BC76845A,Active
Yes

36E6FB50-375B-4B44-A060-2120BC76845A,BackButton,subst
1

36E6FB50-375B-4B44-A060-2120BC76845A,Buttons
Back/Next/Cancel

36E6FB50-375B-4B44-A060-2120BC76845A,CancelButton,subst
1

36E6FB50-375B-4B44-A060-2120BC76845A,Caption,subst
1

36E6FB50-375B-4B44-A060-2120BC76845A,Component
{}

36E6FB50-375B-4B44-A060-2120BC76845A,Conditions
{2 conditions}

36E6FB50-375B-4B44-A060-2120BC76845A,ID
{}

36E6FB50-375B-4B44-A060-2120BC76845A,Icon
<%Icon%>

36E6FB50-375B-4B44-A060-2120BC76845A,Include
0

36E6FB50-375B-4B44-A060-2120BC76845A,Message,subst
1

36E6FB50-375B-4B44-A060-2120BC76845A,NextButton,subst
1

36E6FB50-375B-4B44-A060-2120BC76845A,Subtitle,subst
1

36E6FB50-375B-4B44-A060-2120BC76845A,Text,subst
1

36E6FB50-375B-4B44-A060-2120BC76845A,TextFont
TkTextFont

36E6FB50-375B-4B44-A060-2120BC76845A,Title,subst
0

3B468816-5F97-4C2B-AA2D-11CA99A2B3DF,Action
{Install Actions}

3B468816-5F97-4C2B-AA2D-11CA99A2B3DF,Active
Yes

3B468816-5F97-4C2B-AA2D-11CA99A2B3DF,Component
{}

3B468816-5F97-4C2B-AA2D-11CA99A2B3DF,Conditions
{}

3B468816-5F97-4C2B-AA2D-11CA99A2B3DF,EvaluateConditions
Yes

3B468816-5F97-4C2B-AA2D-11CA99A2B3DF,ExecuteAction
1

3B468816-5F97-4C2B-AA2D-11CA99A2B3DF,ID
{}

3B468816-5F97-4C2B-AA2D-11CA99A2B3DF,IgnoreErrors
No

3B468816-5F97-4C2B-AA2D-11CA99A2B3DF,Include
0

3F05A986-ED3D-4D1E-A1C7-FE825393A1BC,Action
{Install Actions}

3F05A986-ED3D-4D1E-A1C7-FE825393A1BC,Active
Yes

3F05A986-ED3D-4D1E-A1C7-FE825393A1BC,Component
{}

3F05A986-ED3D-4D1E-A1C7-FE825393A1BC,Conditions
{}

3F05A986-ED3D-4D1E-A1C7-FE825393A1BC,EvaluateConditions
Yes

3F05A986-ED3D-4D1E-A1C7-FE825393A1BC,ExecuteAction
1

3F05A986-ED3D-4D1E-A1C7-FE825393A1BC,ID
{}

3F05A986-ED3D-4D1E-A1C7-FE825393A1BC,IgnoreErrors
No

3F05A986-ED3D-4D1E-A1C7-FE825393A1BC,Include
0

3F2AAA22-FFD4-4CEA-A111-03D512B03978,Active
Yes

3F2AAA22-FFD4-4CEA-A111-03D512B03978,Component
{}

3F2AAA22-FFD4-4CEA-A111-03D512B03978,Conditions
{}

3F2AAA22-FFD4-4CEA-A111-03D512B03978,ExecuteAction
1

3F2AAA22-FFD4-4CEA-A111-03D512B03978,ExitType
Finish

3F2AAA22-FFD4-4CEA-A111-03D512B03978,ID
{}

3F2AAA22-FFD4-4CEA-A111-03D512B03978,IgnoreErrors
No

3F2AAA22-FFD4-4CEA-A111-03D512B03978,Include
0

407A22BB-EB05-4A04-9855-B8FAF6A0EF41,Active
Yes

407A22BB-EB05-4A04-9855-B8FAF6A0EF41,CheckCondition
7

407A22BB-EB05-4A04-9855-B8FAF6A0EF41,Component
{}

407A22BB-EB05-4A04-9855-B8FAF6A0EF41,FailureFocus
{}

407A22BB-EB05-4A04-9855-B8FAF6A0EF41,FailureMessage
<%DirectoryPermissionText%>

407A22BB-EB05-4A04-9855-B8FAF6A0EF41,Filename
<%InstallDir%>

407A22BB-EB05-4A04-9855-B8FAF6A0EF41,ID
{}

407A22BB-EB05-4A04-9855-B8FAF6A0EF41,Include
0

407A22BB-EB05-4A04-9855-B8FAF6A0EF41,Permission
{can create}

44AD6793-47A7-4193-AE57-BDDB69799092,Active
Yes

44AD6793-47A7-4193-AE57-BDDB69799092,Component
{}

44AD6793-47A7-4193-AE57-BDDB69799092,Conditions
{2 conditions}

44AD6793-47A7-4193-AE57-BDDB69799092,ConsoleTitle
{<%AppName%> Setup}

44AD6793-47A7-4193-AE57-BDDB69799092,ExecuteAction
1

44AD6793-47A7-4193-AE57-BDDB69799092,ExecuteAsRoot
No

44AD6793-47A7-4193-AE57-BDDB69799092,ExecuteInConsole
No

44AD6793-47A7-4193-AE57-BDDB69799092,ID
{}

44AD6793-47A7-4193-AE57-BDDB69799092,IgnoreErrors
No

44AD6793-47A7-4193-AE57-BDDB69799092,Include
0

44AD6793-47A7-4193-AE57-BDDB69799092,IncludeStderr
No

44AD6793-47A7-4193-AE57-BDDB69799092,ProgramCommandLine
{<%InstallDir%>\\lejos_nxj\\3rdparty\\lib\\libusb-win32-filter-bin-0.1.12.1.exe}

44AD6793-47A7-4193-AE57-BDDB69799092,ProgressiveOutputWidget
{}

44AD6793-47A7-4193-AE57-BDDB69799092,ResultVirtualText
ExternalProgramResult

44AD6793-47A7-4193-AE57-BDDB69799092,ShowProgressiveOutput
Yes

44AD6793-47A7-4193-AE57-BDDB69799092,StatusVirtualText
ExternalProgramStatus

44AD6793-47A7-4193-AE57-BDDB69799092,WaitForProgram
Yes

44AD6793-47A7-4193-AE57-BDDB69799092,WatchProgressiveOutput
No

44AD6793-47A7-4193-AE57-BDDB69799092,WatchRegularExpression
{^:([^ ]+) (.*):$}

44AD6793-47A7-4193-AE57-BDDB69799092,WatchVirtualText
Status

44AD6793-47A7-4193-AE57-BDDB69799092,WorkingDirectory
{}

4B5ECD32-5DF6-420F-82CF-CB83E5F49A8D,Active
Yes

4B5ECD32-5DF6-420F-82CF-CB83E5F49A8D,AddToUninstall
Yes

4B5ECD32-5DF6-420F-82CF-CB83E5F49A8D,Component
{}

4B5ECD32-5DF6-420F-82CF-CB83E5F49A8D,Conditions
{0 conditions}

4B5ECD32-5DF6-420F-82CF-CB83E5F49A8D,Directory
{<%InstallDir%>\\bin}

4B5ECD32-5DF6-420F-82CF-CB83E5F49A8D,ExecuteAction
1

4B5ECD32-5DF6-420F-82CF-CB83E5F49A8D,ID
{}

4B5ECD32-5DF6-420F-82CF-CB83E5F49A8D,IgnoreErrors
No

4B5ECD32-5DF6-420F-82CF-CB83E5F49A8D,Include
0

4B5ECD32-5DF6-420F-82CF-CB83E5F49A8D,Level
system

4B5ECD32-5DF6-420F-82CF-CB83E5F49A8D,Location
beginning

4B5ECD32-5DF6-420F-82CF-CB83E5F49A8D,NormalizePaths
Yes

4B5ECD32-5DF6-420F-82CF-CB83E5F49A8D,Separator
<%PathSeparator%>

4B5ECD32-5DF6-420F-82CF-CB83E5F49A8D,Variable
PATH

4DA7EA73-19F5-4B17-A1DB-B7963F650223,Active
Yes

4DA7EA73-19F5-4B17-A1DB-B7963F650223,CheckCondition
6

4DA7EA73-19F5-4B17-A1DB-B7963F650223,Component
{}

4DA7EA73-19F5-4B17-A1DB-B7963F650223,FailureFocus
{}

4DA7EA73-19F5-4B17-A1DB-B7963F650223,FailureMessage
{}

4DA7EA73-19F5-4B17-A1DB-B7963F650223,ID
{}

4DA7EA73-19F5-4B17-A1DB-B7963F650223,Include
0

4DA7EA73-19F5-4B17-A1DB-B7963F650223,Operator
false

4DA7EA73-19F5-4B17-A1DB-B7963F650223,String
<%Answer%>

5896FAD3-E5EB-4488-BD20-4FA9615D4583,Action
{Install Actions}

5896FAD3-E5EB-4488-BD20-4FA9615D4583,Active
Yes

5896FAD3-E5EB-4488-BD20-4FA9615D4583,Component
{}

5896FAD3-E5EB-4488-BD20-4FA9615D4583,Conditions
{0 conditions}

5896FAD3-E5EB-4488-BD20-4FA9615D4583,EvaluateConditions
Yes

5896FAD3-E5EB-4488-BD20-4FA9615D4583,ExecuteAction
1

5896FAD3-E5EB-4488-BD20-4FA9615D4583,ID
{}

5896FAD3-E5EB-4488-BD20-4FA9615D4583,IgnoreErrors
No

5896FAD3-E5EB-4488-BD20-4FA9615D4583,Include
0

68C6794D-56E8-4272-B2B2-62B1B81544C8,Active
Yes

68C6794D-56E8-4272-B2B2-62B1B81544C8,BackButton,subst
1

68C6794D-56E8-4272-B2B2-62B1B81544C8,Buttons
Back/Next/Cancel

68C6794D-56E8-4272-B2B2-62B1B81544C8,CancelButton,subst
1

68C6794D-56E8-4272-B2B2-62B1B81544C8,Caption,subst
1

68C6794D-56E8-4272-B2B2-62B1B81544C8,Component
{}

68C6794D-56E8-4272-B2B2-62B1B81544C8,Conditions
{}

68C6794D-56E8-4272-B2B2-62B1B81544C8,FileLabel,subst
1

68C6794D-56E8-4272-B2B2-62B1B81544C8,ID
{}

68C6794D-56E8-4272-B2B2-62B1B81544C8,Icon
<%Icon%>

68C6794D-56E8-4272-B2B2-62B1B81544C8,Include
0

68C6794D-56E8-4272-B2B2-62B1B81544C8,Message,subst
1

68C6794D-56E8-4272-B2B2-62B1B81544C8,NextButton,subst
1

68C6794D-56E8-4272-B2B2-62B1B81544C8,ProgressValue,subst
1

68C6794D-56E8-4272-B2B2-62B1B81544C8,Subtitle,subst
1

68C6794D-56E8-4272-B2B2-62B1B81544C8,Title,subst
1

6A2A84CC-B4CD-44AB-B51A-8A589DB5D613,Active
Yes

6A2A84CC-B4CD-44AB-B51A-8A589DB5D613,Component
{}

6A2A84CC-B4CD-44AB-B51A-8A589DB5D613,Conditions
{}

6A2A84CC-B4CD-44AB-B51A-8A589DB5D613,ExecuteAction
1

6A2A84CC-B4CD-44AB-B51A-8A589DB5D613,ExitType
Cancel

6A2A84CC-B4CD-44AB-B51A-8A589DB5D613,ID
{}

6A2A84CC-B4CD-44AB-B51A-8A589DB5D613,IgnoreErrors
No

6A2A84CC-B4CD-44AB-B51A-8A589DB5D613,Include
0

6B8FE306-976D-49F6-A84E-5CF7A80643EB,Active
Yes

6B8FE306-976D-49F6-A84E-5CF7A80643EB,BackButton,subst
1

6B8FE306-976D-49F6-A84E-5CF7A80643EB,Buttons
Next/Cancel

6B8FE306-976D-49F6-A84E-5CF7A80643EB,CancelButton,subst
1

6B8FE306-976D-49F6-A84E-5CF7A80643EB,Caption,subst
1

6B8FE306-976D-49F6-A84E-5CF7A80643EB,Component
{}

6B8FE306-976D-49F6-A84E-5CF7A80643EB,Conditions
{}

6B8FE306-976D-49F6-A84E-5CF7A80643EB,ID
{}

6B8FE306-976D-49F6-A84E-5CF7A80643EB,Image
<%Image%>

6B8FE306-976D-49F6-A84E-5CF7A80643EB,Include
0

6B8FE306-976D-49F6-A84E-5CF7A80643EB,Message,subst
1

6B8FE306-976D-49F6-A84E-5CF7A80643EB,NextButton,subst
1

6B8FE306-976D-49F6-A84E-5CF7A80643EB,WizardOptions
{-bg white -separator 0}

6C6EB7CE-AB45-4145-9D38-7D57BE4807F2,Active
Yes

6C6EB7CE-AB45-4145-9D38-7D57BE4807F2,Components
15DAE539-105B-4492-B815-135A1843117F

6C6EB7CE-AB45-4145-9D38-7D57BE4807F2,Description,subst
1

6C6EB7CE-AB45-4145-9D38-7D57BE4807F2,DisplayName,subst
1

6C6EB7CE-AB45-4145-9D38-7D57BE4807F2,ID
{}

6C6EB7CE-AB45-4145-9D38-7D57BE4807F2,Name
Typical

6C6EB7CE-AB45-4145-9D38-7D57BE4807F2,ShowSetupType
Yes

6CF27022-0C55-43FA-95CF-821D60A3FDBE,Active
Yes

6CF27022-0C55-43FA-95CF-821D60A3FDBE,AdditionalArguments
{}

6CF27022-0C55-43FA-95CF-821D60A3FDBE,CommandLineArguments
{}

6CF27022-0C55-43FA-95CF-821D60A3FDBE,Component
{}

6CF27022-0C55-43FA-95CF-821D60A3FDBE,Conditions
{1 condition}

6CF27022-0C55-43FA-95CF-821D60A3FDBE,ExecuteAction
1

6CF27022-0C55-43FA-95CF-821D60A3FDBE,FileName
<%ShortAppName%>-uninstall

6CF27022-0C55-43FA-95CF-821D60A3FDBE,ID
{}

6CF27022-0C55-43FA-95CF-821D60A3FDBE,IconPath
{}

6CF27022-0C55-43FA-95CF-821D60A3FDBE,IconPathIndex
0

6CF27022-0C55-43FA-95CF-821D60A3FDBE,IgnoreErrors
No

6CF27022-0C55-43FA-95CF-821D60A3FDBE,Include
0

6CF27022-0C55-43FA-95CF-821D60A3FDBE,InstallForAllUsers
{}

6CF27022-0C55-43FA-95CF-821D60A3FDBE,ProgramFolderName
<%ProgramFolderName%>

6CF27022-0C55-43FA-95CF-821D60A3FDBE,ShortcutName
{Uninstall <%AppName%>}

6CF27022-0C55-43FA-95CF-821D60A3FDBE,ShortcutType
Application

6CF27022-0C55-43FA-95CF-821D60A3FDBE,TargetFileName
<%Uninstaller%>

6CF27022-0C55-43FA-95CF-821D60A3FDBE,WindowState
normal

6CF27022-0C55-43FA-95CF-821D60A3FDBE,WorkingDirectory
<%InstallDir%>

7873207E-5AA3-4491-9544-BD3EC5F48D78,Active
Yes

7873207E-5AA3-4491-9544-BD3EC5F48D78,Components
15DAE539-105B-4492-B815-135A1843117F

7873207E-5AA3-4491-9544-BD3EC5F48D78,Description,subst
1

7873207E-5AA3-4491-9544-BD3EC5F48D78,DisplayName,subst
1

7873207E-5AA3-4491-9544-BD3EC5F48D78,ID
{}

7873207E-5AA3-4491-9544-BD3EC5F48D78,Name
Custom

7873207E-5AA3-4491-9544-BD3EC5F48D78,ShowSetupType
Yes

7BDE520D-4F83-4E61-946D-0D2A630FC6B1,Active
Yes

7BDE520D-4F83-4E61-946D-0D2A630FC6B1,AllowQuit
Yes

7BDE520D-4F83-4E61-946D-0D2A630FC6B1,Component
{}

7BDE520D-4F83-4E61-946D-0D2A630FC6B1,Conditions
{}

7BDE520D-4F83-4E61-946D-0D2A630FC6B1,ExecuteAction
1

7BDE520D-4F83-4E61-946D-0D2A630FC6B1,ID
{}

7BDE520D-4F83-4E61-946D-0D2A630FC6B1,IgnoreErrors
No

7BDE520D-4F83-4E61-946D-0D2A630FC6B1,Include
0

7BDE520D-4F83-4E61-946D-0D2A630FC6B1,Message,subst
1

7BDE520D-4F83-4E61-946D-0D2A630FC6B1,PaginateMessage
Yes

7BDE520D-4F83-4E61-946D-0D2A630FC6B1,WrapText
Yes

7CACE910-41EE-4D16-B8DE-9D346336018F,Active
Yes

7CACE910-41EE-4D16-B8DE-9D346336018F,Component
{}

7CACE910-41EE-4D16-B8DE-9D346336018F,Conditions
{0 conditions}

7CACE910-41EE-4D16-B8DE-9D346336018F,ExecuteAction
1

7CACE910-41EE-4D16-B8DE-9D346336018F,ID
{}

7CACE910-41EE-4D16-B8DE-9D346336018F,IgnoreErrors
No

7CACE910-41EE-4D16-B8DE-9D346336018F,Include
0

7CACE910-41EE-4D16-B8DE-9D346336018F,ResultVirtualText
JDKVersion

7CACE910-41EE-4D16-B8DE-9D346336018F,TclScript
{catch { exec javac.exe -version } output
set firstline [lindex [split $output \n] 0]
set firstline [lindex [split $output :] 0]
set firstword [lindex $firstline 0]
if {$firstword != "javac"} {
  return "0"
}
return [lindex $firstline end]
}

7CDC350B-9C0A-43BE-9C43-EFE450DE6185,Active
Yes

7CDC350B-9C0A-43BE-9C43-EFE450DE6185,CheckCondition
3

7CDC350B-9C0A-43BE-9C43-EFE450DE6185,Component
{}

7CDC350B-9C0A-43BE-9C43-EFE450DE6185,FailureFocus
{}

7CDC350B-9C0A-43BE-9C43-EFE450DE6185,FailureMessage
{}

7CDC350B-9C0A-43BE-9C43-EFE450DE6185,ID
{}

7CDC350B-9C0A-43BE-9C43-EFE450DE6185,Include
0

7CDC350B-9C0A-43BE-9C43-EFE450DE6185,ResultVirtualText
ScriptResult

7CDC350B-9C0A-43BE-9C43-EFE450DE6185,Script
{if {[string is true <%PreviousInstallExists%>]} {
  if {<%InstallDir%> == <%PreviousInstallDir%>} {
    if {[string is true <%PreviousInstallDirExists%>]} {
      return true
    }
  }
}
return false
}

7D6FCFEE-6237-44E5-A6C8-67C58D62AAC0,Active
Yes

7D6FCFEE-6237-44E5-A6C8-67C58D62AAC0,CheckCondition
3

7D6FCFEE-6237-44E5-A6C8-67C58D62AAC0,Component
{}

7D6FCFEE-6237-44E5-A6C8-67C58D62AAC0,FailureFocus
{}

7D6FCFEE-6237-44E5-A6C8-67C58D62AAC0,FailureMessage
{}

7D6FCFEE-6237-44E5-A6C8-67C58D62AAC0,ID
{}

7D6FCFEE-6237-44E5-A6C8-67C58D62AAC0,Include
0

7D6FCFEE-6237-44E5-A6C8-67C58D62AAC0,ResultVirtualText
ScriptResult

7D6FCFEE-6237-44E5-A6C8-67C58D62AAC0,Script
{set mver [lindex [split <%JDKVersion%>  _-] 0]
if {[package vcompare $mver "1.5"] >= 0} {
  return 0
}
return 1
}

7DF6F9D7-CF7E-4A69-B0AB-440813123C44,Active
Yes

7DF6F9D7-CF7E-4A69-B0AB-440813123C44,BackButton,subst
1

7DF6F9D7-CF7E-4A69-B0AB-440813123C44,Buttons
Next/Cancel

7DF6F9D7-CF7E-4A69-B0AB-440813123C44,CancelButton,subst
1

7DF6F9D7-CF7E-4A69-B0AB-440813123C44,Caption,subst
1

7DF6F9D7-CF7E-4A69-B0AB-440813123C44,Component
{}

7DF6F9D7-CF7E-4A69-B0AB-440813123C44,Conditions
{0 conditions}

7DF6F9D7-CF7E-4A69-B0AB-440813123C44,ID
{}

7DF6F9D7-CF7E-4A69-B0AB-440813123C44,Image
<%Image%>

7DF6F9D7-CF7E-4A69-B0AB-440813123C44,Include
0

7DF6F9D7-CF7E-4A69-B0AB-440813123C44,Message,subst
1

7DF6F9D7-CF7E-4A69-B0AB-440813123C44,NextButton,subst
1

7DF6F9D7-CF7E-4A69-B0AB-440813123C44,WizardOptions
{-bg white -separator 0}

7F977B76-1808-405B-9FEA-F30DAC0A8CB7,Active
Yes

7F977B76-1808-405B-9FEA-F30DAC0A8CB7,Alias
{Cancel Actions}

7F977B76-1808-405B-9FEA-F30DAC0A8CB7,Conditions
{0 conditions}

7F977B76-1808-405B-9FEA-F30DAC0A8CB7,ID
{}

80858315-2FDE-4485-AE60-DCB2A06271A2,Active
Yes

80858315-2FDE-4485-AE60-DCB2A06271A2,CheckCondition
6

80858315-2FDE-4485-AE60-DCB2A06271A2,Component
{}

80858315-2FDE-4485-AE60-DCB2A06271A2,FailureFocus
{}

80858315-2FDE-4485-AE60-DCB2A06271A2,FailureMessage
{}

80858315-2FDE-4485-AE60-DCB2A06271A2,ID
{}

80858315-2FDE-4485-AE60-DCB2A06271A2,Include
0

80858315-2FDE-4485-AE60-DCB2A06271A2,Operator
false

80858315-2FDE-4485-AE60-DCB2A06271A2,String
<%UpgradeInstall%>

81B7D747-99EA-4757-B9E3-CDC7CAC26EB0,Active
Yes

81B7D747-99EA-4757-B9E3-CDC7CAC26EB0,CheckCondition
3

81B7D747-99EA-4757-B9E3-CDC7CAC26EB0,Comment
{Do not display this pane if this is an upgrade install unless there is more than one installation present}

81B7D747-99EA-4757-B9E3-CDC7CAC26EB0,Component
{}

81B7D747-99EA-4757-B9E3-CDC7CAC26EB0,FailureFocus
{}

81B7D747-99EA-4757-B9E3-CDC7CAC26EB0,FailureMessage
{}

81B7D747-99EA-4757-B9E3-CDC7CAC26EB0,ID
{}

81B7D747-99EA-4757-B9E3-CDC7CAC26EB0,Include
0

81B7D747-99EA-4757-B9E3-CDC7CAC26EB0,Script
{!<%UpgradeInstall%> || <%PreviousInstallCount%> != 1}

81F49E9C-C47F-4165-B259-ED915E461415,Active
Yes

81F49E9C-C47F-4165-B259-ED915E461415,Alias
{Install Actions}

81F49E9C-C47F-4165-B259-ED915E461415,Conditions
{0 conditions}

81F49E9C-C47F-4165-B259-ED915E461415,ID
{}

8DB7EAB4-69DE-43A7-B1A0-07091D96E09A,Action
{Install Actions}

8DB7EAB4-69DE-43A7-B1A0-07091D96E09A,Active
Yes

8DB7EAB4-69DE-43A7-B1A0-07091D96E09A,Component
{}

8DB7EAB4-69DE-43A7-B1A0-07091D96E09A,Conditions
{0 conditions}

8DB7EAB4-69DE-43A7-B1A0-07091D96E09A,EvaluateConditions
Yes

8DB7EAB4-69DE-43A7-B1A0-07091D96E09A,ExecuteAction
1

8DB7EAB4-69DE-43A7-B1A0-07091D96E09A,ID
{}

8DB7EAB4-69DE-43A7-B1A0-07091D96E09A,IgnoreErrors
No

8DB7EAB4-69DE-43A7-B1A0-07091D96E09A,Include
0

8F0CC273-D105-4F82-8D7D-EB6618629BB7,Active
Yes

8F0CC273-D105-4F82-8D7D-EB6618629BB7,Comment
{Ask the user if they want to proceed with the install.}

8F0CC273-D105-4F82-8D7D-EB6618629BB7,Component
{}

8F0CC273-D105-4F82-8D7D-EB6618629BB7,Conditions
{2 conditions}

8F0CC273-D105-4F82-8D7D-EB6618629BB7,ExecuteAction
1

8F0CC273-D105-4F82-8D7D-EB6618629BB7,ExitType
Cancel

8F0CC273-D105-4F82-8D7D-EB6618629BB7,ID
{}

8F0CC273-D105-4F82-8D7D-EB6618629BB7,IgnoreErrors
No

8F0CC273-D105-4F82-8D7D-EB6618629BB7,Include
0

95D2767E-F5AA-4A5E-BB8E-70920EFF1CC4,Active
Yes

95D2767E-F5AA-4A5E-BB8E-70920EFF1CC4,Component
{}

95D2767E-F5AA-4A5E-BB8E-70920EFF1CC4,Conditions
{0 conditions}

95D2767E-F5AA-4A5E-BB8E-70920EFF1CC4,ExecuteAction
1

95D2767E-F5AA-4A5E-BB8E-70920EFF1CC4,ExitType
Finish

95D2767E-F5AA-4A5E-BB8E-70920EFF1CC4,ID
{}

95D2767E-F5AA-4A5E-BB8E-70920EFF1CC4,IgnoreErrors
No

95D2767E-F5AA-4A5E-BB8E-70920EFF1CC4,Include
0

9C1BF614-0A4B-4B3E-82AA-32CA148FDA63,Active
Yes

9C1BF614-0A4B-4B3E-82AA-32CA148FDA63,Alias
{Startup Actions}

9C1BF614-0A4B-4B3E-82AA-32CA148FDA63,Conditions
{0 conditions}

9C1BF614-0A4B-4B3E-82AA-32CA148FDA63,ID
{}

A06DD6A5-A619-4713-8EA7-C1010EB4800F,Active
Yes

A06DD6A5-A619-4713-8EA7-C1010EB4800F,BackButton,subst
1

A06DD6A5-A619-4713-8EA7-C1010EB4800F,Buttons
Back/Next/Cancel

A06DD6A5-A619-4713-8EA7-C1010EB4800F,CancelButton,subst
1

A06DD6A5-A619-4713-8EA7-C1010EB4800F,Caption,subst
1

A06DD6A5-A619-4713-8EA7-C1010EB4800F,Component
{}

A06DD6A5-A619-4713-8EA7-C1010EB4800F,Conditions
{0 conditions}

A06DD6A5-A619-4713-8EA7-C1010EB4800F,ID
{}

A06DD6A5-A619-4713-8EA7-C1010EB4800F,Icon
<%Icon%>

A06DD6A5-A619-4713-8EA7-C1010EB4800F,Include
0

A06DD6A5-A619-4713-8EA7-C1010EB4800F,Message,subst
0

A06DD6A5-A619-4713-8EA7-C1010EB4800F,NextButton,subst
1

A06DD6A5-A619-4713-8EA7-C1010EB4800F,Subtitle,subst
1

A06DD6A5-A619-4713-8EA7-C1010EB4800F,Text,subst
1

A06DD6A5-A619-4713-8EA7-C1010EB4800F,Title,subst
1

A7C66696-4708-4099-B907-EAE7B0C4C3AD,Active
Yes

A7C66696-4708-4099-B907-EAE7B0C4C3AD,CheckCondition
6

A7C66696-4708-4099-B907-EAE7B0C4C3AD,Component
{}

A7C66696-4708-4099-B907-EAE7B0C4C3AD,FailureFocus
{}

A7C66696-4708-4099-B907-EAE7B0C4C3AD,FailureMessage
{}

A7C66696-4708-4099-B907-EAE7B0C4C3AD,ID
{}

A7C66696-4708-4099-B907-EAE7B0C4C3AD,Include
0

A7C66696-4708-4099-B907-EAE7B0C4C3AD,Operator
false

A7C66696-4708-4099-B907-EAE7B0C4C3AD,String
<%UpgradeInstall%>

A9CD20EB-9BAC-4E7D-9327-7724C2A7F535,Active
Yes

A9CD20EB-9BAC-4E7D-9327-7724C2A7F535,AddToUninstall
Yes

A9CD20EB-9BAC-4E7D-9327-7724C2A7F535,Component
{}

A9CD20EB-9BAC-4E7D-9327-7724C2A7F535,Conditions
{0 conditions}

A9CD20EB-9BAC-4E7D-9327-7724C2A7F535,ExecuteAction
1

A9CD20EB-9BAC-4E7D-9327-7724C2A7F535,ID
{}

A9CD20EB-9BAC-4E7D-9327-7724C2A7F535,IgnoreErrors
No

A9CD20EB-9BAC-4E7D-9327-7724C2A7F535,Include
0

A9CD20EB-9BAC-4E7D-9327-7724C2A7F535,Level
system

A9CD20EB-9BAC-4E7D-9327-7724C2A7F535,RestoreOnUninstall
No

A9CD20EB-9BAC-4E7D-9327-7724C2A7F535,Value
<%InstallDir%>

A9CD20EB-9BAC-4E7D-9327-7724C2A7F535,Variable
NXJ_HOME

AD4D435F-1633-4921-8003-469AF004E7F8,Active
Yes

AD4D435F-1633-4921-8003-469AF004E7F8,Component
{}

AD4D435F-1633-4921-8003-469AF004E7F8,Conditions
{}

AD4D435F-1633-4921-8003-469AF004E7F8,ExecuteAction
1

AD4D435F-1633-4921-8003-469AF004E7F8,ID
{}

AD4D435F-1633-4921-8003-469AF004E7F8,IgnoreErrors
No

AD4D435F-1633-4921-8003-469AF004E7F8,Include
0

AD4D435F-1633-4921-8003-469AF004E7F8,State
disabled

AD4D435F-1633-4921-8003-469AF004E7F8,Text
{}

AD4D435F-1633-4921-8003-469AF004E7F8,Widget
{Back Button;Next Button}

AE0C668C-FB50-4AA0-924A-8A4EF992E7BD,Active
Yes

AE0C668C-FB50-4AA0-924A-8A4EF992E7BD,BackButton,subst
1

AE0C668C-FB50-4AA0-924A-8A4EF992E7BD,Buttons
Back/Next/Cancel

AE0C668C-FB50-4AA0-924A-8A4EF992E7BD,CancelButton,subst
1

AE0C668C-FB50-4AA0-924A-8A4EF992E7BD,Caption,subst
1

AE0C668C-FB50-4AA0-924A-8A4EF992E7BD,Component
{}

AE0C668C-FB50-4AA0-924A-8A4EF992E7BD,Conditions
{1 condition}

AE0C668C-FB50-4AA0-924A-8A4EF992E7BD,ID
{}

AE0C668C-FB50-4AA0-924A-8A4EF992E7BD,Icon
<%Icon%>

AE0C668C-FB50-4AA0-924A-8A4EF992E7BD,Include
0

AE0C668C-FB50-4AA0-924A-8A4EF992E7BD,Message,subst
1

AE0C668C-FB50-4AA0-924A-8A4EF992E7BD,NextButton,subst
1

AE0C668C-FB50-4AA0-924A-8A4EF992E7BD,Subtitle,subst
1

AE0C668C-FB50-4AA0-924A-8A4EF992E7BD,Text,subst
1

AE0C668C-FB50-4AA0-924A-8A4EF992E7BD,TextFont
TkTextFont

AE0C668C-FB50-4AA0-924A-8A4EF992E7BD,Title,subst
1

AIX-ppc,Active
No

AIX-ppc,DefaultDirectoryPermission
0755

AIX-ppc,DefaultFilePermission
0755

AIX-ppc,Executable
<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>

AIX-ppc,FallBackToConsole
Yes

AIX-ppc,InstallDir
<%Home%>/<%ShortAppName%>

AIX-ppc,InstallMode
Standard

AIX-ppc,InstallType
Typical

AIX-ppc,ProgramExecutable
{}

AIX-ppc,ProgramFolderAllUsers
No

AIX-ppc,ProgramFolderName
<%AppName%>

AIX-ppc,ProgramLicense
<%InstallDir%>/LICENSE.txt

AIX-ppc,ProgramName
{}

AIX-ppc,ProgramReadme
<%InstallDir%>/README.txt

AIX-ppc,PromptForRoot
Yes

AIX-ppc,RequireRoot
No

AIX-ppc,RootInstallDir
/usr/local/<%ShortAppName%>

B0827C4F-72DE-4896-9D47-15D73177AD58,Active
Yes

B0827C4F-72DE-4896-9D47-15D73177AD58,CheckCondition
3

B0827C4F-72DE-4896-9D47-15D73177AD58,Component
{}

B0827C4F-72DE-4896-9D47-15D73177AD58,FailureFocus
{}

B0827C4F-72DE-4896-9D47-15D73177AD58,FailureMessage
{}

B0827C4F-72DE-4896-9D47-15D73177AD58,Filename
<%SYSTEM32%>/libusb0.dll

B0827C4F-72DE-4896-9D47-15D73177AD58,ID
{}

B0827C4F-72DE-4896-9D47-15D73177AD58,Include
0

B0827C4F-72DE-4896-9D47-15D73177AD58,Operator
{does not exist}

B53D1E8D-8B34-4F6F-B894-78020CA6231D,Active
Yes

B53D1E8D-8B34-4F6F-B894-78020CA6231D,Component
{}

B53D1E8D-8B34-4F6F-B894-78020CA6231D,Conditions
{}

B53D1E8D-8B34-4F6F-B894-78020CA6231D,Default
Yes

B53D1E8D-8B34-4F6F-B894-78020CA6231D,ExecuteAction
1

B53D1E8D-8B34-4F6F-B894-78020CA6231D,ID
{}

B53D1E8D-8B34-4F6F-B894-78020CA6231D,IgnoreErrors
No

B53D1E8D-8B34-4F6F-B894-78020CA6231D,Include
0

B53D1E8D-8B34-4F6F-B894-78020CA6231D,Prompt
<%InstallStartupText%>

B53D1E8D-8B34-4F6F-B894-78020CA6231D,VirtualText
Answer

B8183471-3C13-4A0C-A155-C3FA70B2CB42,Active
Yes

B8183471-3C13-4A0C-A155-C3FA70B2CB42,CheckCondition
6

B8183471-3C13-4A0C-A155-C3FA70B2CB42,Component
{}

B8183471-3C13-4A0C-A155-C3FA70B2CB42,FailureFocus
{}

B8183471-3C13-4A0C-A155-C3FA70B2CB42,FailureMessage
{}

B8183471-3C13-4A0C-A155-C3FA70B2CB42,ID
{}

B8183471-3C13-4A0C-A155-C3FA70B2CB42,Include
0

B8183471-3C13-4A0C-A155-C3FA70B2CB42,Operator
false

B8183471-3C13-4A0C-A155-C3FA70B2CB42,String
<%UpgradeInstall%>

BC0409EB-AB66-4D71-895E-E9F8377574D8,Active
Yes

BC0409EB-AB66-4D71-895E-E9F8377574D8,BackButton,subst
1

BC0409EB-AB66-4D71-895E-E9F8377574D8,Buttons
Back/Next/Cancel

BC0409EB-AB66-4D71-895E-E9F8377574D8,CancelButton,subst
1

BC0409EB-AB66-4D71-895E-E9F8377574D8,Caption,subst
1

BC0409EB-AB66-4D71-895E-E9F8377574D8,Component
{}

BC0409EB-AB66-4D71-895E-E9F8377574D8,Conditions
{0 conditions}

BC0409EB-AB66-4D71-895E-E9F8377574D8,FileLabel,subst
1

BC0409EB-AB66-4D71-895E-E9F8377574D8,ID
{}

BC0409EB-AB66-4D71-895E-E9F8377574D8,Icon
<%Icon%>

BC0409EB-AB66-4D71-895E-E9F8377574D8,Include
0

BC0409EB-AB66-4D71-895E-E9F8377574D8,Message,subst
1

BC0409EB-AB66-4D71-895E-E9F8377574D8,NextButton,subst
1

BC0409EB-AB66-4D71-895E-E9F8377574D8,ProgressValue,subst
1

BC0409EB-AB66-4D71-895E-E9F8377574D8,Subtitle,subst
1

BC0409EB-AB66-4D71-895E-E9F8377574D8,Title,subst
1

BD8BB63B-39AB-4CD5-8A7D-B4226FD677A1,Active
Yes

BD8BB63B-39AB-4CD5-8A7D-B4226FD677A1,Component
{}

BD8BB63B-39AB-4CD5-8A7D-B4226FD677A1,Conditions
{0 conditions}

BD8BB63B-39AB-4CD5-8A7D-B4226FD677A1,ExecuteAction
1

BD8BB63B-39AB-4CD5-8A7D-B4226FD677A1,ID
{}

BD8BB63B-39AB-4CD5-8A7D-B4226FD677A1,IgnoreErrors
No

BD8BB63B-39AB-4CD5-8A7D-B4226FD677A1,Include
0

BD8BB63B-39AB-4CD5-8A7D-B4226FD677A1,State
disabled

BD8BB63B-39AB-4CD5-8A7D-B4226FD677A1,Text
{}

BD8BB63B-39AB-4CD5-8A7D-B4226FD677A1,Widget
{Back Button;Next Button}

BF950757-3DD1-4280-B6B0-1B6D0D5B6215,Active
Yes

BF950757-3DD1-4280-B6B0-1B6D0D5B6215,Component
{}

BF950757-3DD1-4280-B6B0-1B6D0D5B6215,Conditions
{0 conditions}

BF950757-3DD1-4280-B6B0-1B6D0D5B6215,ExecuteAction
1

BF950757-3DD1-4280-B6B0-1B6D0D5B6215,ID
{}

BF950757-3DD1-4280-B6B0-1B6D0D5B6215,IgnoreErrors
No

BF950757-3DD1-4280-B6B0-1B6D0D5B6215,Include
0

C2089508-7FED-4F5A-8B2B-D77CC570FF4F,Active
Yes

C2089508-7FED-4F5A-8B2B-D77CC570FF4F,CheckCondition
6

C2089508-7FED-4F5A-8B2B-D77CC570FF4F,Component
{}

C2089508-7FED-4F5A-8B2B-D77CC570FF4F,FailureFocus
{}

C2089508-7FED-4F5A-8B2B-D77CC570FF4F,FailureMessage
{}

C2089508-7FED-4F5A-8B2B-D77CC570FF4F,Filename
<%SYSTEM32%>/libusb0.dll

C2089508-7FED-4F5A-8B2B-D77CC570FF4F,ID
{}

C2089508-7FED-4F5A-8B2B-D77CC570FF4F,Include
0

C2089508-7FED-4F5A-8B2B-D77CC570FF4F,Operator
{does not exist}

C540F45D-8580-4AD9-94F7-9A75F09A6593,Active
Yes

C540F45D-8580-4AD9-94F7-9A75F09A6593,Component
{}

C540F45D-8580-4AD9-94F7-9A75F09A6593,Conditions
{0 conditions}

C540F45D-8580-4AD9-94F7-9A75F09A6593,ExecuteAction
1

C540F45D-8580-4AD9-94F7-9A75F09A6593,ID
{}

C540F45D-8580-4AD9-94F7-9A75F09A6593,IgnoreErrors
No

C540F45D-8580-4AD9-94F7-9A75F09A6593,Include
0

C540F45D-8580-4AD9-94F7-9A75F09A6593,UpdateFilePercentage
No

C540F45D-8580-4AD9-94F7-9A75F09A6593,UpdateFileText
No

C567D000-B29A-4EEF-9003-51BDE7CB5E95,Active
Yes

C567D000-B29A-4EEF-9003-51BDE7CB5E95,Component
{}

C567D000-B29A-4EEF-9003-51BDE7CB5E95,Conditions
{0 conditions}

C567D000-B29A-4EEF-9003-51BDE7CB5E95,ConsoleTitle
{<%AppName%> Setup}

C567D000-B29A-4EEF-9003-51BDE7CB5E95,ExecuteAction
3

C567D000-B29A-4EEF-9003-51BDE7CB5E95,ExecuteAsRoot
No

C567D000-B29A-4EEF-9003-51BDE7CB5E95,ExecuteInConsole
No

C567D000-B29A-4EEF-9003-51BDE7CB5E95,ID
{}

C567D000-B29A-4EEF-9003-51BDE7CB5E95,IgnoreErrors
No

C567D000-B29A-4EEF-9003-51BDE7CB5E95,Include
0

C567D000-B29A-4EEF-9003-51BDE7CB5E95,IncludeStderr
No

C567D000-B29A-4EEF-9003-51BDE7CB5E95,ProgramCommandLine
<%PreviousInstallUninstaller%>

C567D000-B29A-4EEF-9003-51BDE7CB5E95,ProgressiveOutputWidget
{}

C567D000-B29A-4EEF-9003-51BDE7CB5E95,ResultVirtualText
ExternalProgramResult

C567D000-B29A-4EEF-9003-51BDE7CB5E95,ShowProgressiveOutput
No

C567D000-B29A-4EEF-9003-51BDE7CB5E95,StatusVirtualText
ExternalProgramStatus

C567D000-B29A-4EEF-9003-51BDE7CB5E95,WaitForProgram
Yes

C567D000-B29A-4EEF-9003-51BDE7CB5E95,WatchProgressiveOutput
No

C567D000-B29A-4EEF-9003-51BDE7CB5E95,WatchRegularExpression
{^:([^ ]+) (.*):$}

C567D000-B29A-4EEF-9003-51BDE7CB5E95,WatchVirtualText
Status

C567D000-B29A-4EEF-9003-51BDE7CB5E95,WorkingDirectory
{}

DF91F224-3899-424E-879F-8E5F60C06E24,Active
Yes

DF91F224-3899-424E-879F-8E5F60C06E24,CheckCondition
1

DF91F224-3899-424E-879F-8E5F60C06E24,Component
{}

DF91F224-3899-424E-879F-8E5F60C06E24,FailureFocus
{}

DF91F224-3899-424E-879F-8E5F60C06E24,FailureMessage
<%DirectoryPermissionText%>

DF91F224-3899-424E-879F-8E5F60C06E24,Filename
<%InstallDir%>

DF91F224-3899-424E-879F-8E5F60C06E24,ID
{}

DF91F224-3899-424E-879F-8E5F60C06E24,Include
0

DF91F224-3899-424E-879F-8E5F60C06E24,Permission
{can create}

E20050A5-74E8-4DB3-82AC-ED90E44B3EDF,Active
Yes

E20050A5-74E8-4DB3-82AC-ED90E44B3EDF,CheckCondition
6

E20050A5-74E8-4DB3-82AC-ED90E44B3EDF,Component
{}

E20050A5-74E8-4DB3-82AC-ED90E44B3EDF,FailureFocus
{}

E20050A5-74E8-4DB3-82AC-ED90E44B3EDF,FailureMessage
{}

E20050A5-74E8-4DB3-82AC-ED90E44B3EDF,ID
{}

E20050A5-74E8-4DB3-82AC-ED90E44B3EDF,Include
0

E20050A5-74E8-4DB3-82AC-ED90E44B3EDF,Operator
true

E20050A5-74E8-4DB3-82AC-ED90E44B3EDF,String
<%GuiMode%>

E2CBC5B8-8152-442F-8D30-33F028FA0F28,Active
Yes

E2CBC5B8-8152-442F-8D30-33F028FA0F28,AllowQuit
Yes

E2CBC5B8-8152-442F-8D30-33F028FA0F28,Component
{}

E2CBC5B8-8152-442F-8D30-33F028FA0F28,Conditions
{}

E2CBC5B8-8152-442F-8D30-33F028FA0F28,ExecuteAction
1

E2CBC5B8-8152-442F-8D30-33F028FA0F28,ID
{}

E2CBC5B8-8152-442F-8D30-33F028FA0F28,IgnoreErrors
No

E2CBC5B8-8152-442F-8D30-33F028FA0F28,Include
0

E2CBC5B8-8152-442F-8D30-33F028FA0F28,Message,subst
1

E2CBC5B8-8152-442F-8D30-33F028FA0F28,PaginateMessage
Yes

E2CBC5B8-8152-442F-8D30-33F028FA0F28,WrapText
Yes

E3CE5D6E-1F59-45F5-AFFB-D154A771D21B,Active
Yes

E3CE5D6E-1F59-45F5-AFFB-D154A771D21B,BackButton,subst
1

E3CE5D6E-1F59-45F5-AFFB-D154A771D21B,Buttons
Next/Cancel

E3CE5D6E-1F59-45F5-AFFB-D154A771D21B,CancelButton,subst
1

E3CE5D6E-1F59-45F5-AFFB-D154A771D21B,Caption,subst
1

E3CE5D6E-1F59-45F5-AFFB-D154A771D21B,Component
{}

E3CE5D6E-1F59-45F5-AFFB-D154A771D21B,Conditions
{0 conditions}

E3CE5D6E-1F59-45F5-AFFB-D154A771D21B,ID
{}

E3CE5D6E-1F59-45F5-AFFB-D154A771D21B,Image
<%Image%>

E3CE5D6E-1F59-45F5-AFFB-D154A771D21B,Include
0

E3CE5D6E-1F59-45F5-AFFB-D154A771D21B,Message,subst
1

E3CE5D6E-1F59-45F5-AFFB-D154A771D21B,NextButton,subst
1

E3CE5D6E-1F59-45F5-AFFB-D154A771D21B,WizardOptions
{-bg white -separator 0}

E3F39B14-0441-492F-AC14-CA3EAF4F0E27,Active
Yes

E3F39B14-0441-492F-AC14-CA3EAF4F0E27,Component
{}

E3F39B14-0441-492F-AC14-CA3EAF4F0E27,Conditions
{}

E3F39B14-0441-492F-AC14-CA3EAF4F0E27,ExecuteAction
1

E3F39B14-0441-492F-AC14-CA3EAF4F0E27,ID
{}

E3F39B14-0441-492F-AC14-CA3EAF4F0E27,IgnoreErrors
No

E3F39B14-0441-492F-AC14-CA3EAF4F0E27,Include
0

F403ED4B-D2AB-4CA0-9AC0-1DCA4A1EBE5E,Active
Yes

F403ED4B-D2AB-4CA0-9AC0-1DCA4A1EBE5E,Alias
{Setup Actions}

F403ED4B-D2AB-4CA0-9AC0-1DCA4A1EBE5E,Conditions
{0 conditions}

F403ED4B-D2AB-4CA0-9AC0-1DCA4A1EBE5E,ID
{}

F6F11D84-22F8-49A3-918D-03A8EF17D87B,Active
Yes

F6F11D84-22F8-49A3-918D-03A8EF17D87B,Component
{}

F6F11D84-22F8-49A3-918D-03A8EF17D87B,Conditions
{0 conditions}

F6F11D84-22F8-49A3-918D-03A8EF17D87B,ExecuteAction
1

F6F11D84-22F8-49A3-918D-03A8EF17D87B,ID
{}

F6F11D84-22F8-49A3-918D-03A8EF17D87B,IgnoreErrors
No

F6F11D84-22F8-49A3-918D-03A8EF17D87B,Include
0

F6F11D84-22F8-49A3-918D-03A8EF17D87B,URL
http://java.sun.com/javase/downloads/index.jsp

F8696E5A-43F4-4369-B835-DB74A17A46CE,Active
Yes

F8696E5A-43F4-4369-B835-DB74A17A46CE,CheckCondition
6

F8696E5A-43F4-4369-B835-DB74A17A46CE,Component
{}

F8696E5A-43F4-4369-B835-DB74A17A46CE,FailureFocus
{}

F8696E5A-43F4-4369-B835-DB74A17A46CE,FailureMessage
{}

F8696E5A-43F4-4369-B835-DB74A17A46CE,ID
{}

F8696E5A-43F4-4369-B835-DB74A17A46CE,Include
0

F8696E5A-43F4-4369-B835-DB74A17A46CE,ResultVirtualText
ScriptResult

F8696E5A-43F4-4369-B835-DB74A17A46CE,Script
{if { $::tcl_platform(osVersion) == "6.0" } {
  return false
}
return true

}

F93C8E33-27CA-42EE-8D96-24856D5CA1AB,Active
Yes

F93C8E33-27CA-42EE-8D96-24856D5CA1AB,CheckCondition
6

F93C8E33-27CA-42EE-8D96-24856D5CA1AB,Component
{}

F93C8E33-27CA-42EE-8D96-24856D5CA1AB,DefaultButton
Yes

F93C8E33-27CA-42EE-8D96-24856D5CA1AB,FailureFocus
{}

F93C8E33-27CA-42EE-8D96-24856D5CA1AB,FailureMessage
{}

F93C8E33-27CA-42EE-8D96-24856D5CA1AB,ID
{}

F93C8E33-27CA-42EE-8D96-24856D5CA1AB,Icon
info

F93C8E33-27CA-42EE-8D96-24856D5CA1AB,Include
0

F93C8E33-27CA-42EE-8D96-24856D5CA1AB,Message,subst
1

F93C8E33-27CA-42EE-8D96-24856D5CA1AB,ResultVirtualText
Answer

F93C8E33-27CA-42EE-8D96-24856D5CA1AB,Title,subst
1

F93C8E33-27CA-42EE-8D96-24856D5CA1AB,TrueValue
No

FCF679A0-2B02-495D-BA7A-B4C99FEE93B8,Active
Yes

FCF679A0-2B02-495D-BA7A-B4C99FEE93B8,BackButton,subst
1

FCF679A0-2B02-495D-BA7A-B4C99FEE93B8,BrowseButton,subst
1

FCF679A0-2B02-495D-BA7A-B4C99FEE93B8,BrowseText,subst
1

FCF679A0-2B02-495D-BA7A-B4C99FEE93B8,Buttons
Back/Next/Cancel

FCF679A0-2B02-495D-BA7A-B4C99FEE93B8,CancelButton,subst
1

FCF679A0-2B02-495D-BA7A-B4C99FEE93B8,Caption,subst
1

FCF679A0-2B02-495D-BA7A-B4C99FEE93B8,Component
{}

FCF679A0-2B02-495D-BA7A-B4C99FEE93B8,Conditions
{2 conditions}

FCF679A0-2B02-495D-BA7A-B4C99FEE93B8,DestinationLabel,subst
0

FCF679A0-2B02-495D-BA7A-B4C99FEE93B8,ID
{}

FCF679A0-2B02-495D-BA7A-B4C99FEE93B8,Icon
<%Icon%>

FCF679A0-2B02-495D-BA7A-B4C99FEE93B8,Include
0

FCF679A0-2B02-495D-BA7A-B4C99FEE93B8,Message,subst
0

FCF679A0-2B02-495D-BA7A-B4C99FEE93B8,NextButton,subst
1

FCF679A0-2B02-495D-BA7A-B4C99FEE93B8,Subtitle,subst
1

FCF679A0-2B02-495D-BA7A-B4C99FEE93B8,Title,subst
1

FCF679A0-2B02-495D-BA7A-B4C99FEE93B8,VirtualText
InstallDir

FFD36C32-E334-4451-8B85-8EF64FC14A78,Active
Yes

FFD36C32-E334-4451-8B85-8EF64FC14A78,Alias
{Finish Actions}

FFD36C32-E334-4451-8B85-8EF64FC14A78,Conditions
{0 conditions}

FFD36C32-E334-4451-8B85-8EF64FC14A78,ID
{}

FreeBSD-4-x86,Active
No

FreeBSD-4-x86,DefaultDirectoryPermission
0755

FreeBSD-4-x86,DefaultFilePermission
0755

FreeBSD-4-x86,Executable
<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>

FreeBSD-4-x86,FallBackToConsole
Yes

FreeBSD-4-x86,InstallDir
<%Home%>/<%ShortAppName%>

FreeBSD-4-x86,InstallMode
Standard

FreeBSD-4-x86,InstallType
Typical

FreeBSD-4-x86,ProgramExecutable
{}

FreeBSD-4-x86,ProgramFolderAllUsers
No

FreeBSD-4-x86,ProgramFolderName
<%AppName%>

FreeBSD-4-x86,ProgramLicense
<%InstallDir%>/LICENSE.txt

FreeBSD-4-x86,ProgramName
{}

FreeBSD-4-x86,ProgramReadme
<%InstallDir%>/README.txt

FreeBSD-4-x86,PromptForRoot
Yes

FreeBSD-4-x86,RequireRoot
No

FreeBSD-4-x86,RootInstallDir
/usr/local/<%ShortAppName%>

FreeBSD-x86,Active
No

FreeBSD-x86,DefaultDirectoryPermission
0755

FreeBSD-x86,DefaultFilePermission
0755

FreeBSD-x86,Executable
<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>

FreeBSD-x86,FallBackToConsole
Yes

FreeBSD-x86,InstallDir
<%Home%>/<%ShortAppName%>

FreeBSD-x86,InstallMode
Standard

FreeBSD-x86,InstallType
Typical

FreeBSD-x86,ProgramExecutable
{}

FreeBSD-x86,ProgramFolderAllUsers
No

FreeBSD-x86,ProgramFolderName
<%AppName%>

FreeBSD-x86,ProgramLicense
<%InstallDir%>/LICENSE.txt

FreeBSD-x86,ProgramName
{}

FreeBSD-x86,ProgramReadme
<%InstallDir%>/README.txt

FreeBSD-x86,PromptForRoot
Yes

FreeBSD-x86,RequireRoot
No

FreeBSD-x86,RootInstallDir
/usr/local/<%ShortAppName%>

HPUX-hppa,Active
No

HPUX-hppa,DefaultDirectoryPermission
0755

HPUX-hppa,DefaultFilePermission
0755

HPUX-hppa,Executable
<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>

HPUX-hppa,FallBackToConsole
Yes

HPUX-hppa,InstallDir
<%Home%>/<%ShortAppName%>

HPUX-hppa,InstallMode
Standard

HPUX-hppa,InstallType
Typical

HPUX-hppa,ProgramExecutable
{}

HPUX-hppa,ProgramFolderAllUsers
No

HPUX-hppa,ProgramFolderName
<%AppName%>

HPUX-hppa,ProgramLicense
<%InstallDir%>/LICENSE.txt

HPUX-hppa,ProgramName
{}

HPUX-hppa,ProgramReadme
<%InstallDir%>/README.txt

HPUX-hppa,PromptForRoot
Yes

HPUX-hppa,RequireRoot
No

HPUX-hppa,RootInstallDir
/usr/local/<%ShortAppName%>

Linux-x86,Active
No

Linux-x86,DefaultDirectoryPermission
0755

Linux-x86,DefaultFilePermission
0755

Linux-x86,Executable
<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>

Linux-x86,FallBackToConsole
Yes

Linux-x86,InstallDir
<%Home%>/<%ShortAppName%>

Linux-x86,InstallMode
Standard

Linux-x86,InstallType
Typical

Linux-x86,ProgramExecutable
{}

Linux-x86,ProgramFolderAllUsers
No

Linux-x86,ProgramFolderName
<%AppName%>

Linux-x86,ProgramLicense
<%InstallDir%>/LICENSE.txt

Linux-x86,ProgramName
{}

Linux-x86,ProgramReadme
<%InstallDir%>/README.txt

Linux-x86,PromptForRoot
Yes

Linux-x86,RequireRoot
No

Linux-x86,RootInstallDir
/usr/local/<%ShortAppName%>

Solaris-sparc,Active
No

Solaris-sparc,DefaultDirectoryPermission
0755

Solaris-sparc,DefaultFilePermission
0755

Solaris-sparc,Executable
<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>

Solaris-sparc,FallBackToConsole
Yes

Solaris-sparc,InstallDir
<%Home%>/<%ShortAppName%>

Solaris-sparc,InstallMode
Standard

Solaris-sparc,InstallType
Typical

Solaris-sparc,ProgramExecutable
{}

Solaris-sparc,ProgramFolderAllUsers
No

Solaris-sparc,ProgramFolderName
<%AppName%>

Solaris-sparc,ProgramLicense
<%InstallDir%>/LICENSE.txt

Solaris-sparc,ProgramName
{}

Solaris-sparc,ProgramReadme
<%InstallDir%>/README.txt

Solaris-sparc,PromptForRoot
Yes

Solaris-sparc,RequireRoot
No

Solaris-sparc,RootInstallDir
/usr/local/<%ShortAppName%>

TarArchive,Active
No

TarArchive,CompressionLevel
6

TarArchive,DefaultDirectoryPermission
0755

TarArchive,DefaultFilePermission
0755

TarArchive,Executable
<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>

TarArchive,FallBackToConsole
Yes

TarArchive,InstallDir
<%Home%>/<%ShortAppName%>

TarArchive,InstallMode
Standard

TarArchive,InstallType
Typical

TarArchive,OutputFileName
<%ShortAppName%>-<%Version%>.tar.gz

TarArchive,ProgramExecutable
{}

TarArchive,ProgramFolderAllUsers
No

TarArchive,ProgramFolderName
<%AppName%>

TarArchive,ProgramLicense
<%InstallDir%>/LICENSE.txt

TarArchive,ProgramName
{}

TarArchive,ProgramReadme
<%InstallDir%>/README.txt

TarArchive,PromptForRoot
Yes

TarArchive,RequireRoot
No

TarArchive,RootInstallDir
/usr/local/<%ShortAppName%>

TarArchive,VirtualTextMap
{<%InstallDir%> <%ShortAppName%>}

Windows,Active
Yes

Windows,Executable
<%AppName%>-Setup<%Ext%>

Windows,IncludeTWAPI
No

Windows,InstallDir
<%PROGRAM_FILES%>/<%AppName%>

Windows,InstallMode
Standard

Windows,InstallType
Typical

Windows,ProgramExecutable
{}

Windows,ProgramFolderAllUsers
No

Windows,ProgramFolderName
<%AppName%>

Windows,ProgramLicense
<%InstallDir%>/LICENSE

Windows,ProgramName
{}

Windows,ProgramReadme
<%InstallDir%>/README.html

Windows,WindowsIcon
{Setup Blue Screen.ico}

ZipArchive,Active
No

ZipArchive,CompressionLevel
6

ZipArchive,DefaultDirectoryPermission
0755

ZipArchive,DefaultFilePermission
0755

ZipArchive,Executable
<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>

ZipArchive,FallBackToConsole
Yes

ZipArchive,InstallDir
<%Home%>/<%ShortAppName%>

ZipArchive,InstallMode
Standard

ZipArchive,InstallType
Typical

ZipArchive,OutputFileName
<%ShortAppName%>-<%Version%>.zip

ZipArchive,ProgramExecutable
{}

ZipArchive,ProgramFolderAllUsers
No

ZipArchive,ProgramFolderName
<%AppName%>

ZipArchive,ProgramLicense
<%InstallDir%>/LICENSE.txt

ZipArchive,ProgramName
{}

ZipArchive,ProgramReadme
<%InstallDir%>/README.txt

ZipArchive,PromptForRoot
Yes

ZipArchive,RequireRoot
No

ZipArchive,RootInstallDir
/usr/local/<%ShortAppName%>

ZipArchive,VirtualTextMap
{<%InstallDir%> <%ShortAppName%>}

}


proc RaiseStep { wizard id } {
set widget [$id widget get Caption]
if {$widget ne ""} {
if {![string length [::InstallJammer::GetText $id Caption]]} {
grid remove $widget
} else {
grid $widget
}
}

set widget [$id widget get Message]
if {$widget ne ""} {
if {![string length [::InstallJammer::GetText $id Message]]} {
grid remove $widget
} else {
grid $widget
}
}

set widget [$id widget get ClientArea]
if {$widget ne ""} {
grid configure $wizard.buttons -pady {18 5}
} else {
grid configure $wizard.buttons -pady 5
}
}

proc CreateWindow.CopyFiles {wizard id} {
    CreateWindow.CustomBlankPane2 $wizard $id

    set base [$id widget get ClientArea]

    grid rowconfigure    $base 0 -weight 1
    grid columnconfigure $base 0 -weight 1

    set frame [frame $base.frame]
    grid $frame -row 0 -column 0 -sticky new

    grid rowconfigure    $frame 1 -weight 1
    grid columnconfigure $frame 0 -weight 1

    Label $frame.file -anchor w -elide 1 -ellipsis {[...]} -elideside center
    grid  $frame.file -row 0 -column 0 -sticky new -padx [list 0 10]
    $id widget set FileLabel -widget $frame.file

    ttk::progressbar $frame.progress
    grid $frame.progress -row 1 -column 0 -sticky ew
    $id widget set ProgressValue -widget $frame.progress -type progress
}

proc CreateWindow.Welcome {wizard id} {
    CreateWindow.CustomBlankPane1 $wizard $id
}

proc CreateWindow.StartCopyingFiles {wizard id} {
    CreateWindow.CustomTextPane1 $wizard $id

    set text [$id widget get Text]
    $text configure -bg [style configure . -background]
}

proc CreateWindow.SetupComplete {wizard id} {
    CreateWindow.CustomBlankPane1 $wizard $id
}

proc CreateWindow.CustomTextPane1 {wizard id} {
    CreateWindow.CustomBlankPane2 $wizard $id

    set base [$id widget get ClientArea]

    grid rowconfigure    $base 0 -weight 1
    grid columnconfigure $base 0 -weight 1

    frame $base.frame
    grid  $base.frame -row 0 -column 0 -sticky news
    
    grid rowconfigure    $base.frame 0 -weight 1
    grid columnconfigure $base.frame 0 -weight 1

    if {![$id get TextFont font]} { set font TkTextFont }

    text $base.frame.text  -bg white -font $font -wrap word -highlightthickness 0  -yscrollcommand "$base.frame.vs set"  -xscrollcommand "$base.frame.hs set"
    grid $base.frame.text -row 0 -column 0 -sticky news
    $id widget set Text -widget $base.frame.text

    ttk::scrollbar $base.frame.vs -command "$base.frame.text yview"
    grid $base.frame.vs -row 0 -column 1 -sticky ns

    ttk::scrollbar $base.frame.hs -command "$base.frame.text xview"  -orient horizontal
    grid $base.frame.hs -row 1 -column 0 -sticky ew
}

proc CreateWindow.CopyFiles {wizard id} {
    CreateWindow.CustomBlankPane2 $wizard $id

    set base [$id widget get ClientArea]

    grid rowconfigure    $base 0 -weight 1
    grid columnconfigure $base 0 -weight 1

    set frame [frame $base.frame]
    grid $frame -row 0 -column 0 -sticky new

    grid rowconfigure    $frame 1 -weight 1
    grid columnconfigure $frame 0 -weight 1

    Label $frame.file -anchor w -elide 1 -ellipsis {[...]} -elideside center
    grid  $frame.file -row 0 -column 0 -sticky new -padx [list 0 10]
    $id widget set FileLabel -widget $frame.file

    ttk::progressbar $frame.progress
    grid $frame.progress -row 1 -column 0 -sticky ew
    $id widget set ProgressValue -widget $frame.progress -type progress
}

proc CreateWindow.CustomTextPane1 {wizard id} {
    CreateWindow.CustomBlankPane2 $wizard $id

    set base [$id widget get ClientArea]

    grid rowconfigure    $base 0 -weight 1
    grid columnconfigure $base 0 -weight 1

    frame $base.frame
    grid  $base.frame -row 0 -column 0 -sticky news
    
    grid rowconfigure    $base.frame 0 -weight 1
    grid columnconfigure $base.frame 0 -weight 1

    if {![$id get TextFont font]} { set font TkTextFont }

    text $base.frame.text  -bg white -font $font -wrap word -highlightthickness 0  -yscrollcommand "$base.frame.vs set"  -xscrollcommand "$base.frame.hs set"
    grid $base.frame.text -row 0 -column 0 -sticky news
    $id widget set Text -widget $base.frame.text

    ttk::scrollbar $base.frame.vs -command "$base.frame.text yview"
    grid $base.frame.vs -row 0 -column 1 -sticky ns

    ttk::scrollbar $base.frame.hs -command "$base.frame.text xview"  -orient horizontal
    grid $base.frame.hs -row 1 -column 0 -sticky ew
}

proc CreateWindow.SelectDestination {wizard id} {
    variable info

    CreateWindow.CustomBlankPane2 $wizard $id

    set base [$id widget get ClientArea]

    set varName [$id get VirtualText]

    grid rowconfigure    $base 0 -weight 1
    grid columnconfigure $base 0 -weight 1

    labelframe $base.frame -relief groove -bd 2
    grid $base.frame -row 0 -column 0 -sticky sew
    $id widget set DestinationLabel -widget $base.frame

    grid rowconfigure    $base.frame 0 -weight 1
    grid columnconfigure $base.frame 0 -weight 1

    Label $base.frame.destination -anchor nw -textvariable ::info($varName)  -elide 1 -elideside center -ellipsis {[...]}
    grid  $base.frame.destination -row 0 -column 0 -sticky ew -padx 5 -pady 3

    Button $base.frame.browse -command  [list ::InstallAPI::PromptForDirectory -virtualtext $varName]
    grid $base.frame.browse -row 0 -column 1 -sticky nw -padx 5 -pady [list 0 5]
    $id widget set BrowseButton -widget $base.frame.browse
}

proc CreateWindow.SetupComplete {wizard id} {
    CreateWindow.CustomBlankPane1 $wizard $id
}

proc CreateWindow.CustomBlankPane2 {wizard id} {
    set base  [$wizard widget get $id]
    set frame $base.titleframe

    grid rowconfigure    $base 3 -weight 1
    grid columnconfigure $base 0 -weight 1

    frame $frame -bd 0 -relief flat -background white
    grid  $frame -row 0 -column 0 -sticky nsew

    grid rowconfigure    $frame 1 -weight 1
    grid columnconfigure $frame 0 -weight 1

    Label $frame.title -background white -anchor nw -justify left -autowrap 1  -font TkCaptionFont -textvariable [$wizard variable $id -text1]
    grid $frame.title -row 0 -column 0 -sticky new -padx 5 -pady 5
    $id widget set Title -widget $frame.title

    Label $frame.subtitle -background white -anchor nw -autowrap 1  -justify left -textvariable [$wizard variable $id -text2]
    grid $frame.subtitle -row 1 -column 0 -sticky new -padx [list 20 5]
    $id widget set Subtitle -widget $frame.subtitle

    label $frame.icon -borderwidth 0 -background white -anchor c
    grid  $frame.icon -row 0 -column 1 -rowspan 2
    $id widget set Icon -widget $frame.icon -type image

    Separator $base.separator -relief groove -orient horizontal
    grid $base.separator -row 1 -column 0 -sticky ew 

    Label $base.caption -anchor nw -justify left -autowrap 1  -textvariable [$wizard variable $id -text3]
    grid $base.caption -row 2 -sticky nsew -padx 8 -pady [list 8 4]
    $id widget set Caption -widget $base.caption

    frame $base.clientarea
    grid  $base.clientarea -row 3 -sticky nsew -padx 8 -pady 4
    $id widget set ClientArea -widget $base.clientarea -type frame

    Label $base.message -anchor nw -justify left -autowrap 1  -textvariable [$wizard variable $id -text4]
    grid $base.message -row 4 -sticky nsew -padx 8 -pady [list 4 8]
    $id widget set Message -widget $base.message
}

proc CreateWindow.CustomBlankPane1 {wizard id} {
    set base [$wizard widget get $id]

    grid rowconfigure    $base 1 -weight 1
    grid columnconfigure $base 1 -weight 1

    label $base.image -borderwidth 0 -background white
    grid  $base.image -row 0 -column 0 -rowspan 2 -sticky nw
    $id widget set Image -type image -widget $base.image

    Label $base.title -height 3 -bg white -font TkCaptionFont  -autowrap 1 -anchor nw -justify left
    grid $base.title -row 0 -column 1 -sticky ew -padx 20 -pady [list 20 10]
    $id widget set Caption -type text -widget $base.title

    Label $base.message -bg white -autowrap 1 -anchor nw -justify left
    grid  $base.message -row 1 -column 1 -sticky news -padx 20
    $id widget set Message -type text -widget $base.message

    Separator $base.sep -orient horizontal
    grid $base.sep -row 2 -column 0 -columnspan 2 -sticky ew
}

proc CreateWindow.CustomTextPane1 {wizard id} {
    CreateWindow.CustomBlankPane2 $wizard $id

    set base [$id widget get ClientArea]

    grid rowconfigure    $base 0 -weight 1
    grid columnconfigure $base 0 -weight 1

    frame $base.frame
    grid  $base.frame -row 0 -column 0 -sticky news
    
    grid rowconfigure    $base.frame 0 -weight 1
    grid columnconfigure $base.frame 0 -weight 1

    if {![$id get TextFont font]} { set font TkTextFont }

    text $base.frame.text  -bg white -font $font -wrap word -highlightthickness 0  -yscrollcommand "$base.frame.vs set"  -xscrollcommand "$base.frame.hs set"
    grid $base.frame.text -row 0 -column 0 -sticky news
    $id widget set Text -widget $base.frame.text

    ttk::scrollbar $base.frame.vs -command "$base.frame.text yview"
    grid $base.frame.vs -row 0 -column 1 -sticky ns

    ttk::scrollbar $base.frame.hs -command "$base.frame.text xview"  -orient horizontal
    grid $base.frame.hs -row 1 -column 0 -sticky ew
}


array set ::InstallJammer::files {files.tcl {proc ::InstallJammer::InitFiles {} {
File ::3240A57C-45CE-44E5-98B2-3DA4EF95E7CD -name 3rdparty -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/3rdparty -mtime 1220953694 -attributes 0000 -filemethod 0
File ::12D02F1F-58CF-40C6-9087-4EF42500F1DA -name lib -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/3rdparty/lib -size 4096 -mtime 1220953700 -attributes 0000 -filemethod 0
File ::643321ED-6BA8-4BBD-9712-143392551A89 -name bcel-5.1-src.zip -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/3rdparty/lib -size 840130 -mtime 1220953695 -attributes 1000 -filemethod 0
File ::B6F61E3B-C043-4D77-AC16-2610A82E1299 -name bcel-5.1.jar -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/3rdparty/lib -size 515920 -mtime 1220953697 -attributes 1000 -filemethod 0
File ::B6FA8D82-B501-4C15-856C-756A033DCDE2 -name bluecove-2.0.2-sources.tar.gz -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/3rdparty/lib -size 277223 -mtime 1220953697 -attributes 1000 -filemethod 0
File ::B0E600C8-F3B1-4881-AFBA-BFF724910DFE -name bluecove.jar -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/3rdparty/lib -size 455162 -mtime 1220953698 -attributes 1000 -filemethod 0
File ::08461F71-16DD-48C6-B7EA-EE111DAF74FB -name commons-cli-1.0.jar -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/3rdparty/lib -size 30117 -mtime 1220953699 -attributes 1000 -filemethod 0
File ::24C4A65C-C91F-45E0-BA24-6C8E736059F3 -name cpptasks.jar -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/3rdparty/lib -size 276513 -mtime 1220953699 -attributes 1000 -filemethod 0
File ::43E3BD1B-E556-4159-8CFE-9D088B599A0B -name libusb-win32-filter-bin-0.1.12.1.exe -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/3rdparty/lib -size 416687 -mtime 1220953700 -attributes 1000 -filemethod 0
File ::625ADBA6-B673-4399-B22D-D60E719CBD54 -name bin -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/bin -size 4096 -mtime 1220953811 -attributes 0000 -filemethod 0
File ::FB5CDB93-68B8-43B2-B69B-652F54A6455E -name jlibnxt.dll -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/bin -size 8704 -mtime 1220953809 -attributes 1000 -filemethod 0
File ::DB8FF39C-30E5-4274-AD58-51E5694CEEF6 -name lejos_nxt_rom.bin -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/bin -size 35216 -mtime 1220953809 -attributes 1000 -filemethod 0
File ::85EBE195-8F53-49F4-937A-5821800B10EA -name lejosdl.bat -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/bin -size 408 -mtime 1220953809 -attributes 1000 -filemethod 0
File ::67C6E139-E60D-4561-9AE8-755B96D30005 -name lejosfirmdl.bat -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/bin -size 1116 -mtime 1220953809 -attributes 1000 -filemethod 0
File ::8BFA4E79-3602-4A53-A206-5C81D1218D63 -name lejosjc.bat -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/bin -size 406 -mtime 1220953809 -attributes 1000 -filemethod 0
File ::A34687CC-F0DA-4BF7-9AC7-DF9BCCABD1F4 -name nxj.bat -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/bin -size 554 -mtime 1220953810 -attributes 1000 -filemethod 0
File ::FB8F0B92-090C-4F4E-8A92-CC25719811BC -name nxjbrowse.bat -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/bin -size 456 -mtime 1220953810 -attributes 1000 -filemethod 0
File ::FB557A7A-79CD-4006-8C07-B0F9250211AF -name nxjc.bat -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/bin -size 189 -mtime 1220953810 -attributes 1000 -filemethod 0
File ::D0AA8323-B536-431C-A3C4-EBEB85D6555E -name nxjconsole.bat -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/bin -size 415 -mtime 1220953810 -attributes 1000 -filemethod 0
File ::03E12ED2-5AF8-4F87-8001-2A0EA303B46D -name nxjdataviewer.bat -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/bin -size 418 -mtime 1220953810 -attributes 1000 -filemethod 0
File ::9D09AFE4-DAC2-4D27-8F73-ED243C218D93 -name nxjflash.exe -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/bin -size 62622 -mtime 1220953810 -attributes 1000 -filemethod 0
File ::BD0B2FB6-4BDA-4213-924B-3FB969E229DB -name nxjlink.bat -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/bin -size 425 -mtime 1220953810 -attributes 1000 -filemethod 0
File ::E757CDC9-291F-4C47-9A76-8279DA4307E8 -name nxjmonitor.bat -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/bin -size 418 -mtime 1220953810 -attributes 1000 -filemethod 0
File ::95B424F5-49C5-40C2-B711-927678E7D31E -name nxjsocketproxy.bat -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/bin -size 419 -mtime 1220953810 -attributes 1000 -filemethod 0
File ::F65EA2CC-A6A1-41FB-B135-B5070F66E9FA -name nxjupload.bat -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/bin -size 462 -mtime 1220953811 -attributes 1000 -filemethod 0
File ::A65859D8-4292-4FF9-A2C1-F61F913F248C -name StartUpText.bin -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/bin -size 31592 -mtime 1220953809 -attributes 1000 -filemethod 0
File ::F7B3236B-0764-4921-9D06-32DDFF7CCB6F -name docs -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs -mtime 1220953733 -attributes 0000 -filemethod 0
File ::86ACCED0-65AF-4D14-B817-6D78F4916358 -name apidocs -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs -size 4096 -mtime 1220953733 -attributes 0000 -filemethod 0
File ::E5992C0B-8F1B-421B-8278-F0917FFDB7E3 -name allclasses-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs -size 23088 -mtime 1220953700 -attributes 1000 -filemethod 0
File ::D65B05B1-0C3D-4F82-BC5E-ABB8EB9F7EB5 -name allclasses-noframe.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs -size 19148 -mtime 1220953700 -attributes 1000 -filemethod 0
File ::01C2CAF4-54AC-43DA-B8E5-91AC9B3FD920 -name constant-values.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs -size 183375 -mtime 1220953700 -attributes 1000 -filemethod 0
File ::C749A081-910B-448F-A6EE-F25AC1F88971 -name deprecated-list.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs -size 4828 -mtime 1220953700 -attributes 1000 -filemethod 0
File ::77BCDC50-AA6E-4548-8337-9BCAE3D56FFA -name help-doc.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs -size 8927 -mtime 1220953700 -attributes 1000 -filemethod 0
File ::11C67FF1-D064-49BE-AC8E-22307D4D22F7 -name index-all.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs -size 544359 -mtime 1220953701 -attributes 1000 -filemethod 0
File ::3F6BD49D-0BD6-4C4F-BE33-99F85180DF64 -name index.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs -size 1334 -mtime 1220953701 -attributes 1000 -filemethod 0
File ::10D1232F-0B46-4B88-A832-A31984A9FD80 -name overview-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs -size 2835 -mtime 1220953701 -attributes 1000 -filemethod 0
File ::7A793FC5-D6BA-4938-B1F7-A2E7BA43222B -name overview-summary.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs -size 7749 -mtime 1220953701 -attributes 1000 -filemethod 0
File ::8AE47BB2-268D-454C-ABF3-6D17E02E0348 -name overview-tree.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs -size 36935 -mtime 1220953701 -attributes 1000 -filemethod 0
File ::EA7A4E6D-97F4-427A-9814-1229637D94D6 -name package-list -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs -size 232 -mtime 1220953701 -attributes 1000 -filemethod 0
File ::B3CA9592-6FB3-4EAC-BE3C-B42301B0826B -name serialized-form.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs -size 152492 -mtime 1220953702 -attributes 1000 -filemethod 0
File ::125B4EEB-7FE1-4303-BBF3-EE88FF63E232 -name stylesheet.css -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs -size 1202 -mtime 1220953702 -attributes 1000 -filemethod 0
File ::02990CF4-B28A-40E1-8798-A998C4736877 -name java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/java -mtime 1220953709 -attributes 0000 -filemethod 0
File ::AF490CFC-3620-416B-8E33-45F6346525E6 -name awt -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/java/awt -size 4096 -mtime 1220953703 -attributes 0000 -filemethod 0
File ::E5D396CB-D6FF-41DD-AD7C-45F9B6AC7AE0 -name package-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/awt -size 848 -mtime 1220953703 -attributes 1000 -filemethod 0
File ::0864A5B8-3CDE-4FA5-A790-38043F0C4B78 -name package-summary.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/awt -size 5883 -mtime 1220953703 -attributes 1000 -filemethod 0
File ::74A950A0-86B2-4542-9B65-EC71B89C4C9A -name package-tree.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/awt -size 5471 -mtime 1220953703 -attributes 1000 -filemethod 0
File ::7197097B-061E-4C77-9BDD-3F12C1111C74 -name Rectangle.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/awt -size 11235 -mtime 1220953702 -attributes 1000 -filemethod 0
File ::2276CFC5-0230-410A-9C3F-170D08E77756 -name io -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/java/io -size 4096 -mtime 1220953705 -attributes 0000 -filemethod 0
File ::30485C00-481C-4190-80C9-F2CCDB55E47A -name BufferedWriter.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/io -size 12370 -mtime 1220953703 -attributes 1000 -filemethod 0
File ::B792797F-0590-4172-932D-DE975771B3F0 -name DataInputStream.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/io -size 28776 -mtime 1220953703 -attributes 1000 -filemethod 0
File ::D024E946-9A1F-49DE-83FD-C458507AF540 -name DataOutputStream.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/io -size 27202 -mtime 1220953703 -attributes 1000 -filemethod 0
File ::0798AD41-1E0F-44E3-B3A5-2259E96B42CF -name EOFException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/io -size 11775 -mtime 1220953703 -attributes 1000 -filemethod 0
File ::53F53C70-5073-4774-BE12-AF7904A688F0 -name File.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/io -size 24528 -mtime 1220953703 -attributes 1000 -filemethod 0
File ::56B05C08-B117-4134-B21D-51C50E0F83D8 -name FileInputStream.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/io -size 14873 -mtime 1220953703 -attributes 1000 -filemethod 0
File ::399451DD-DE90-47CD-B7D8-0E26D44E55D9 -name FileOutputStream.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/io -size 15510 -mtime 1220953704 -attributes 1000 -filemethod 0
File ::67C438D9-F29D-4230-96AA-03741A38628E -name InputStream.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/io -size 27926 -mtime 1220953704 -attributes 1000 -filemethod 0
File ::50B8FE7A-BA05-4582-9B00-D1C50F84641B -name IOException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/io -size 11724 -mtime 1220953704 -attributes 1000 -filemethod 0
File ::D012C16A-0FD3-4E58-BD53-7A51846EC531 -name OutputStream.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/io -size 17697 -mtime 1220953704 -attributes 1000 -filemethod 0
File ::24DBCE6D-8141-4148-8E0C-BA53789BBE83 -name package-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/io -size 2281 -mtime 1220953704 -attributes 1000 -filemethod 0
File ::29A771AB-A5DC-4049-B550-623627F203E7 -name package-summary.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/io -size 8988 -mtime 1220953705 -attributes 1000 -filemethod 0
File ::FF429788-0F9E-4DB2-A1D8-FE3024E45871 -name package-tree.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/io -size 7200 -mtime 1220953705 -attributes 1000 -filemethod 0
File ::D2C6D4BA-738E-45A2-8469-FDEFC6837639 -name PrintStream.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/io -size 14133 -mtime 1220953704 -attributes 1000 -filemethod 0
File ::DF81F9A3-2204-45BD-BE58-3F7776447E39 -name Serializable.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/io -size 6106 -mtime 1220953704 -attributes 1000 -filemethod 0
File ::62B5D621-FD0A-4C92-A82B-73FBC71591CD -name lang -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/java/lang -size 12288 -mtime 1220953709 -attributes 0000 -filemethod 0
File ::DC9D6B31-FD99-48D9-BB4C-95F16BD8AB10 -name ArithmeticException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 9788 -mtime 1220953705 -attributes 1000 -filemethod 0
File ::D04DC3AE-7330-4217-8485-05343E9F1873 -name ArrayIndexOutOfBoundsException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 10284 -mtime 1220953705 -attributes 1000 -filemethod 0
File ::0FF77115-B151-4CDC-A906-FB301BC68FCC -name Class.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 10355 -mtime 1220953705 -attributes 1000 -filemethod 0
File ::0CE31D5A-77AE-4327-B17B-111F8722C532 -name ClassCastException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 10098 -mtime 1220953705 -attributes 1000 -filemethod 0
File ::D441DD8D-EF19-43B4-AE99-C826D14227C3 -name ClassNotFoundException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 9978 -mtime 1220953705 -attributes 1000 -filemethod 0
File ::E659C274-0138-43A1-A590-D9886A8031D8 -name Cloneable.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 6267 -mtime 1220953705 -attributes 1000 -filemethod 0
File ::7CEC5981-DA91-4F4F-B946-9D62046799AC -name Error.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 10072 -mtime 1220953705 -attributes 1000 -filemethod 0
File ::A78A87A5-F310-4523-8525-F50614D717C3 -name Exception.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 10764 -mtime 1220953706 -attributes 1000 -filemethod 0
File ::52D71C29-2F21-4E14-8FC6-EF4D3AFBD150 -name Float.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 14103 -mtime 1220953706 -attributes 1000 -filemethod 0
File ::7289D213-80BB-40CA-B541-49D05618463D -name IllegalArgumentException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 10368 -mtime 1220953706 -attributes 1000 -filemethod 0
File ::3210A21E-EE6F-4283-A4BD-9A745A841FAA -name IllegalMonitorStateException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 10294 -mtime 1220953706 -attributes 1000 -filemethod 0
File ::55137F45-919B-4ADC-8CC0-513830EA6DDF -name IllegalStateException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 10162 -mtime 1220953706 -attributes 1000 -filemethod 0
File ::BA1C6B33-C0D0-45FA-B718-0BAA1EF7BB5A -name Integer.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 19564 -mtime 1220953706 -attributes 1000 -filemethod 0
File ::63CB6735-7B73-4DF2-A102-1A6428C56DFC -name InterruptedException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 9906 -mtime 1220953706 -attributes 1000 -filemethod 0
File ::E6B25D33-33C9-46AC-83FB-36E46594EBAD -name Math.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 25147 -mtime 1220953706 -attributes 1000 -filemethod 0
File ::179AC6D1-87D3-4E0A-97D3-7B9A5976A58C -name NoClassDefFoundError.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 10120 -mtime 1220953706 -attributes 1000 -filemethod 0
File ::377D5541-1527-4A7C-B3BC-299776FFA297 -name NoSuchMethodError.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 9900 -mtime 1220953707 -attributes 1000 -filemethod 0
File ::D51F2D00-22B5-4806-A0E1-D9B1F113FB26 -name NullPointerException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 10152 -mtime 1220953707 -attributes 1000 -filemethod 0
File ::93B1E033-5323-4BA4-9463-F22F485370CE -name NumberFormatException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 10358 -mtime 1220953707 -attributes 1000 -filemethod 0
File ::B18942E2-4904-4CF1-A014-728861569C3C -name Object.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 13822 -mtime 1220953707 -attributes 1000 -filemethod 0
File ::C6B73729-53AC-45EA-B212-2B8AF3D07FD6 -name OutOfMemoryError.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 9830 -mtime 1220953707 -attributes 1000 -filemethod 0
File ::A9FC7CCC-3FC0-429E-95CE-9413A4F0C089 -name package-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 4477 -mtime 1220953709 -attributes 1000 -filemethod 0
File ::61E70465-475C-4FAB-9BBD-E443FC88ADA3 -name package-summary.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 12701 -mtime 1220953709 -attributes 1000 -filemethod 0
File ::FB181475-C2C4-4933-8C33-50E982B49F90 -name package-tree.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 9398 -mtime 1220953709 -attributes 1000 -filemethod 0
File ::2C15CD6A-405F-4783-94E9-FAB98F228851 -name Runtime.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 10081 -mtime 1220953708 -attributes 1000 -filemethod 0
File ::3FE4E3D9-AD5C-4930-8423-70AF3C3E08C7 -name RuntimeException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 10930 -mtime 1220953708 -attributes 1000 -filemethod 0
File ::94C16A5D-1077-4F3A-B057-1ED7AB327798 -name StackOverflowError.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 9880 -mtime 1220953708 -attributes 1000 -filemethod 0
File ::E7164942-E253-4749-B869-8127482F8C8A -name String.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 21384 -mtime 1220953708 -attributes 1000 -filemethod 0
File ::882E269A-5664-479B-A616-0ECE73856DB9 -name StringBuffer.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 23870 -mtime 1220953708 -attributes 1000 -filemethod 0
File ::458903F9-558E-406E-98AF-2BE41049079C -name StringIndexOutOfBoundsException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 10288 -mtime 1220953708 -attributes 1000 -filemethod 0
File ::F397877C-252F-4A96-8F93-DA1E3A0BEB3B -name System.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 18602 -mtime 1220953708 -attributes 1000 -filemethod 0
File ::C3AD5210-C146-4F10-97A2-5AC9FEDDCAE0 -name Thread.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 21953 -mtime 1220953709 -attributes 1000 -filemethod 0
File ::BD36EE28-860D-4728-80A9-7B3C947EBA42 -name ThreadDeath.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 9858 -mtime 1220953709 -attributes 1000 -filemethod 0
File ::15E7176E-244B-4AF6-9A7A-256D7D8DCA91 -name Throwable.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/lang -size 11388 -mtime 1220953709 -attributes 1000 -filemethod 0
File ::50853E8D-AE98-4A2F-A52B-33909D58A9C0 -name util -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/java/util -size 4096 -mtime 1220953711 -attributes 0000 -filemethod 0
File ::E72DCFF5-8411-4EBC-B714-C5F3692E570E -name ArrayList.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/util -size 20271 -mtime 1220953709 -attributes 1000 -filemethod 0
File ::163FC87E-C15D-4351-9D04-F8EEEDF1B8B2 -name BitSet.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/util -size 10589 -mtime 1220953710 -attributes 1000 -filemethod 0
File ::51075C6F-49E4-4A63-8858-BCDDEA5BDBD7 -name EmptyQueueException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/util -size 10301 -mtime 1220953710 -attributes 1000 -filemethod 0
File ::D53BFF20-A904-4A2D-BCC2-91FB13494A3A -name EmptyStackException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/util -size 10319 -mtime 1220953710 -attributes 1000 -filemethod 0
File ::547ADBE0-2797-46AA-9B5C-C3FB85753DAF -name Enumeration.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/util -size 8278 -mtime 1220953710 -attributes 1000 -filemethod 0
File ::FA01FDED-A2FE-48D6-A43F-BF6601C81F19 -name Hashtable.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/util -size 11748 -mtime 1220953710 -attributes 1000 -filemethod 0
File ::839B75AA-37A9-4092-A9EF-4CF2A7327C64 -name Iterator.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/util -size 8854 -mtime 1220953710 -attributes 1000 -filemethod 0
File ::4E5FA4BE-E2C1-45C6-AE4E-9533C4F575B5 -name package-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/util -size 2252 -mtime 1220953711 -attributes 1000 -filemethod 0
File ::B6D9F7C0-ABB6-462F-A159-AB595BD4B215 -name package-summary.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/util -size 8815 -mtime 1220953711 -attributes 1000 -filemethod 0
File ::430A2E56-B154-41E6-B590-CA94C13F4FBE -name package-tree.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/util -size 7358 -mtime 1220953711 -attributes 1000 -filemethod 0
File ::66629BD1-1A5B-4E12-95B5-6D57CF29098B -name Properties.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/util -size 18381 -mtime 1220953710 -attributes 1000 -filemethod 0
File ::FF30F0E2-6FC2-4865-944A-21F4987AF8BA -name Queue.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/util -size 15853 -mtime 1220953710 -attributes 1000 -filemethod 0
File ::49C00A0F-F41B-434B-A7B1-EA0F04025717 -name Random.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/util -size 12652 -mtime 1220953711 -attributes 1000 -filemethod 0
File ::0146F1A1-7052-446D-A72B-90AC199380E2 -name Stack.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/util -size 15828 -mtime 1220953711 -attributes 1000 -filemethod 0
File ::52F8FECD-95DE-428E-A458-316AEEDB27A2 -name Vector.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/java/util -size 25009 -mtime 1220953711 -attributes 1000 -filemethod 0
File ::CD1A0725-87D0-42AF-B9DB-956099F91BBF -name javax -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/javax -mtime 1220953712 -attributes 0000 -filemethod 0
File ::9D44E868-8724-4A22-81C3-239ADF2F4A47 -name bluetooth -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/javax/bluetooth -size 4096 -mtime 1220953712 -attributes 0000 -filemethod 0
File ::B49D597D-7DB8-43F1-B5F0-6AF4B817263E -name BluetoothStateException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/bluetooth -size 10655 -mtime 1220953711 -attributes 1000 -filemethod 0
File ::B4BE321C-AF4F-429D-8412-A6A01E0549AA -name DeviceClass.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/bluetooth -size 12414 -mtime 1220953711 -attributes 1000 -filemethod 0
File ::E5B0930E-2268-4073-BEB9-2F36ED457BBA -name LocalDevice.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/bluetooth -size 18012 -mtime 1220953711 -attributes 1000 -filemethod 0
File ::1F39F97F-5F7E-404D-BFE2-81FD1E3E37A8 -name package-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/bluetooth -size 1399 -mtime 1220953712 -attributes 1000 -filemethod 0
File ::0868E00B-B301-406A-AE0A-DE586D71F96B -name package-summary.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/bluetooth -size 6764 -mtime 1220953712 -attributes 1000 -filemethod 0
File ::3A15C782-22F8-43D7-AA19-9C95C4977874 -name package-tree.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/bluetooth -size 6488 -mtime 1220953712 -attributes 1000 -filemethod 0
File ::F92A35E4-6DD7-4FE1-AD83-9F3289A441A6 -name RemoteDevice.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/bluetooth -size 17465 -mtime 1220953712 -attributes 1000 -filemethod 0
File ::38107CE1-BAF2-453A-8BD6-818ABD77ED93 -name microedition -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/javax/microedition -mtime 1220953713 -attributes 0000 -filemethod 0
File ::71FDCD5A-8B69-4B45-836C-F75585F787CF -name io -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/javax/microedition/io -size 4096 -mtime 1220953713 -attributes 0000 -filemethod 0
File ::5B70952B-24F7-4C0F-9431-C345DA1061F6 -name Connection.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/io -size 8400 -mtime 1220953712 -attributes 1000 -filemethod 0
File ::2FCA41A4-7340-4DD8-BD7C-1C0BDDDFD72A -name InputConnection.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/io -size 10304 -mtime 1220953712 -attributes 1000 -filemethod 0
File ::9E161E63-2788-4A7C-8D2D-06E06589F84A -name OutputConnection.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/io -size 10349 -mtime 1220953712 -attributes 1000 -filemethod 0
File ::874C581B-9F22-475A-B03B-49E2EB6F3BCC -name package-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/io -size 1317 -mtime 1220953713 -attributes 1000 -filemethod 0
File ::14C8B317-CA40-4274-880E-251602967206 -name package-summary.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/io -size 6872 -mtime 1220953713 -attributes 1000 -filemethod 0
File ::AF8A8202-4F9D-4003-840F-1A788C3AB119 -name package-tree.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/io -size 6734 -mtime 1220953713 -attributes 1000 -filemethod 0
File ::A1677106-97BB-4C34-8100-36872DA82487 -name StreamConnection.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/io -size 10766 -mtime 1220953712 -attributes 1000 -filemethod 0
File ::A350697A-B68A-4FCD-BCE7-C7CEA356907E -name lcdui -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 8192 -mtime 1220953716 -attributes 0000 -filemethod 0
File ::A016ED88-6DC6-4BBC-8E79-7E28C01CD41F -name Alert.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 31425 -mtime 1220953713 -attributes 1000 -filemethod 0
File ::01E03E9F-67AF-475D-8CAD-A5FDBF284959 -name Choice.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 20955 -mtime 1220953713 -attributes 1000 -filemethod 0
File ::A97CE970-388C-46D2-8721-69BC2D6F729B -name ChoiceGroup.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 33242 -mtime 1220953713 -attributes 1000 -filemethod 0
File ::67987A10-CD58-4E3E-B1CA-1B6DBAE91725 -name Command.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 17859 -mtime 1220953713 -attributes 1000 -filemethod 0
File ::EB51643E-381E-4F94-94CE-A82E70EA06ED -name CommandListener.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 8565 -mtime 1220953713 -attributes 1000 -filemethod 0
File ::5F580F28-1FD6-45D6-9A8E-F60F2F45C8F8 -name Display.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 18000 -mtime 1220953714 -attributes 1000 -filemethod 0
File ::69F07F5C-DEC2-4A9D-A294-08AE83C652D2 -name Displayable.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 26487 -mtime 1220953714 -attributes 1000 -filemethod 0
File ::54B69EF0-31E1-4C75-8958-489D7DBE4740 -name Font.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 10616 -mtime 1220953714 -attributes 1000 -filemethod 0
File ::A203930D-8165-4135-9964-EE9C18501161 -name Form.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 27988 -mtime 1220953714 -attributes 1000 -filemethod 0
File ::7E66EDAC-2429-40D7-8146-EE2DD34BCA99 -name Gauge.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 17892 -mtime 1220953714 -attributes 1000 -filemethod 0
File ::644C99DF-50A2-44DA-9129-93A840A22802 -name Graphics.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 29380 -mtime 1220953714 -attributes 1000 -filemethod 0
File ::C2D1BC0C-E668-454F-935B-0C532E151FF4 -name Image.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 11033 -mtime 1220953714 -attributes 1000 -filemethod 0
File ::4D2FC138-0728-4177-B9C1-5DDDE400B8FA -name Item.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 25901 -mtime 1220953714 -attributes 1000 -filemethod 0
File ::D886BC90-E446-4C93-A5CC-9B92C8DCF264 -name ItemCommandListener.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 8417 -mtime 1220953714 -attributes 1000 -filemethod 0
File ::CC8E8FDB-E440-44A0-8EF8-7B5C2B0574E9 -name ItemStateListener.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 8083 -mtime 1220953715 -attributes 1000 -filemethod 0
File ::F112A9DC-E637-41A1-8A1D-8048E89E7688 -name List.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 33914 -mtime 1220953715 -attributes 1000 -filemethod 0
File ::2490F7F8-5C83-467A-A8FD-B8267A00E05A -name package-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 3343 -mtime 1220953716 -attributes 1000 -filemethod 0
File ::9D7D3D88-5B9F-433B-A201-527BDE1C6205 -name package-summary.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 10808 -mtime 1220953716 -attributes 1000 -filemethod 0
File ::9D3DF90B-5EDA-43A8-8CFD-CC5321958E03 -name package-tree.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 9776 -mtime 1220953716 -attributes 1000 -filemethod 0
File ::1CDD03DE-A92B-4150-9F1E-A0C977E813DA -name Screen.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 17069 -mtime 1220953715 -attributes 1000 -filemethod 0
File ::6EBD3198-CA55-4A8A-9D93-C28DAF856028 -name Spacer.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 18023 -mtime 1220953715 -attributes 1000 -filemethod 0
File ::D6861474-1210-42B1-A233-9544E442C102 -name StringItem.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 16627 -mtime 1220953715 -attributes 1000 -filemethod 0
File ::2EFDAE93-FB27-4F59-9C92-38A40D2BF136 -name TextBox.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 19519 -mtime 1220953715 -attributes 1000 -filemethod 0
File ::F3895CE7-E224-452E-B1BF-A780DF68C142 -name TextField.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 25265 -mtime 1220953715 -attributes 1000 -filemethod 0
File ::DA51F9F6-7B44-4C44-8517-45CE98E4023A -name Ticker.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/javax/microedition/lcdui -size 10722 -mtime 1220953715 -attributes 1000 -filemethod 0
File ::83412925-BFD2-41EB-8C1F-FC5893B948B6 -name lejos -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/lejos -size 4096 -mtime 1220953732 -attributes 0000 -filemethod 0
File ::51FD7BFE-EA20-42F2-956E-53C3CC6DDC6F -name devices -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/lejos/devices -size 4096 -mtime 1220953717 -attributes 0000 -filemethod 0
File ::7F787031-A6D6-44E9-8085-4FD33AEAC88F -name GPS.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/devices -size 18698 -mtime 1220953716 -attributes 1000 -filemethod 0
File ::B26DF420-70A9-4CF0-8D87-D119073ADC89 -name Keyboard.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/devices -size 15523 -mtime 1220953716 -attributes 1000 -filemethod 0
File ::19A5ABC9-2EBF-48A4-B4D7-8CB4400BCACA -name KeyEvent.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/devices -size 27320 -mtime 1220953716 -attributes 1000 -filemethod 0
File ::4C774D4E-E217-4A3D-93F1-0CD2A66D984B -name KeyListener.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/devices -size 10135 -mtime 1220953716 -attributes 1000 -filemethod 0
File ::816B2F51-5D03-4041-B772-23C39563E90D -name NMEASentence.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/devices -size 14132 -mtime 1220953716 -attributes 1000 -filemethod 0
File ::8154828F-3B46-40CB-8F57-9FF5B336C8CB -name package-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/devices -size 1441 -mtime 1220953716 -attributes 1000 -filemethod 0
File ::73737197-F45E-461D-BE29-87CFB7DDB387 -name package-summary.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/devices -size 7072 -mtime 1220953717 -attributes 1000 -filemethod 0
File ::B898289D-48FA-48A0-AACC-D232ED87530C -name package-tree.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/devices -size 6342 -mtime 1220953717 -attributes 1000 -filemethod 0
File ::A46CEF21-678F-4540-9569-6A8E1B7CB422 -name navigation -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/lejos/navigation -size 4096 -mtime 1220953718 -attributes 0000 -filemethod 0
File ::D6BCF9E7-FAF4-49BC-A7C9-DCB670953A5F -name CompassNavigator.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/navigation -size 27837 -mtime 1220953717 -attributes 1000 -filemethod 0
File ::E39F52E7-C0A5-4E10-A978-931B52CEF783 -name CompassPilot.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/navigation -size 33135 -mtime 1220953717 -attributes 1000 -filemethod 0
File ::1518FCEE-713D-451E-9C75-568AE3F56A76 -name Navigator.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/navigation -size 25430 -mtime 1220953717 -attributes 1000 -filemethod 0
File ::8692258C-6C9D-42B0-98B8-39BCF53ADDBE -name package-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/navigation -size 1496 -mtime 1220953717 -attributes 1000 -filemethod 0
File ::CEC9F09B-43B3-4528-AB27-9BF513A68B8F -name package-summary.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/navigation -size 7676 -mtime 1220953718 -attributes 1000 -filemethod 0
File ::892ABA71-A258-4994-B12E-ACE511B8DFFD -name package-tree.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/navigation -size 6426 -mtime 1220953718 -attributes 1000 -filemethod 0
File ::DCBE811B-B86E-4EDF-8B26-9D87B6E5C527 -name Pilot.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/navigation -size 37047 -mtime 1220953717 -attributes 1000 -filemethod 0
File ::B42C700C-A7F5-4D00-8327-1AAC96CA17B7 -name TachoNavigator.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/navigation -size 45632 -mtime 1220953717 -attributes 1000 -filemethod 0
File ::A936B6C6-6556-43AD-9772-F4ACC543EBB8 -name nxt -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 20480 -mtime 1220953728 -attributes 0000 -filemethod 0
File ::4C8AE74F-F78B-40E1-8092-82AE70BD2359 -name ADSensorPort.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 12399 -mtime 1220953718 -attributes 1000 -filemethod 0
File ::7B242E3C-1024-4FEA-9305-7A4BBC2C1E27 -name BasicMotor.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 16974 -mtime 1220953718 -attributes 1000 -filemethod 0
File ::00082F89-5D01-4AB3-86BE-DAC8D8875036 -name BasicMotorPort.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 10663 -mtime 1220953718 -attributes 1000 -filemethod 0
File ::3348F740-5E82-4E85-A0A3-DD9057A6662C -name BasicSensorPort.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 12914 -mtime 1220953718 -attributes 1000 -filemethod 0
File ::05881592-1D6D-4681-8456-2D3E2DA1AF6B -name Battery.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 9366 -mtime 1220953718 -attributes 1000 -filemethod 0
File ::2277155C-E578-4EC9-BC1B-3812502179B9 -name Button.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 23204 -mtime 1220953719 -attributes 1000 -filemethod 0
File ::CC81579D-489E-4132-BF7E-282DA0E808AF -name ButtonListener.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 8518 -mtime 1220953719 -attributes 1000 -filemethod 0
File ::8F0FAF4C-311C-485D-8A79-601DC10552AE -name ColorSensor.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 22874 -mtime 1220953719 -attributes 1000 -filemethod 0
File ::39DB5D55-57FB-45A4-8611-001529F4CBE9 -name CompassSensor.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 16995 -mtime 1220953719 -attributes 1000 -filemethod 0
File ::5DF28FDB-C5A9-452C-A6E8-28756250C974 -name Flash.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 11980 -mtime 1220953719 -attributes 1000 -filemethod 0
File ::EE4C984E-A7CB-49FD-B886-3BEE15141D6B -name GyroSensor.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 13371 -mtime 1220953719 -attributes 1000 -filemethod 0
File ::23037574-DD44-40B8-9FE4-EB3CE4EDB433 -name I2CPort.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 13046 -mtime 1220953719 -attributes 1000 -filemethod 0
File ::8C1E44C9-FB04-4986-87E9-83ACC51D41F3 -name I2CSensor.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 20210 -mtime 1220953719 -attributes 1000 -filemethod 0
File ::F4B59661-FACF-4135-A95B-9217397B3DD2 -name IRSeeker.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 14459 -mtime 1220953719 -attributes 1000 -filemethod 0
File ::0B5CB57B-E708-444A-A5DA-F444738D356D -name LCD.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 44320 -mtime 1220953720 -attributes 1000 -filemethod 0
File ::DDEC16B0-CDFD-4948-8AE9-F26D2E17F1FA -name LCDOutputStream.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 11861 -mtime 1220953720 -attributes 1000 -filemethod 0
File ::585E3093-3ABE-4DC1-A264-A3A954B85DCF -name LegacySensorPort.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 12594 -mtime 1220953720 -attributes 1000 -filemethod 0
File ::A2E5A0F4-49BE-4B6C-BE83-817DF12ABF7D -name LightSensor.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 19667 -mtime 1220953720 -attributes 1000 -filemethod 0
File ::EC14FE75-3E41-4433-A6FE-522F1BB9C059 -name ListenerCaller.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 7691 -mtime 1220953720 -attributes 1000 -filemethod 0
File ::29C37BC9-5C69-4C4C-A7C6-622906B4D792 -name LSC.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 18099 -mtime 1220953720 -attributes 1000 -filemethod 0
File ::CCFB5C7A-193A-4CCC-AB83-4E51C30DDC3E -name LServo.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 22641 -mtime 1220953720 -attributes 1000 -filemethod 0
File ::E5969767-0279-4044-9EC3-8A21956AD35F -name Motor.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 38943 -mtime 1220953721 -attributes 1000 -filemethod 0
File ::92817C4C-8452-4E51-80C5-F55C7FF10F90 -name Motor.Regulator.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 13488 -mtime 1220953720 -attributes 1000 -filemethod 0
File ::C4207B1C-B5D4-4A16-BD27-50ABDA93401E -name MotorPort.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 16195 -mtime 1220953721 -attributes 1000 -filemethod 0
File ::C725F887-2CF1-4417-B098-C1812CC792E6 -name NXTCam.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 16079 -mtime 1220953721 -attributes 1000 -filemethod 0
File ::01594C16-CE75-45B5-BB28-7AD22EC5A623 -name NXTe.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 16437 -mtime 1220953721 -attributes 1000 -filemethod 0
File ::351B0C08-1D53-42B3-9363-A90BE1310FCF -name OpticalDistanceSensor.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 37940 -mtime 1220953721 -attributes 1000 -filemethod 0
File ::5E04FA34-A8E1-4A2B-AC6F-07937DDAE360 -name package-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 5624 -mtime 1220953724 -attributes 1000 -filemethod 0
File ::96C622AC-3028-40EB-83EE-268177F126FF -name package-summary.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 17564 -mtime 1220953724 -attributes 1000 -filemethod 0
File ::F625708F-D90E-42DB-BA13-244AF74FC010 -name package-tree.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 13816 -mtime 1220953724 -attributes 1000 -filemethod 0
File ::C57B98B9-E2E8-4B35-B74B-469987FAC129 -name Poll.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 19475 -mtime 1220953721 -attributes 1000 -filemethod 0
File ::E5427379-54CE-4B7C-AB6E-9E82CC0712A1 -name PSPNXController.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 18524 -mtime 1220953721 -attributes 1000 -filemethod 0
File ::94990E5B-4816-41E3-B6FD-A84FA49A3579 -name RCXLightSensor.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 14394 -mtime 1220953722 -attributes 1000 -filemethod 0
File ::78BC49FF-D041-4589-8294-24AC555CACC4 -name RCXLink.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 52841 -mtime 1220953722 -attributes 1000 -filemethod 0
File ::198966C7-AD45-4400-BE7D-887E870554A8 -name RCXMotor.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 10697 -mtime 1220953722 -attributes 1000 -filemethod 0
File ::1EC1EAFB-0CE8-4A64-B14A-8E4F284B9299 -name RCXMotorMultiplexer.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 18226 -mtime 1220953722 -attributes 1000 -filemethod 0
File ::2B906A22-DD92-41B3-A790-8802395DBE4E -name RCXPlexedMotorPort.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 12669 -mtime 1220953722 -attributes 1000 -filemethod 0
File ::171400B5-4500-4591-865E-A574D68FB3DD -name RCXRemoteMotorPort.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 12607 -mtime 1220953722 -attributes 1000 -filemethod 0
File ::B81F83FA-5AB9-48F8-8FBF-981A3457DB67 -name RCXSensorMultiplexer.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 16419 -mtime 1220953722 -attributes 1000 -filemethod 0
File ::126C4321-1931-490E-A93A-DFC847D5C1A3 -name SensorConstants.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 21481 -mtime 1220953722 -attributes 1000 -filemethod 0
File ::6C0DB40C-7DDB-4665-BBF9-9E06954A35AB -name SensorPort.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 32681 -mtime 1220953722 -attributes 1000 -filemethod 0
File ::CF37C2AF-2603-41C5-BF7A-10CE25190F13 -name SensorPortListener.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 8327 -mtime 1220953723 -attributes 1000 -filemethod 0
File ::BA82E19B-B3B0-43E5-A57C-4C175D19824E -name Settings.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 12794 -mtime 1220953723 -attributes 1000 -filemethod 0
File ::BD07A851-FD6B-4A49-A78D-C487423092DA -name Sound.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 22667 -mtime 1220953723 -attributes 1000 -filemethod 0
File ::E51A5002-F483-418D-B969-36D5B0F10579 -name SoundSensor.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 14618 -mtime 1220953723 -attributes 1000 -filemethod 0
File ::0506B4A9-56B0-4687-BE8E-397B3DEC6A5C -name SystemSettings.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 11956 -mtime 1220953723 -attributes 1000 -filemethod 0
File ::017C5050-F5A0-4D6D-B258-0EA86ED3395B -name Tachometer.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 8411 -mtime 1220953723 -attributes 1000 -filemethod 0
File ::D68F7CFD-0A7D-4DD0-A685-5E467E46716C -name TachoMotorPort.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 9522 -mtime 1220953723 -attributes 1000 -filemethod 0
File ::43081652-970C-4C09-AAF7-55CEE159C607 -name TextMenu.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 19365 -mtime 1220953724 -attributes 1000 -filemethod 0
File ::37CDF091-C51F-4816-BA23-9DA9F793CB04 -name TiltSensor.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 17019 -mtime 1220953724 -attributes 1000 -filemethod 0
File ::29847FE1-8D4E-4367-A032-D86AEA615090 -name TouchSensor.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 13094 -mtime 1220953724 -attributes 1000 -filemethod 0
File ::B409814B-45B3-4932-A04D-4A0CC50A7E89 -name UltrasonicSensor.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt -size 27256 -mtime 1220953724 -attributes 1000 -filemethod 0
File ::2D50F3D2-DC59-48E0-B34D-4A21858739DC -name comm -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 8192 -mtime 1220953727 -attributes 0000 -filemethod 0
File ::21CDAD66-F851-43E4-B706-50B46116EAB5 -name Bluetooth.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 87602 -mtime 1220953725 -attributes 1000 -filemethod 0
File ::074510C2-D6C4-447B-8DEF-4FF2D47F1A51 -name BTConnection.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 33611 -mtime 1220953725 -attributes 1000 -filemethod 0
File ::2C88DC68-0E8D-4D75-A127-39AD6F5AF6C1 -name DeviceInfo.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 12400 -mtime 1220953725 -attributes 1000 -filemethod 0
File ::573278C9-774A-4B06-BE8E-AC4E6BC946EB -name FirmwareInfo.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 11578 -mtime 1220953725 -attributes 1000 -filemethod 0
File ::D5ADD16A-0DFD-4BDE-86DF-EF0BF23646E3 -name InputValues.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 14776 -mtime 1220953725 -attributes 1000 -filemethod 0
File ::44959141-CC04-4C1A-9999-B5A09FC728F9 -name LCP.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 42151 -mtime 1220953725 -attributes 1000 -filemethod 0
File ::39FD2A48-3943-4328-81CD-018D462A1E17 -name LCPBTResponder.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 12825 -mtime 1220953725 -attributes 1000 -filemethod 0
File ::88A1FF7D-B222-4752-8CFC-3AD06BF2F120 -name NXTComm.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 12404 -mtime 1220953725 -attributes 1000 -filemethod 0
File ::C24DB1AD-00DB-43AF-8DBF-F96106454715 -name NXTCommand.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 30402 -mtime 1220953726 -attributes 1000 -filemethod 0
File ::507AF4DB-0FE2-4FC4-B767-1EF0F0DDFEC6 -name NXTConnection.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 13129 -mtime 1220953726 -attributes 1000 -filemethod 0
File ::E33327DE-E670-465C-AB31-19ECA59D22B5 -name NXTInputStream.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 12304 -mtime 1220953726 -attributes 1000 -filemethod 0
File ::121ECAAA-C29B-4A04-A7D9-72F6CF3F69A9 -name NXTOutputStream.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 11872 -mtime 1220953726 -attributes 1000 -filemethod 0
File ::40160667-7BCE-49B2-8E49-2638F5ADA480 -name NXTProtocol.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 55518 -mtime 1220953726 -attributes 1000 -filemethod 0
File ::6C83B664-D2BD-4E90-B073-2AB880DF0518 -name NXTServerSocket.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 12610 -mtime 1220953726 -attributes 1000 -filemethod 0
File ::99E53EE1-2F1A-41D9-A0A0-0CB8BF700E38 -name NXTSocket.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 18164 -mtime 1220953726 -attributes 1000 -filemethod 0
File ::5037FDB2-6278-4852-B9CF-3BCAB2308D60 -name package-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 2775 -mtime 1220953727 -attributes 1000 -filemethod 0
File ::17F66591-37DE-407B-A4D6-1ED97057DFF3 -name package-summary.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 10349 -mtime 1220953727 -attributes 1000 -filemethod 0
File ::EC759897-ED08-41FC-818C-E3A5EE5ADAE7 -name package-tree.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 10259 -mtime 1220953727 -attributes 1000 -filemethod 0
File ::FA7772D3-062E-45FD-A817-BA8720287AB1 -name RConsole.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 13953 -mtime 1220953726 -attributes 1000 -filemethod 0
File ::AAFAAC82-4962-44F0-B3EE-8311A52AB6B2 -name USB.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 22722 -mtime 1220953727 -attributes 1000 -filemethod 0
File ::906783C1-C8FE-42D2-B4B9-B00904029794 -name USBConnection.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/comm -size 20624 -mtime 1220953727 -attributes 1000 -filemethod 0
File ::5BC76409-023E-414C-9BA3-08A0428F42DB -name debug -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/lejos/nxt/debug -size 4096 -mtime 1220953728 -attributes 0000 -filemethod 0
File ::AB5DDE19-52B3-4079-8500-C806109B1DB3 -name DebugInterface.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/debug -size 22061 -mtime 1220953727 -attributes 1000 -filemethod 0
File ::73D19918-155E-4427-BC70-F01E1DDB3C60 -name DebugMonitor.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/debug -size 10792 -mtime 1220953727 -attributes 1000 -filemethod 0
File ::D5986AFB-AB56-40DB-846D-15B4EB939FCD -name DebugObject.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/debug -size 10836 -mtime 1220953727 -attributes 1000 -filemethod 0
File ::ECA07E57-B727-4BC3-90F1-9BEA1290D6E5 -name DebugStackFrame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/debug -size 11198 -mtime 1220953728 -attributes 1000 -filemethod 0
File ::BA22B7EB-A146-495B-B00F-0777B466AE30 -name DebugThread.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/debug -size 15695 -mtime 1220953728 -attributes 1000 -filemethod 0
File ::5E42EED7-1F74-44E1-AB3F-D38CC32277E9 -name DebugThreads.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/debug -size 14179 -mtime 1220953728 -attributes 1000 -filemethod 0
File ::462BC13C-2FD8-4A63-91F3-486FE979F7A8 -name package-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/debug -size 1416 -mtime 1220953728 -attributes 1000 -filemethod 0
File ::6A01C694-F11B-4642-A5BD-7E64D3F1B192 -name package-summary.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/debug -size 7107 -mtime 1220953728 -attributes 1000 -filemethod 0
File ::D4AE2F1A-FEE8-4EAE-AA55-76C3FADAFC90 -name package-tree.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/debug -size 6458 -mtime 1220953728 -attributes 1000 -filemethod 0
File ::E363BD81-AE52-4E60-AD9C-DBD76D6890D8 -name remote -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/lejos/nxt/remote -size 4096 -mtime 1220953729 -attributes 0000 -filemethod 0
File ::8C1A2D74-322C-4AC8-8239-6E05BB1BE2BD -name package-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/remote -size 1222 -mtime 1220953729 -attributes 1000 -filemethod 0
File ::0F822EEA-BBDE-47BD-8532-460A124C3728 -name package-summary.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/remote -size 6885 -mtime 1220953729 -attributes 1000 -filemethod 0
File ::A2CF282A-40F4-48A7-B13B-FD8B145E1306 -name package-tree.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/remote -size 6801 -mtime 1220953729 -attributes 1000 -filemethod 0
File ::DAACEE60-69FA-4417-939C-446335FBD141 -name RemoteBattery.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/remote -size 18581 -mtime 1220953728 -attributes 1000 -filemethod 0
File ::956088DC-C424-447E-B1F9-8938E02D1789 -name RemoteMotorPort.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/remote -size 21774 -mtime 1220953728 -attributes 1000 -filemethod 0
File ::949DB880-3B54-4396-876A-8AB5DCE83574 -name RemoteNXT.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/remote -size 19721 -mtime 1220953729 -attributes 1000 -filemethod 0
File ::EA48E1FD-1C8B-4193-A24E-8AA3D014CF1E -name RemoteSensorPort.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/nxt/remote -size 26830 -mtime 1220953729 -attributes 1000 -filemethod 0
File ::D947DEA2-BBE6-4FF7-B8E4-196D821A0CCE -name rcxcomm -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/lejos/rcxcomm -size 4096 -mtime 1220953730 -attributes 0000 -filemethod 0
File ::D0AE19B7-844B-4F42-98EA-83F68A866AB2 -name LLC.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/rcxcomm -size 15015 -mtime 1220953729 -attributes 1000 -filemethod 0
File ::D124F121-7B89-4D72-B7FA-5136138944F3 -name LLCHandler.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/rcxcomm -size 16426 -mtime 1220953729 -attributes 1000 -filemethod 0
File ::AF442FC8-5D8B-43D1-A201-7707F8CD07C6 -name LLCReliableHandler.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/rcxcomm -size 15620 -mtime 1220953729 -attributes 1000 -filemethod 0
File ::AD620F76-E30E-40D2-A65E-C5BE1AFAE515 -name Opcode.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/rcxcomm -size 74466 -mtime 1220953730 -attributes 1000 -filemethod 0
File ::3FE30C10-15CD-4BAA-8F49-E4DD09F33D01 -name package-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/rcxcomm -size 1744 -mtime 1220953730 -attributes 1000 -filemethod 0
File ::77FF9A6D-F1A3-42F5-87D6-7F280393DA18 -name package-summary.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/rcxcomm -size 8231 -mtime 1220953730 -attributes 1000 -filemethod 0
File ::AC23A14A-5C1F-4628-94D2-E2BADB210E4E -name package-tree.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/rcxcomm -size 6631 -mtime 1220953730 -attributes 1000 -filemethod 0
File ::240FB65F-B478-49AC-B022-B77A00FB59CE -name PacketHandler.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/rcxcomm -size 18050 -mtime 1220953730 -attributes 1000 -filemethod 0
File ::88617DEF-E2FC-4F93-83A4-01E41EEC180F -name RCXAbstractPort.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/rcxcomm -size 16029 -mtime 1220953730 -attributes 1000 -filemethod 0
File ::BDC5980F-0787-4FE0-BAE2-3E9D62438845 -name RCXPort.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/rcxcomm -size 12162 -mtime 1220953730 -attributes 1000 -filemethod 0
File ::ABB8B697-B4D8-43DC-BACF-1CF5907ECFBB -name Serial.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/rcxcomm -size 14149 -mtime 1220953730 -attributes 1000 -filemethod 0
File ::F082BB64-1022-4976-A35E-13D5FA6DE7FA -name subsumption -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/lejos/subsumption -size 4096 -mtime 1220953732 -attributes 0000 -filemethod 0
File ::E43DD661-933D-4BB1-9167-9B7C63D66A19 -name Activity.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/subsumption -size 22214 -mtime 1220953731 -attributes 1000 -filemethod 0
File ::28F942DE-F047-427D-97BA-3B504EACAB23 -name ActivityBase.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/subsumption -size 13221 -mtime 1220953731 -attributes 1000 -filemethod 0
File ::D8DC1350-3B7E-4CBA-84B5-3C137EBD6462 -name Arbitrator.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/subsumption -size 11401 -mtime 1220953731 -attributes 1000 -filemethod 0
File ::25151976-87F2-44C3-BEE1-8069170F74F2 -name Arbitrator2.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/subsumption -size 12884 -mtime 1220953731 -attributes 1000 -filemethod 0
File ::9E6517EC-8BB5-41BD-B769-903643B51F21 -name Behavior.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/subsumption -size 11221 -mtime 1220953731 -attributes 1000 -filemethod 0
File ::501F9E90-B4BC-4805-A614-09D9B849D923 -name Behavior2.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/subsumption -size 10448 -mtime 1220953731 -attributes 1000 -filemethod 0
File ::E656EFA3-C75C-4FD0-B7B5-A4F7338E87D4 -name package-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/subsumption -size 1891 -mtime 1220953731 -attributes 1000 -filemethod 0
File ::3DE02078-D380-4E18-B4ED-6CF819D3315B -name package-summary.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/subsumption -size 8381 -mtime 1220953731 -attributes 1000 -filemethod 0
File ::35EBA4DF-EC44-40AC-AEA6-7CEEDC156037 -name package-tree.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/subsumption -size 6970 -mtime 1220953732 -attributes 1000 -filemethod 0
File ::89668741-C5B3-4B81-BDD4-DD4D022514E0 -name StopException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/subsumption -size 9993 -mtime 1220953731 -attributes 1000 -filemethod 0
File ::23B986D7-C908-4B83-B792-EB04D8C01FEA -name util -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/lejos/util -size 4096 -mtime 1220953733 -attributes 0000 -filemethod 0
File ::608468E6-DEE7-4D35-ABED-6CF7FB587F5F -name AbstractRecyclable.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/util -size 13834 -mtime 1220953732 -attributes 1000 -filemethod 0
File ::6BAFA9BA-825B-45CC-B7BB-4CBFAB757E68 -name ArrayRecycler.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/util -size 12832 -mtime 1220953732 -attributes 1000 -filemethod 0
File ::76BF8D14-1D2F-4035-A195-5723069C536B -name Assertion.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/util -size 11873 -mtime 1220953732 -attributes 1000 -filemethod 0
File ::A697E783-6CB7-4780-8895-C1E33AF3C5F1 -name ButtonCounter.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/util -size 15389 -mtime 1220953732 -attributes 1000 -filemethod 0
File ::4BC90B2A-A0D0-4A66-B1BB-D86504A10730 -name Datalogger.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/util -size 12873 -mtime 1220953732 -attributes 1000 -filemethod 0
File ::14957BF4-CA6B-46A8-8C2F-D32B029BCE64 -name package-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/util -size 1939 -mtime 1220953733 -attributes 1000 -filemethod 0
File ::63AA8D1A-30ED-4718-AA75-1B5109E99BC1 -name package-summary.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/util -size 8135 -mtime 1220953733 -attributes 1000 -filemethod 0
File ::0F4A4415-EED5-48DB-9B1D-0289C98CD1A0 -name package-tree.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/util -size 6813 -mtime 1220953733 -attributes 1000 -filemethod 0
File ::04188953-1A9D-4F59-A7F2-B7D146C8286C -name Recyclable.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/util -size 10424 -mtime 1220953732 -attributes 1000 -filemethod 0
File ::03026860-2AC8-472D-8C3C-99579BF0D3DB -name RecyclableArray.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/util -size 13517 -mtime 1220953732 -attributes 1000 -filemethod 0
File ::7132F8A8-B756-4BEF-9150-905468D4C913 -name Recycler.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/util -size 12550 -mtime 1220953733 -attributes 1000 -filemethod 0
File ::19A6E8DE-B12B-40F5-B98F-648FD1614A2E -name Timer.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/util -size 12122 -mtime 1220953733 -attributes 1000 -filemethod 0
File ::8587902C-1B5D-44ED-9B41-98C86F713452 -name TimerListener.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/lejos/util -size 7555 -mtime 1220953733 -attributes 1000 -filemethod 0
File ::81AB3C3B-AC7C-4A29-B16C-9A8F68DB1DA5 -name resources -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/apidocs/resources -mtime 1220953733 -attributes 0000 -filemethod 0
File ::F8D57D34-001E-4082-AFE5-BB1987B733F7 -name inherit.gif -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/apidocs/resources -size 57 -mtime 1220953733 -attributes 1000 -filemethod 0
File ::04E488A5-92C2-49BA-996C-5DB5F737EE26 -name pcapidocs -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/pcapidocs -size 4096 -mtime 1220953737 -attributes 0000 -filemethod 0
File ::1974B7BE-60A3-4BBF-9ECA-037913D4B546 -name allclasses-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs -size 2606 -mtime 1220953733 -attributes 1000 -filemethod 0
File ::1B1855B3-BC84-440F-8827-5E85A53D2A90 -name allclasses-noframe.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs -size 2266 -mtime 1220953733 -attributes 1000 -filemethod 0
File ::93DDC5A4-9086-4DBE-A1AF-F8C3A591D03B -name constant-values.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs -size 35733 -mtime 1220953733 -attributes 1000 -filemethod 0
File ::C2A046F2-7F3F-457A-8960-78429E7CE7EE -name deprecated-list.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs -size 4658 -mtime 1220953734 -attributes 1000 -filemethod 0
File ::080A655D-19E7-47FE-AEC9-E0C4C41FC3AD -name help-doc.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs -size 8478 -mtime 1220953734 -attributes 1000 -filemethod 0
File ::8EC06C6F-5ABB-4661-91E4-07FC7E24E650 -name index-all.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs -size 67490 -mtime 1220953734 -attributes 1000 -filemethod 0
File ::85ACBBCE-F2B7-417B-9719-9004B458B636 -name index.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs -size 1211 -mtime 1220953734 -attributes 1000 -filemethod 0
File ::D4FDA51A-5D1D-444A-A35E-719368497A78 -name overview-tree.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs -size 7973 -mtime 1220953734 -attributes 1000 -filemethod 0
File ::D877150D-41AC-4A9B-80DE-0431C57831D6 -name package-list -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs -size 14 -mtime 1220953734 -attributes 1000 -filemethod 0
File ::671EB140-D1A0-43F4-95E8-B1219AAC2EC0 -name serialized-form.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs -size 5898 -mtime 1220953734 -attributes 1000 -filemethod 0
File ::0B43071F-AA0B-4D3C-90ED-D032B7E98DC3 -name stylesheet.css -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs -size 1202 -mtime 1220953734 -attributes 1000 -filemethod 0
File ::4FAE4461-141A-4956-8C11-35553C6EBA1F -name lejos -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/pcapidocs/lejos -mtime 1220953734 -attributes 0000 -filemethod 0
File ::3E5D52CA-A145-43BD-ACBD-5EBF39FFC731 -name pc -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/pcapidocs/lejos/pc -mtime 1220953734 -attributes 0000 -filemethod 0
File ::6A82C666-9EF9-418C-A28F-BB5B5E05A39D -name comm -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 8192 -mtime 1220953737 -attributes 0000 -filemethod 0
File ::4768FA3F-A957-4E47-8943-ECED5DEEA7FF -name BlueZException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 9475 -mtime 1220953735 -attributes 1000 -filemethod 0
File ::F802F528-B0F3-413F-9D7B-C42660C3FB7F -name FileInfo.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 11610 -mtime 1220953735 -attributes 1000 -filemethod 0
File ::B540608B-0B5D-45D2-9A76-1E5E80EA0A12 -name InputValues.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 14497 -mtime 1220953735 -attributes 1000 -filemethod 0
File ::9CB808A3-EC5B-4647-8E28-25AD49F4B389 -name NXTComm.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 15044 -mtime 1220953735 -attributes 1000 -filemethod 0
File ::2B524CB4-A801-4627-91BE-647C7711E71D -name NXTCommand.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 36352 -mtime 1220953736 -attributes 1000 -filemethod 0
File ::EA478553-A434-4F32-825E-72174BEC6754 -name NXTCommBluecove.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 25208 -mtime 1220953735 -attributes 1000 -filemethod 0
File ::68E8667A-DC79-42D3-AABA-2B98AE8FFF6E -name NXTCommBluez.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 21226 -mtime 1220953735 -attributes 1000 -filemethod 0
File ::FAA9C858-3DF2-4D0C-9FA2-2BB20AC853DB -name NXTCommException.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 11684 -mtime 1220953735 -attributes 1000 -filemethod 0
File ::0B0FDF05-E06D-4471-8503-140F28F356F8 -name NXTCommFactory.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 11535 -mtime 1220953736 -attributes 1000 -filemethod 0
File ::013FA03A-8864-4427-85ED-44B945C08B08 -name NXTCommFantom.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 22842 -mtime 1220953736 -attributes 1000 -filemethod 0
File ::AFBA47C9-DF62-4C42-AA76-5229441FFE2F -name NXTCommInputStream.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 11958 -mtime 1220953736 -attributes 1000 -filemethod 0
File ::D6807A12-4BA4-44CD-AE5E-D0A2AAB3AA5B -name NXTCommLibnxt.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 24127 -mtime 1220953736 -attributes 1000 -filemethod 0
File ::C3EA04A7-14F5-4F68-B57F-3205E85BA30B -name NXTCommLogListener.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 8070 -mtime 1220953736 -attributes 1000 -filemethod 0
File ::E0284DC5-ED73-4D12-AC80-B4F4E0CDD628 -name NXTCommOutputStream.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 10954 -mtime 1220953736 -attributes 1000 -filemethod 0
File ::1196136C-791F-4298-B8FB-6947F2F43AD3 -name NXTInfo.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 12601 -mtime 1220953736 -attributes 1000 -filemethod 0
File ::A9469686-FF96-4ED1-A83E-E54676C7E538 -name NXTProtocol.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 57162 -mtime 1220953736 -attributes 1000 -filemethod 0
File ::33605CE1-8AC8-4A6A-920A-8428F5095E01 -name OutputState.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 15067 -mtime 1220953737 -attributes 1000 -filemethod 0
File ::8EE84FD1-3DC6-428E-9BE4-E36689A195FB -name package-frame.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 2929 -mtime 1220953737 -attributes 1000 -filemethod 0
File ::8C80D576-29F6-4856-BDEC-EB42BEF7D659 -name package-summary.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 10155 -mtime 1220953737 -attributes 1000 -filemethod 0
File ::0B21EC3C-9DF4-43F6-8EFE-F29FB53B0367 -name package-tree.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/lejos/pc/comm -size 8258 -mtime 1220953737 -attributes 1000 -filemethod 0
File ::C1A40423-3673-40BC-ACE9-0DB79471BA3D -name resources -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/docs/pcapidocs/resources -mtime 1220953737 -attributes 0000 -filemethod 0
File ::C6243652-07B6-4699-A29A-CF89F77F0A1A -name inherit.gif -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/docs/pcapidocs/resources -size 57 -mtime 1220953737 -attributes 1000 -filemethod 0
File ::8D98B303-3DA2-4C85-A9D4-67AF5F665929 -name lib -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/lib -mtime 1220953811 -attributes 0000 -filemethod 0
File ::3E98A71B-21C9-4DD3-BC1D-FC4A5E607701 -name classes.jar -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/lib -size 239836 -mtime 1220953811 -attributes 1000 -filemethod 0
File ::FB143C8B-534D-487E-A096-D4CF8339680F -name jtools.jar -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/lib -size 78666 -mtime 1220953811 -attributes 1000 -filemethod 0
File ::F0F528AA-CD77-4ECA-965C-8783B4AC7CA3 -name pccomm.jar -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/lib -size 24857 -mtime 1220953811 -attributes 1000 -filemethod 0
File ::DF865BE6-2753-4146-A241-99183A14FAF8 -name pctools.jar -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/lib -size 55747 -mtime 1220953811 -attributes 1000 -filemethod 0
File ::0AF5FDAE-2E01-4412-AC72-00A7B4381895 -name samples -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples -size 16384 -mtime 1220953748 -attributes 0000 -filemethod 0
File ::D41391BE-6291-4EF0-B07B-3748E508FB57 -name samples.properties -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples -size 167 -mtime 1220953737 -attributes 1000 -filemethod 0
File ::28D55D76-9FCE-470B-8AEE-501777A1E677 -name BlueStats -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/BlueStats -mtime 1220953738 -attributes 0000 -filemethod 0
File ::DC4DB813-DADF-4E5C-BC23-3E0F834EFFEC -name BlueStats.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/BlueStats -size 2334 -mtime 1220953738 -attributes 1000 -filemethod 0
File ::AE4C9DEC-D1BD-400C-9F9A-2A2E88CC0CDC -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/BlueStats -size 3176 -mtime 1220953738 -attributes 1000 -filemethod 0
File ::E35515F2-AA03-4A7B-810F-0DA310DC7A4C -name BTConnectTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/BTConnectTest -mtime 1220953737 -attributes 0000 -filemethod 0
File ::4C070788-BA7F-4C9A-B3B6-9444C1D63B42 -name BTConnectTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/BTConnectTest -size 2518 -mtime 1220953737 -attributes 1000 -filemethod 0
File ::F7DE7775-EAF4-48F5-9AC1-C8C2C781642F -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/BTConnectTest -size 3176 -mtime 1220953737 -attributes 1000 -filemethod 0
File ::2DF09FD7-077A-47BD-9993-B5C514A67E72 -name BTGPS -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/BTGPS -mtime 1220953738 -attributes 0000 -filemethod 0
File ::1B0F6CFD-A842-42BC-8A2E-7076BBC0F190 -name BTGPS.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/BTGPS -size 3018 -mtime 1220953738 -attributes 1000 -filemethod 0
File ::109129B7-44F8-44CE-9672-1580FDD8BB9F -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/BTGPS -size 3176 -mtime 1220953738 -attributes 1000 -filemethod 0
File ::96FF6826-DB7D-4E78-A3D2-8969C91AB432 -name BTReceive -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/BTReceive -mtime 1220953738 -attributes 0000 -filemethod 0
File ::9A751CB8-A234-45F9-AAE6-0DB88B17F16B -name BTReceive.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/BTReceive -size 1212 -mtime 1220953738 -attributes 1000 -filemethod 0
File ::CE68F0E0-7236-485D-876A-FE0A36011407 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/BTReceive -size 3176 -mtime 1220953738 -attributes 1000 -filemethod 0
File ::B751673F-4BC0-4F3F-B0EC-03BE904BA78A -name BTSend -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/BTSend -mtime 1220953738 -attributes 0000 -filemethod 0
File ::E46E1A48-97B0-48A5-A31C-566084B96F96 -name BTSend.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/BTSend -size 3209 -mtime 1220953738 -attributes 1000 -filemethod 0
File ::D2DA65C6-3CEF-4065-B4F8-47F053C7D26F -name BumperCar -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/BumperCar -size 4096 -mtime 1220953739 -attributes 0000 -filemethod 0
File ::0B9BB75C-8666-4724-B1CC-32D12A0129EA -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/BumperCar -size 3176 -mtime 1220953739 -attributes 1000 -filemethod 0
File ::D9474789-A0C1-460D-8438-FAF4230DEE54 -name BumperCar.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/BumperCar -size 643 -mtime 1220953738 -attributes 1000 -filemethod 0
File ::9F28AE69-79C5-42A9-9CE9-83234C88779C -name DriveForward.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/BumperCar -size 318 -mtime 1220953739 -attributes 1000 -filemethod 0
File ::D421685C-C40D-46D3-BC40-75824010257D -name HitWall.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/BumperCar -size 651 -mtime 1220953739 -attributes 1000 -filemethod 0
File ::E0D8CD55-C037-49D9-BD4D-44991899212C -name ColorDetector -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/ColorDetector -mtime 1220953739 -attributes 0000 -filemethod 0
File ::2E00F98A-71C9-4393-B68A-FE638025C611 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/ColorDetector -size 3176 -mtime 1220953739 -attributes 1000 -filemethod 0
File ::4F1AA208-9E21-4ED8-879B-FBE134EC106B -name ColorDetector.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/ColorDetector -size 959 -mtime 1220953739 -attributes 1000 -filemethod 0
File ::821F79C7-5D48-44B0-84C3-27A2AA8200B4 -name CompassTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/CompassTest -mtime 1220953739 -attributes 0000 -filemethod 0
File ::22A38933-2837-4FC4-819D-195796F39666 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/CompassTest -size 3176 -mtime 1220953739 -attributes 1000 -filemethod 0
File ::76777268-C579-4797-B44E-C4788A06B9AC -name CompassTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/CompassTest -size 469 -mtime 1220953739 -attributes 1000 -filemethod 0
File ::0F225242-738B-4DB1-9B84-8E593C409B67 -name DLTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/DLTest -mtime 1220953739 -attributes 0000 -filemethod 0
File ::BA3A4F4D-344A-4E62-8E46-C0C010C52B7B -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/DLTest -size 3176 -mtime 1220953739 -attributes 1000 -filemethod 0
File ::EA9E1186-8C53-4CD6-BE6B-03B59EAAD0B3 -name DLTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/DLTest -size 1095 -mtime 1220953739 -attributes 1000 -filemethod 0
File ::4DC878A5-205E-4CF0-B678-40ED8E147390 -name ExceptionTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/ExceptionTest -mtime 1220953740 -attributes 0000 -filemethod 0
File ::C6661258-974D-4E5E-A4A5-952318B76531 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/ExceptionTest -size 3176 -mtime 1220953740 -attributes 1000 -filemethod 0
File ::8EB27B06-62F3-47BA-93D4-9F8D4ECE481A -name ExceptionTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/ExceptionTest -size 403 -mtime 1220953739 -attributes 1000 -filemethod 0
File ::18AD0FD0-FDF2-447B-84BA-035CC98AED6C -name FileTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/FileTest -mtime 1220953740 -attributes 0000 -filemethod 0
File ::C1519386-67B1-4A42-9F69-C1EFB1A5579B -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/FileTest -size 3176 -mtime 1220953740 -attributes 1000 -filemethod 0
File ::C47963D3-35B5-408E-A3D5-E40EA66F25B1 -name FileTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/FileTest -size 4198 -mtime 1220953740 -attributes 1000 -filemethod 0
File ::30B653A5-8B36-47EB-B68D-4BB9AD346258 -name GraphicsSample -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/GraphicsSample -mtime 1220953740 -attributes 0000 -filemethod 0
File ::BDD8B87F-3D15-49FE-A19E-ECD3012D9CC7 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/GraphicsSample -size 3176 -mtime 1220953740 -attributes 1000 -filemethod 0
File ::C53C4FF7-0A71-4159-90B0-AE835240FCDB -name GraphicsSample.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/GraphicsSample -size 454 -mtime 1220953740 -attributes 1000 -filemethod 0
File ::F35D2486-C74B-42C7-A5D1-720727BB7964 -name HelloWorld -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/HelloWorld -mtime 1220953741 -attributes 0000 -filemethod 0
File ::83C15044-76C1-413A-834D-2411D7BFDCC9 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/HelloWorld -size 3176 -mtime 1220953741 -attributes 1000 -filemethod 0
File ::9488836D-F38F-4D49-A2C4-BBA96E634C4B -name HelloWorld.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/HelloWorld -size 290 -mtime 1220953740 -attributes 1000 -filemethod 0
File ::1298EA27-E242-4ED7-B15C-ECC31A492DFF -name I2CDevices -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/I2CDevices -mtime 1220953741 -attributes 0000 -filemethod 0
File ::39BC4E4E-555A-4DF4-AAF7-4DE4BF315F69 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/I2CDevices -size 3176 -mtime 1220953741 -attributes 1000 -filemethod 0
File ::C35BA5F3-3022-4406-8305-3D0D91C35C16 -name I2CDevices.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/I2CDevices -size 727 -mtime 1220953741 -attributes 1000 -filemethod 0
File ::2E22DCC6-5B0D-45B3-A2C0-01445946881E -name KeyboardTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/KeyboardTest -mtime 1220953741 -attributes 0000 -filemethod 0
File ::3A59FB31-3C9F-4269-BB90-4454D4FD4943 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/KeyboardTest -size 3183 -mtime 1220953741 -attributes 1000 -filemethod 0
File ::5E874453-4AAB-4878-BB64-93D6371E70EF -name KeyboardTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/KeyboardTest -size 4152 -mtime 1220953741 -attributes 1000 -filemethod 0
File ::115FC9A8-8DD0-440E-A23D-546D734D5065 -name LatteboxTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/LatteboxTest -size 4096 -mtime 1220953742 -attributes 0000 -filemethod 0
File ::89B068B9-FC50-40B2-83B0-E2BDE2DEE166 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/LatteboxTest -size 3176 -mtime 1220953742 -attributes 1000 -filemethod 0
File ::3A9AE35F-D85F-4520-938D-D84E8110BAA5 -name DebugMessages.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/LatteboxTest -size 1692 -mtime 1220953742 -attributes 1000 -filemethod 0
File ::8CE6309E-E49A-48BA-A8DB-8E290027CECF -name LatteboxTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/LatteboxTest -size 2176 -mtime 1220953742 -attributes 1000 -filemethod 0
File ::8F8FB3EF-45A2-4B83-838D-4FC1AC133602 -name LCDUI -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/LCDUI -mtime 1220953741 -attributes 0000 -filemethod 0
File ::5D34D891-B651-466E-B803-721B615434A0 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/LCDUI -size 3176 -mtime 1220953741 -attributes 1000 -filemethod 0
File ::FAD7BCCB-7186-47C5-BF5B-696811162B08 -name LCDUI.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/LCDUI -size 12802 -mtime 1220953741 -attributes 1000 -filemethod 0
File ::7B0A77CD-887D-48D5-9D7E-FCFC7F47355A -name Line -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/Line -mtime 1220953742 -attributes 0000 -filemethod 0
File ::BC425FA7-9BAA-486A-BAE9-F5BDA35658B7 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/Line -size 3176 -mtime 1220953742 -attributes 1000 -filemethod 0
File ::E6787368-964C-403E-8281-98A2F6958D4B -name Line.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/Line -size 1794 -mtime 1220953742 -attributes 1000 -filemethod 0
File ::4D47C129-533B-426C-8629-70748E44610A -name Listen -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/Listen -mtime 1220953742 -attributes 0000 -filemethod 0
File ::824FE862-6849-45BB-8973-19BE80B30572 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/Listen -size 3176 -mtime 1220953742 -attributes 1000 -filemethod 0
File ::E110FD80-A505-46C6-883F-6639DDDFD587 -name Listen.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/Listen -size 1421 -mtime 1220953742 -attributes 1000 -filemethod 0
File ::D30A41C9-DC1E-47C8-81C4-DB719C44F001 -name LLCMonitor -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/LLCMonitor -mtime 1220953742 -attributes 0000 -filemethod 0
File ::C07A5DF5-4F55-441C-B586-9261339F62AE -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/LLCMonitor -size 3176 -mtime 1220953741 -attributes 1000 -filemethod 0
File ::B66E9530-7225-46A3-8205-F1B1EF616E53 -name LLCMonitor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/LLCMonitor -size 645 -mtime 1220953741 -attributes 1000 -filemethod 0
File ::F0134811-361F-4E7E-8536-8833248AC8AE -name MemoryTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/MemoryTest -mtime 1220953742 -attributes 0000 -filemethod 0
File ::A48C4C43-ED4F-4BCA-A8DD-15FCC1950EE2 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/MemoryTest -size 3176 -mtime 1220953742 -attributes 1000 -filemethod 0
File ::BF4D0012-ABD8-48E5-8D6D-58473273ACF8 -name MemoryTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/MemoryTest -size 579 -mtime 1220953742 -attributes 1000 -filemethod 0
File ::B2F02384-14F4-4B2F-ADBF-6BB7ED8E3E36 -name MonitorTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/MonitorTest -mtime 1220953743 -attributes 0000 -filemethod 0
File ::ED9AC2C4-993D-449D-B18C-FE85E5EAD73B -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/MonitorTest -size 3176 -mtime 1220953743 -attributes 1000 -filemethod 0
File ::BEDB06DA-FD80-4795-9BED-5C98040B7EE4 -name MonitorTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/MonitorTest -size 3448 -mtime 1220953742 -attributes 1000 -filemethod 0
File ::1B76498F-9EBB-495A-AFB1-41AE8B3E88E4 -name NXTCamTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/NXTCamTest -mtime 1220953743 -attributes 0000 -filemethod 0
File ::7D010AAA-4CA9-4B6D-8B0A-4B9BBA63F932 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/NXTCamTest -size 3176 -mtime 1220953743 -attributes 1000 -filemethod 0
File ::AF6F3607-2FF3-458C-A36C-0EF53D118729 -name NXTCamTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/NXTCamTest -size 1183 -mtime 1220953743 -attributes 1000 -filemethod 0
File ::1CAEEA61-8D52-4EAB-8148-36006F57B2C2 -name PerformanceTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/PerformanceTest -mtime 1220953743 -attributes 0000 -filemethod 0
File ::A7E7EA7A-805D-48B5-AABF-4A7DCB9DE1CC -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/PerformanceTest -size 3176 -mtime 1220953743 -attributes 1000 -filemethod 0
File ::8227FF6C-D046-4946-882B-86D8FA875668 -name PerformanceTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/PerformanceTest -size 3195 -mtime 1220953743 -attributes 1000 -filemethod 0
File ::F3274871-52B3-4488-A1DE-C62EAB6C518F -name PilotTester -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/PilotTester -mtime 1220953743 -attributes 0000 -filemethod 0
File ::B1DFDCFA-1209-4741-A686-599995D8D1C4 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/PilotTester -size 3176 -mtime 1220953743 -attributes 1000 -filemethod 0
File ::305BBBC9-E9B8-48D0-97DC-E74414471A28 -name PilotTester.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/PilotTester -size 1958 -mtime 1220953743 -attributes 1000 -filemethod 0
File ::74BE1B6B-D26C-4944-8A9C-3F4DCA34A414 -name RCXEmulator -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/RCXEmulator -mtime 1220953743 -attributes 0000 -filemethod 0
File ::09C1FF7D-C856-4D7E-9771-7AECEBCE8694 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/RCXEmulator -size 3176 -mtime 1220953743 -attributes 1000 -filemethod 0
File ::0846F050-FC8C-4933-A255-63777907BD12 -name RCXEmulator.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/RCXEmulator -size 3591 -mtime 1220953743 -attributes 1000 -filemethod 0
File ::4E2D6417-5940-4EDB-9EA0-51FEABAAC9E7 -name RCXMMTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/RCXMMTest -mtime 1220953744 -attributes 0000 -filemethod 0
File ::766AB72F-DC94-446C-AF61-E65C66E3556E -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/RCXMMTest -size 3176 -mtime 1220953744 -attributes 1000 -filemethod 0
File ::B21C8997-D0F4-469C-A534-FB4CC765EE78 -name RCXMMTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/RCXMMTest -size 685 -mtime 1220953744 -attributes 1000 -filemethod 0
File ::843128E6-4BAD-45E1-B114-2C0E066A28B8 -name RCXMuxTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/RCXMuxTest -mtime 1220953744 -attributes 0000 -filemethod 0
File ::18B5DCA8-19A9-4B76-8E9C-939B99D5A7E1 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/RCXMuxTest -size 3176 -mtime 1220953744 -attributes 1000 -filemethod 0
File ::5FF3D4DC-F982-48B3-AEBF-28BFD5C3CDC9 -name RCXMuxTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/RCXMuxTest -size 742 -mtime 1220953744 -attributes 1000 -filemethod 0
File ::89C1F275-B01B-4303-8ECD-9752BBBA7BE7 -name RCXPortTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/RCXPortTest -mtime 1220953744 -attributes 0000 -filemethod 0
File ::1D134193-EF5A-434A-9001-FF9A245BED53 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/RCXPortTest -size 3176 -mtime 1220953744 -attributes 1000 -filemethod 0
File ::C9091E94-6B82-45FD-A215-00FF828E4134 -name RCXPortTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/RCXPortTest -size 1512 -mtime 1220953744 -attributes 1000 -filemethod 0
File ::09A1DCCC-B3C4-4548-BF1C-5DBFBB2EA5FE -name RCXRemote -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/RCXRemote -mtime 1220953744 -attributes 0000 -filemethod 0
File ::BE4E256B-18A3-4E54-8F98-55BD100C49C1 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/RCXRemote -size 3176 -mtime 1220953744 -attributes 1000 -filemethod 0
File ::9D09115B-569D-4316-8FA7-5963F8173218 -name RCXRemote.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/RCXRemote -size 1458 -mtime 1220953744 -attributes 1000 -filemethod 0
File ::8F1D4357-34E5-47EA-90C0-23850B190C30 -name RCXRemoteMotor -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/RCXRemoteMotor -mtime 1220953745 -attributes 0000 -filemethod 0
File ::4B1921E6-8419-4743-BBC9-5B0EAB2B93E2 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/RCXRemoteMotor -size 3176 -mtime 1220953745 -attributes 1000 -filemethod 0
File ::DA50617F-A773-497F-B577-22A2F484B0D1 -name RCXRemoteMotor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/RCXRemoteMotor -size 1713 -mtime 1220953744 -attributes 1000 -filemethod 0
File ::8B23AE0E-D20C-45C2-89B2-8C17C66BF573 -name RemoteNXTTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/RemoteNXTTest -mtime 1220953745 -attributes 0000 -filemethod 0
File ::7E50B070-043A-4641-865C-D4C3A5321B51 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/RemoteNXTTest -size 3176 -mtime 1220953745 -attributes 1000 -filemethod 0
File ::EAAF5209-15E3-43FD-9276-660DE470F288 -name RemoteNXTTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/RemoteNXTTest -size 2375 -mtime 1220953745 -attributes 1000 -filemethod 0
File ::60B5C805-854D-4781-8354-81DCB32D0A6C -name SignalTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/SignalTest -mtime 1220953745 -attributes 0000 -filemethod 0
File ::B77CD176-245F-4120-93F2-6A482F665381 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/SignalTest -size 3176 -mtime 1220953745 -attributes 1000 -filemethod 0
File ::59EB043C-0B2D-4987-96B6-457210B7B761 -name SignalTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/SignalTest -size 953 -mtime 1220953745 -attributes 1000 -filemethod 0
File ::E656071C-D008-4F8D-90AF-E4F1B63528D9 -name SocketServer -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/SocketServer -mtime 1220953745 -attributes 0000 -filemethod 0
File ::1C7E99FA-8789-415D-BD5C-AEBF33295505 -name SocketServer.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/SocketServer -size 1929 -mtime 1220953745 -attributes 1000 -filemethod 0
File ::2229AA02-9F8D-446F-9EFD-D729629CD4C6 -name SocketTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/SocketTest -mtime 1220953745 -attributes 0000 -filemethod 0
File ::33793A13-6099-420D-B601-201E3BC8197E -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/SocketTest -size 3176 -mtime 1220953745 -attributes 1000 -filemethod 0
File ::BB2213CD-18B6-4C6D-9E55-A6742B323F9C -name SocketTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/SocketTest -size 1543 -mtime 1220953745 -attributes 1000 -filemethod 0
File ::4C0A8483-5A44-4AA0-A235-DA28EED21FC9 -name SonicTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/SonicTest -mtime 1220953746 -attributes 0000 -filemethod 0
File ::114E887A-AFBB-4708-AEAB-8A473D4C3983 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/SonicTest -size 3176 -mtime 1220953746 -attributes 1000 -filemethod 0
File ::45170C31-8AAE-4AE0-9BAC-2047C4D00C6C -name SonicTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/SonicTest -size 573 -mtime 1220953746 -attributes 1000 -filemethod 0
File ::0385B30D-C531-44C3-A121-7565E402305C -name SoundSample -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/SoundSample -mtime 1220953746 -attributes 0000 -filemethod 0
File ::4C2A09C3-77DD-4BBF-893D-209AB3DB30DB -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/SoundSample -size 3176 -mtime 1220953746 -attributes 1000 -filemethod 0
File ::1065009E-8BF4-4C6B-A521-A16375A38135 -name SoundSample.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/SoundSample -size 1440 -mtime 1220953746 -attributes 1000 -filemethod 0
File ::3F291D24-C1A0-45C0-B962-2E103E5A8099 -name SpeedTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/SpeedTest -mtime 1220953746 -attributes 0000 -filemethod 0
File ::71A426F3-FC5A-4ADF-88C9-A4EED83F9228 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/SpeedTest -size 3176 -mtime 1220953746 -attributes 1000 -filemethod 0
File ::135B6FBC-4951-410F-AF5C-2522DE3A03B7 -name SpeedTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/SpeedTest -size 1613 -mtime 1220953746 -attributes 1000 -filemethod 0
File ::9AB69B42-D66F-4CDA-A4B7-48534F251EC5 -name Subsumption1 -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/Subsumption1 -mtime 1220953746 -attributes 0000 -filemethod 0
File ::BA1FBC66-19C1-44E1-B5B6-76BA85618799 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/Subsumption1 -size 3175 -mtime 1220953746 -attributes 1000 -filemethod 0
File ::99079005-CE6D-42BE-996E-5343F2FA48DA -name Main.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/Subsumption1 -size 8493 -mtime 1220953746 -attributes 1000 -filemethod 0
File ::5DEAE894-AB2C-46A6-88AA-E7A741450262 -name Subsumption2 -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/Subsumption2 -mtime 1220953747 -attributes 0000 -filemethod 0
File ::C4DD8E54-D98F-4097-A997-4AD6BEA9CA78 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/Subsumption2 -size 3175 -mtime 1220953747 -attributes 1000 -filemethod 0
File ::61186C82-98CF-4B62-A08A-844F73AF51B6 -name Main.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/Subsumption2 -size 8399 -mtime 1220953747 -attributes 1000 -filemethod 0
File ::3FFD7BDB-F3BC-4E68-A1C5-7EB13C1B179E -name TiltTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/TiltTest -mtime 1220953747 -attributes 0000 -filemethod 0
File ::F1F61B2C-3565-4C2D-AD08-8384E7517C68 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/TiltTest -size 3176 -mtime 1220953747 -attributes 1000 -filemethod 0
File ::C130E463-72C1-4B6B-B48A-5964058447DE -name TiltTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/TiltTest -size 691 -mtime 1220953747 -attributes 1000 -filemethod 0
File ::31C18895-0589-42A1-80C0-1E2C4A8C3D05 -name TimeTest -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/TimeTest -mtime 1220953747 -attributes 0000 -filemethod 0
File ::2F63714E-458D-4DCC-8BE4-C77D060E7E9D -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/TimeTest -size 3176 -mtime 1220953747 -attributes 1000 -filemethod 0
File ::115CD679-A520-499B-B670-8D4E962B63B4 -name TimeTest.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/TimeTest -size 1482 -mtime 1220953747 -attributes 1000 -filemethod 0
File ::03924898-DD20-4387-9AE4-9090045084F8 -name Tune -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/Tune -mtime 1220953747 -attributes 0000 -filemethod 0
File ::F10D1ACA-3F85-4231-8A1F-13B79BD5DA1C -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/Tune -size 3176 -mtime 1220953747 -attributes 1000 -filemethod 0
File ::1D55B189-34EC-49A9-AA2A-8741A3B7ADD9 -name Tune.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/Tune -size 827 -mtime 1220953747 -attributes 1000 -filemethod 0
File ::2C6FB0DF-CA6D-4BA1-A515-BCB97F7C40C6 -name USBReceive -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/USBReceive -mtime 1220953747 -attributes 0000 -filemethod 0
File ::5C357D95-96FE-431E-AD91-1F1E7A7C82EE -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/USBReceive -size 3176 -mtime 1220953747 -attributes 1000 -filemethod 0
File ::8DD4870E-FCB8-409C-8476-63D8B750ABF5 -name USBReceive.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/USBReceive -size 768 -mtime 1220953747 -attributes 1000 -filemethod 0
File ::D8A39A05-F8C8-447E-AE06-4834F2F9D0CA -name USBSend -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/USBSend -mtime 1220953748 -attributes 0000 -filemethod 0
File ::D485C170-1891-4F2F-BD9E-92C63ABDFF9C -name USBSend.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/USBSend -size 1919 -mtime 1220953748 -attributes 1000 -filemethod 0
File ::CD6258F5-0227-4BA6-A2BB-F7AA304F41D5 -name View -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/samples/View -mtime 1220953748 -attributes 0000 -filemethod 0
File ::B5DFB4DC-FE45-4CCE-BFEF-B80E0BAD7E6D -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/View -size 3176 -mtime 1220953748 -attributes 1000 -filemethod 0
File ::419837AD-CCD3-4AF3-B7E7-5B6D5A0236A5 -name View.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/samples/View -size 6107 -mtime 1220953748 -attributes 1000 -filemethod 0
File ::1F978CF4-0509-4F3E-9015-CD939F6FAE15 -name src -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src -mtime 1220953792 -attributes 0000 -filemethod 0
File ::33FB5589-A2E5-4282-A1BE-6F1A5FC9512F -name java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java -mtime 1220953787 -attributes 0000 -filemethod 0
File ::0C1EC7B8-FFA8-4919-A968-DC40968329B7 -name classes -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes -mtime 1220953760 -attributes 0000 -filemethod 0
File ::803A3DAA-18DA-4ABF-A8BB-1F43D4B0B323 -name java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/java -mtime 1220953754 -attributes 0000 -filemethod 0
File ::5354D947-433E-4BEE-92AB-3A41C4D10699 -name awt -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/java/awt -mtime 1220953748 -attributes 0000 -filemethod 0
File ::BC6F2458-5087-4F8F-91E6-7D145DCDA555 -name package.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/awt -size 53 -mtime 1220953748 -attributes 1000 -filemethod 0
File ::13239741-19B2-4BE0-97BE-AB9B60504411 -name Rectangle.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/awt -size 313 -mtime 1220953748 -attributes 1000 -filemethod 0
File ::CAF55AFB-146E-4B61-B570-25009CED8797 -name io -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/java/io -size 4096 -mtime 1220953750 -attributes 0000 -filemethod 0
File ::6DD61961-140E-4B56-8B56-A6F11CF1A677 -name BufferedWriter.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/io -size 1248 -mtime 1220953748 -attributes 1000 -filemethod 0
File ::3239F367-539E-4D50-BA85-C437410A6C13 -name DataInputStream.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/io -size 4327 -mtime 1220953748 -attributes 1000 -filemethod 0
File ::F2E94C9B-5F27-4B12-8BF5-2CBB7CF40B3F -name DataOutputStream.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/io -size 8944 -mtime 1220953748 -attributes 1000 -filemethod 0
File ::A8871C41-BB48-4DCA-8943-BA338A6C80FA -name EOFException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/io -size 1249 -mtime 1220953748 -attributes 1000 -filemethod 0
File ::7EFC4BFC-37EA-47F6-B6A1-13D439533B47 -name File.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/io -size 22436 -mtime 1220953749 -attributes 1000 -filemethod 0
File ::47005945-604D-45C0-B6FC-F9F5F919E066 -name FileInputStream.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/io -size 1350 -mtime 1220953749 -attributes 1000 -filemethod 0
File ::98E96EF0-2EC6-4F1E-8260-6ED71D1C9243 -name FileOutputStream.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/io -size 2832 -mtime 1220953749 -attributes 1000 -filemethod 0
File ::124E708A-55CF-4503-B5D3-780FB4BA6C8A -name InputStream.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/io -size 14661 -mtime 1220953750 -attributes 1000 -filemethod 0
File ::6467A1BE-0F90-4C66-A993-6075D8893BE7 -name IOException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/io -size 1160 -mtime 1220953749 -attributes 1000 -filemethod 0
File ::29CE2E3B-14F0-448D-8E47-1823E3C8B887 -name OutputStream.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/io -size 5132 -mtime 1220953750 -attributes 1000 -filemethod 0
File ::9EC310EF-5079-4534-9155-F37DA0C97C27 -name package.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/io -size 34 -mtime 1220953750 -attributes 1000 -filemethod 0
File ::989A7116-38C4-4CC1-8355-ADB487301A86 -name PrintStream.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/io -size 1148 -mtime 1220953750 -attributes 1000 -filemethod 0
File ::B3164EF8-D2E0-46A4-9A08-ADB54AB64049 -name Serializable.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/io -size 129 -mtime 1220953750 -attributes 1000 -filemethod 0
File ::5EC409F8-AA95-4C5D-9058-FD0E6473817D -name lang -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/java/lang -size 12288 -mtime 1220953754 -attributes 0000 -filemethod 0
File ::6206E669-F58F-494D-89A1-2CF57834F533 -name ArithmeticException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 75 -mtime 1220953751 -attributes 1000 -filemethod 0
File ::A49EBE2B-9E22-4310-B758-7D5FB09B645A -name ArrayIndexOutOfBoundsException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 93 -mtime 1220953751 -attributes 1000 -filemethod 0
File ::3C925F5B-DA6B-42A9-BC47-8B4EA48611B5 -name Class.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 319 -mtime 1220953751 -attributes 1000 -filemethod 0
File ::BA1B6503-C31A-4FAD-9693-C9DBD3D48693 -name ClassCastException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 81 -mtime 1220953751 -attributes 1000 -filemethod 0
File ::ECCA893B-F683-4C72-A4D3-1F560F90ECDA -name ClassNotFoundException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 78 -mtime 1220953751 -attributes 1000 -filemethod 0
File ::CB8D6FC9-3F4D-407E-8D8E-6678B0713494 -name Cloneable.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 128 -mtime 1220953751 -attributes 1000 -filemethod 0
File ::6F65DEFE-EB62-41A5-8153-81DD1B87D383 -name Error.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 65 -mtime 1220953751 -attributes 1000 -filemethod 0
File ::CC40B544-0895-4E9E-96AA-8D6130650D28 -name Exception.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 160 -mtime 1220953751 -attributes 1000 -filemethod 0
File ::68A3DE0E-28A6-466F-A893-6195173885DA -name Float.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 4762 -mtime 1220953752 -attributes 1000 -filemethod 0
File ::3F32408C-FBE9-4BEE-AE73-9F71B507F319 -name IllegalArgumentException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 87 -mtime 1220953752 -attributes 1000 -filemethod 0
File ::5058860D-DB4D-4E0E-8EE7-66B69622FB6C -name IllegalMonitorStateException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 91 -mtime 1220953752 -attributes 1000 -filemethod 0
File ::836A7B61-3C61-465F-9001-41FD7BFABE1B -name IllegalStateException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 84 -mtime 1220953752 -attributes 1000 -filemethod 0
File ::E148B470-A3DB-40AA-B7C2-D0BDDB0EA13D -name Integer.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 6320 -mtime 1220953752 -attributes 1000 -filemethod 0
File ::7256B79A-8AA1-4889-BBDC-DC8A4513446B -name InterruptedException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 76 -mtime 1220953752 -attributes 1000 -filemethod 0
File ::56F50105-7E14-484C-86A2-11DA54D915D6 -name Math.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 8327 -mtime 1220953752 -attributes 1000 -filemethod 0
File ::D0B08839-F167-42AF-A7E0-225CDEB2D92F -name NoClassDefFoundError.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 128 -mtime 1220953752 -attributes 1000 -filemethod 0
File ::D6419009-6E23-4D86-852D-DCB48F7B6262 -name NoSuchMethodError.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 69 -mtime 1220953752 -attributes 1000 -filemethod 0
File ::C4A313BD-12DC-4748-8C9D-AE6512659B43 -name NullPointerException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 83 -mtime 1220953753 -attributes 1000 -filemethod 0
File ::15030137-0D44-4D91-9D76-3C46B96131B9 -name NumberFormatException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 98 -mtime 1220953753 -attributes 1000 -filemethod 0
File ::6E725495-2BE1-4E6E-9FD8-D9830453F1B8 -name Object.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 1735 -mtime 1220953753 -attributes 1000 -filemethod 0
File ::05914B27-A2BC-4883-A38B-0C8587B77ED3 -name OutOfMemoryError.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 68 -mtime 1220953753 -attributes 1000 -filemethod 0
File ::10482600-D030-4313-BBB3-7EEFA60E5215 -name package.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 31 -mtime 1220953754 -attributes 1000 -filemethod 0
File ::C6E16FE4-40F9-4BDA-BC0F-850642410932 -name Runtime.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 723 -mtime 1220953753 -attributes 1000 -filemethod 0
File ::DF203A37-31FA-4AA0-93F7-B5912F59D752 -name RuntimeException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 72 -mtime 1220953753 -attributes 1000 -filemethod 0
File ::9BA251B3-B8E5-4209-9BD3-AE24BBA510FE -name StackOverflowError.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 70 -mtime 1220953753 -attributes 1000 -filemethod 0
File ::5CC54F52-2D42-4CD5-8B73-E63EC30CA7D8 -name String.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 8658 -mtime 1220953753 -attributes 1000 -filemethod 0
File ::EE8BF560-135F-4B28-AC74-C7D79DA29F6D -name StringBuffer.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 7794 -mtime 1220953753 -attributes 1000 -filemethod 0
File ::4B3540CC-2A99-4369-B6A6-093785B83DA0 -name StringIndexOutOfBoundsException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 100 -mtime 1220953753 -attributes 1000 -filemethod 0
File ::119734A4-C495-47B7-B461-19A65802B3E8 -name System.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 1851 -mtime 1220953754 -attributes 1000 -filemethod 0
File ::46F76740-66FE-4FA9-9C41-3CAC0A135FED -name Thread.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 3179 -mtime 1220953754 -attributes 1000 -filemethod 0
File ::4D34245F-46F1-464B-842A-EEB28CFF3DB7 -name ThreadDeath.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 171 -mtime 1220953754 -attributes 1000 -filemethod 0
File ::10BAF8E7-C777-489D-8A52-0CCED996ECD3 -name Throwable.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/lang -size 356 -mtime 1220953754 -attributes 1000 -filemethod 0
File ::1C9BA39F-4D55-4466-BBAC-6CF2A50416D3 -name util -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/java/util -size 4096 -mtime 1220953756 -attributes 0000 -filemethod 0
File ::D770D504-6DD8-4909-A03D-F4B6D09E1C77 -name ArrayList.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/util -size 3762 -mtime 1220953754 -attributes 1000 -filemethod 0
File ::A512853C-EEF0-4AA5-8793-3C09B5C6D5C8 -name BitSet.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/util -size 526 -mtime 1220953754 -attributes 1000 -filemethod 0
File ::57EB97A2-0E3E-419A-B76B-F71B5ECEBE82 -name EmptyQueueException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/util -size 935 -mtime 1220953754 -attributes 1000 -filemethod 0
File ::A4196064-B6F5-43F9-AA94-7ACC557D90EE -name EmptyStackException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/util -size 935 -mtime 1220953755 -attributes 1000 -filemethod 0
File ::CED0ECE9-5EF7-488E-9E05-24CD7122416C -name Enumeration.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/util -size 370 -mtime 1220953755 -attributes 1000 -filemethod 0
File ::8D8E5CCA-8C01-4F97-82EC-36B734C9FB2A -name Hashtable.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/util -size 4060 -mtime 1220953755 -attributes 1000 -filemethod 0
File ::C0633401-C87D-47FA-8650-25E58B630D88 -name Iterator.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/util -size 581 -mtime 1220953755 -attributes 1000 -filemethod 0
File ::3C07F6B6-8416-4ABB-96A9-E03FAC5BC726 -name package.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/util -size 23 -mtime 1220953756 -attributes 1000 -filemethod 0
File ::5CAC570C-8950-4087-ABE6-62E4015000DE -name Properties.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/util -size 16677 -mtime 1220953755 -attributes 1000 -filemethod 0
File ::40E0EBC2-8C7F-4907-BFFB-99E3A038896C -name Queue.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/util -size 2242 -mtime 1220953755 -attributes 1000 -filemethod 0
File ::C71AB736-34CD-4DA8-97A8-3D7EED0D6F35 -name Random.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/util -size 2222 -mtime 1220953755 -attributes 1000 -filemethod 0
File ::8CA32F6D-86DB-4467-94E4-C9B1DB57C3BC -name Stack.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/util -size 2315 -mtime 1220953755 -attributes 1000 -filemethod 0
File ::8E84256C-BB23-4365-9F61-A9E4DAF8E57E -name Vector.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/java/util -size 7097 -mtime 1220953756 -attributes 1000 -filemethod 0
File ::3AF5857B-4E50-4FD1-8FFA-D651FA98F143 -name javax -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/javax -mtime 1220953756 -attributes 0000 -filemethod 0
File ::C6DAD0E1-351D-48D4-B9BF-1508962995DC -name bluetooth -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/javax/bluetooth -size 4096 -mtime 1220953756 -attributes 0000 -filemethod 0
File ::51F7B1F3-B011-4B39-A841-364496464176 -name BluetoothStateException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/bluetooth -size 298 -mtime 1220953756 -attributes 1000 -filemethod 0
File ::33CFBEA8-3708-4AE6-8766-2A063D46E177 -name DeviceClass.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/bluetooth -size 2018 -mtime 1220953756 -attributes 1000 -filemethod 0
File ::AAC9369F-6A3C-4F06-BE5F-488B0273932E -name LocalDevice.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/bluetooth -size 4641 -mtime 1220953756 -attributes 1000 -filemethod 0
File ::161E6483-CC08-4E86-A07E-AA6BE78BC97C -name RemoteDevice.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/bluetooth -size 3697 -mtime 1220953756 -attributes 1000 -filemethod 0
File ::A5FDA534-BCA6-4B70-90CD-47E5A9937397 -name microedition -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/javax/microedition -mtime 1220953757 -attributes 0000 -filemethod 0
File ::D4CD20C3-8B23-4A45-B75B-8E7D96384FF9 -name io -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/javax/microedition/io -size 4096 -mtime 1220953757 -attributes 0000 -filemethod 0
File ::0C99B0B1-BFB5-4511-9176-DA3DEFD05AEB -name Connection.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/io -size 141 -mtime 1220953756 -attributes 1000 -filemethod 0
File ::BDAA8675-D64B-4BB9-A4D0-9B2065865DBA -name InputConnection.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/io -size 418 -mtime 1220953757 -attributes 1000 -filemethod 0
File ::BAA96940-3EA1-4EEB-B36A-AA53CA841787 -name OutputConnection.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/io -size 421 -mtime 1220953757 -attributes 1000 -filemethod 0
File ::BE7D4EE9-BC81-446C-926B-940C1C574B51 -name package.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/io -size 22 -mtime 1220953757 -attributes 1000 -filemethod 0
File ::25FB7B54-A7CD-4BAB-AE10-63A977AB96D0 -name StreamConnection.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/io -size 607 -mtime 1220953757 -attributes 1000 -filemethod 0
File ::D2B3B64E-4A27-4FF8-A3B4-E2EF215F28D7 -name lcdui -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 8192 -mtime 1220953760 -attributes 0000 -filemethod 0
File ::C12F263A-9407-423B-9E81-3282A7548081 -name Alert.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 5915 -mtime 1220953757 -attributes 1000 -filemethod 0
File ::5D9702AA-570F-4333-9C87-313D0E207389 -name Choice.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 1245 -mtime 1220953757 -attributes 1000 -filemethod 0
File ::69837867-FCD7-4EAE-B25D-7624470604E2 -name ChoiceGroup.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 8623 -mtime 1220953758 -attributes 1000 -filemethod 0
File ::5E07B75B-1CFF-43C9-BA5E-5483B3F7B0FD -name Command.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 1126 -mtime 1220953758 -attributes 1000 -filemethod 0
File ::083AD63B-293B-408A-B590-6A18F9845500 -name CommandListener.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 172 -mtime 1220953758 -attributes 1000 -filemethod 0
File ::67E85CB9-7D06-4CAD-B6C3-970932AC0074 -name Display.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 8638 -mtime 1220953758 -attributes 1000 -filemethod 0
File ::2D2FC660-F6EB-4658-86FE-B0FC11D866AC -name Displayable.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 1766 -mtime 1220953758 -attributes 1000 -filemethod 0
File ::1CAB91F4-AECF-4A2E-AF9B-43A14394B5D9 -name Font.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 274 -mtime 1220953759 -attributes 1000 -filemethod 0
File ::0EFFC899-F47F-48D1-9666-1B9CF75BFABD -name Form.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 7504 -mtime 1220953759 -attributes 1000 -filemethod 0
File ::C1C0CFAB-48F8-446A-9B32-5E87B90EA9E9 -name Gauge.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 2150 -mtime 1220953759 -attributes 1000 -filemethod 0
File ::9B71D033-8493-4CE2-8079-78077C51D16A -name Graphics.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 13959 -mtime 1220953759 -attributes 1000 -filemethod 0
File ::74C722B3-BB95-4194-BCC5-8EBFA05405C1 -name Image.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 451 -mtime 1220953759 -attributes 1000 -filemethod 0
File ::A08457E6-1BF0-4C56-A32F-A4C63971227F -name Item.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 2056 -mtime 1220953759 -attributes 1000 -filemethod 0
File ::9AFA786F-8C1C-4302-80D5-EA2C99A543DF -name ItemCommandListener.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 169 -mtime 1220953759 -attributes 1000 -filemethod 0
File ::573F730C-B001-48AC-A499-AD979618755A -name ItemStateListener.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 163 -mtime 1220953759 -attributes 1000 -filemethod 0
File ::5DD55C72-7D01-4EF6-9238-78FB1CAD1C84 -name List.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 7404 -mtime 1220953760 -attributes 1000 -filemethod 0
File ::25B7FF7E-BA8E-4E56-B9EE-762729DD09BC -name package.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 45 -mtime 1220953760 -attributes 1000 -filemethod 0
File ::CA1F7F80-CB4B-4AD5-994B-0F6CC010AB53 -name Screen.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 376 -mtime 1220953760 -attributes 1000 -filemethod 0
File ::020B7390-0745-4BFA-9D88-2CA38281AC63 -name Spacer.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 699 -mtime 1220953760 -attributes 1000 -filemethod 0
File ::3039B47C-13D0-49EF-8149-D576403E9C74 -name StringItem.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 1134 -mtime 1220953760 -attributes 1000 -filemethod 0
File ::1A3E7CD6-646C-4943-9856-8DB07E077F3D -name TextBox.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 4588 -mtime 1220953760 -attributes 1000 -filemethod 0
File ::7A03CD31-1079-4DE8-A3D5-F9AE6BB2B164 -name TextField.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 2021 -mtime 1220953760 -attributes 1000 -filemethod 0
File ::23E32E50-7722-4EB5-96EC-8C30765A059F -name Ticker.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/javax/microedition/lcdui -size 257 -mtime 1220953760 -attributes 1000 -filemethod 0
File ::3AFF23F1-E58F-40E7-8717-18A0D0C9155C -name lejos -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/lejos -size 4096 -mtime 1220953774 -attributes 0000 -filemethod 0
File ::9BF343F0-8463-4A5B-848D-F4F53258D5B1 -name devices -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/lejos/devices -size 4096 -mtime 1220953761 -attributes 0000 -filemethod 0
File ::EFF54147-A90A-4878-B228-7C0ECBB3AC71 -name GPS.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/devices -size 5101 -mtime 1220953761 -attributes 1000 -filemethod 0
File ::75F00186-E513-4741-A012-0D30CEFB1095 -name Keyboard.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/devices -size 6246 -mtime 1220953761 -attributes 1000 -filemethod 0
File ::F153B2C4-BF91-4432-8FB8-DE11F213472B -name KeyEvent.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/devices -size 2464 -mtime 1220953761 -attributes 1000 -filemethod 0
File ::2E8A4268-C494-417A-868D-501533E7F171 -name KeyListener.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/devices -size 923 -mtime 1220953761 -attributes 1000 -filemethod 0
File ::7818BF13-8945-48A8-9E4F-365C22201835 -name NMEASentence.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/devices -size 4427 -mtime 1220953761 -attributes 1000 -filemethod 0
File ::15FD422A-AF11-49B3-BD71-90F27ECFEB15 -name navigation -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/lejos/navigation -size 4096 -mtime 1220953762 -attributes 0000 -filemethod 0
File ::1532004C-EE52-4E48-8E04-C09B81DD1E21 -name CompassNavigator.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/navigation -size 6002 -mtime 1220953761 -attributes 1000 -filemethod 0
File ::3374FB94-451A-4375-9170-1AC8BDEFB65A -name CompassPilot.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/navigation -size 9786 -mtime 1220953761 -attributes 1000 -filemethod 0
File ::105DCD46-2359-42DE-9575-A514DCE7A425 -name Navigator.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/navigation -size 6514 -mtime 1220953761 -attributes 1000 -filemethod 0
File ::B65E1C95-5373-4780-A2F0-CF4A5DD0DD04 -name package.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/navigation -size 32 -mtime 1220953762 -attributes 1000 -filemethod 0
File ::AF7EE97B-B40F-4AB1-81B0-E78F00373F4B -name Pilot.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/navigation -size 13187 -mtime 1220953762 -attributes 1000 -filemethod 0
File ::D0E8AEB6-BDF5-4393-A894-5630C7E7B3CE -name TachoNavigator.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/navigation -size 15663 -mtime 1220953762 -attributes 1000 -filemethod 0
File ::FBDBFE7C-129F-49C7-931F-6FC7EEFF406E -name nxt -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 20480 -mtime 1220953771 -attributes 0000 -filemethod 0
File ::2CBC074C-25DA-4192-80DA-BF1B30673A4C -name ADSensorPort.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 282 -mtime 1220953762 -attributes 1000 -filemethod 0
File ::0659A3FE-A351-4600-A2BD-752F91096FA2 -name BasicMotor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 2570 -mtime 1220953762 -attributes 1000 -filemethod 0
File ::330B8E0B-9FD7-4996-8FD8-C784A546772E -name BasicMotorPort.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 372 -mtime 1220953762 -attributes 1000 -filemethod 0
File ::19E5A2CB-4637-46B4-A7DF-7E33350D923E -name BasicSensorPort.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 399 -mtime 1220953762 -attributes 1000 -filemethod 0
File ::11AB70B7-3655-4593-8D73-D96BD15ECE0E -name Battery.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 501 -mtime 1220953762 -attributes 1000 -filemethod 0
File ::311DC371-AB78-4FA9-BB12-C8B03FF07CC7 -name Button.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 5698 -mtime 1220953763 -attributes 1000 -filemethod 0
File ::C137D5C0-A3A1-4F93-8D77-55FD38A7091F -name ButtonListener.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 234 -mtime 1220953763 -attributes 1000 -filemethod 0
File ::8A00D6D3-72D5-4ECB-B342-A769A2D430F3 -name ColorSensor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 5325 -mtime 1220953763 -attributes 1000 -filemethod 0
File ::E7532EFB-FA2E-4819-A5C3-6EC43978D994 -name CompassSensor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 3014 -mtime 1220953763 -attributes 1000 -filemethod 0
File ::BA577347-ED56-4B23-ADF2-48809CB0943D -name Flash.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 670 -mtime 1220953763 -attributes 1000 -filemethod 0
File ::B4F2C677-5405-430D-90E0-F39D2BB875A3 -name GyroSensor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 651 -mtime 1220953763 -attributes 1000 -filemethod 0
File ::61546978-312D-42B7-8202-6CA962954EDD -name I2CPort.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 403 -mtime 1220953763 -attributes 1000 -filemethod 0
File ::69824B8D-5D6C-42CF-8EBD-A6E3F846CC08 -name I2CSensor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 3513 -mtime 1220953763 -attributes 1000 -filemethod 0
File ::0F56A1E7-14D3-4E28-B1F0-B2B6E547C0CD -name IRSeeker.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 741 -mtime 1220953764 -attributes 1000 -filemethod 0
File ::923D2C7E-7723-47A0-9B29-ECDC8E1C3031 -name LCD.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 8556 -mtime 1220953764 -attributes 1000 -filemethod 0
File ::B82653F1-CDAF-45A1-A237-3977D7BEE29A -name LCDOutputStream.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 748 -mtime 1220953764 -attributes 1000 -filemethod 0
File ::2059D29C-322C-41B4-8BE2-7247F8129CDA -name LegacySensorPort.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 238 -mtime 1220953764 -attributes 1000 -filemethod 0
File ::DC15E449-E662-4267-BD07-5E5393EC1F58 -name LightSensor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 3015 -mtime 1220953764 -attributes 1000 -filemethod 0
File ::FA30C599-EFC3-49DC-BD24-09C9218A5DDC -name ListenerCaller.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 148 -mtime 1220953764 -attributes 1000 -filemethod 0
File ::99257E0D-B165-4FB8-BF26-53CA54DD09C1 -name ListenerThread.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 2026 -mtime 1220953764 -attributes 1000 -filemethod 0
File ::F1AF0EF8-4CD5-4AAB-A789-FC08CD5AA9FD -name LSC.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 3249 -mtime 1220953764 -attributes 1000 -filemethod 0
File ::B295244F-4E67-4A4E-9ECB-89C50B2F6187 -name LServo.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 5212 -mtime 1220953764 -attributes 1000 -filemethod 0
File ::5632F0CF-2E04-442F-BCE9-061C5AEF669E -name Motor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 19628 -mtime 1220953765 -attributes 1000 -filemethod 0
File ::347E7739-4B6A-4497-8293-AEFA29F94FAF -name MotorPort.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 1544 -mtime 1220953765 -attributes 1000 -filemethod 0
File ::531A1E56-941E-4FA5-877E-596C98DCC9D4 -name NXTCam.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 1464 -mtime 1220953765 -attributes 1000 -filemethod 0
File ::4ADAC682-42DA-4390-931B-FF2BF12E8136 -name NXTe.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 2171 -mtime 1220953765 -attributes 1000 -filemethod 0
File ::794235C9-1FAC-4893-A00B-70B75AD87A26 -name OpticalDistanceSensor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 9994 -mtime 1220953765 -attributes 1000 -filemethod 0
File ::C2C7D88C-6555-4382-851E-DAE68249446C -name package.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 49 -mtime 1220953768 -attributes 1000 -filemethod 0
File ::7C5AF81A-0A53-40B4-835B-D27A22820D0E -name Poll.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 3177 -mtime 1220953765 -attributes 1000 -filemethod 0
File ::C9192F38-EF25-42A5-9A7C-A9004AA38FF1 -name PSPNXController.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 3611 -mtime 1220953765 -attributes 1000 -filemethod 0
File ::A8F4CD17-5E5C-490C-9C6F-31C2235BFB3A -name RCXLightSensor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 1054 -mtime 1220953765 -attributes 1000 -filemethod 0
File ::FD8AE4E3-0CF4-4CC5-996D-42E1AA0B21FE -name RCXLink.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 6247 -mtime 1220953765 -attributes 1000 -filemethod 0
File ::57313FC1-325F-460D-AAA2-C7281DA45AB9 -name RCXMotor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 175 -mtime 1220953766 -attributes 1000 -filemethod 0
File ::CE35B979-3314-4D7F-B4E2-4A638299CA0B -name RCXMotorMultiplexer.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 1027 -mtime 1220953766 -attributes 1000 -filemethod 0
File ::00AFD328-D3C3-49A7-9925-6554C6324E73 -name RCXPlexedMotorPort.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 700 -mtime 1220953766 -attributes 1000 -filemethod 0
File ::5E6F05BC-F970-4F3E-9F1E-F86F257E83D7 -name RCXRemoteMotorPort.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 1215 -mtime 1220953766 -attributes 1000 -filemethod 0
File ::C7829CE1-68FE-46C5-B53A-AD8F10594F31 -name RCXSensorMultiplexer.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 1384 -mtime 1220953766 -attributes 1000 -filemethod 0
File ::5315AC9F-BC4F-4F7A-9190-0CC747FA0F6C -name SensorConstants.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 1090 -mtime 1220953766 -attributes 1000 -filemethod 0
File ::6E96ECAD-6827-49D8-8BC1-9969C1C05ECE -name SensorPort.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 6819 -mtime 1220953766 -attributes 1000 -filemethod 0
File ::07BBA760-E822-4437-9055-32957FAB8B4E -name SensorPortListener.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 549 -mtime 1220953766 -attributes 1000 -filemethod 0
File ::988C3B22-D873-4E4C-8DDF-32A355FE698E -name Settings.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 1513 -mtime 1220953767 -attributes 1000 -filemethod 0
File ::0BBF5AE8-9E57-474D-BA7A-FDAE4E196AD0 -name Sound.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 11160 -mtime 1220953767 -attributes 1000 -filemethod 0
File ::8F2C284E-1DE8-41D7-802C-697617E45498 -name SoundSensor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 1211 -mtime 1220953767 -attributes 1000 -filemethod 0
File ::ABB88D04-EA35-40B6-9B52-DC49FAA56C2D -name SystemSettings.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 3661 -mtime 1220953767 -attributes 1000 -filemethod 0
File ::413A8863-111F-481A-B1D7-A0250E604C10 -name Tachometer.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 218 -mtime 1220953767 -attributes 1000 -filemethod 0
File ::357DFD3F-2651-46AB-8BF1-6D85B9E4285C -name TachoMotorPort.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 208 -mtime 1220953767 -attributes 1000 -filemethod 0
File ::E5DAC5CF-D424-4ACE-AEAF-68049A1BE8C1 -name TextMenu.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 6503 -mtime 1220953767 -attributes 1000 -filemethod 0
File ::55ECF91B-713B-478A-B378-0E8922602C44 -name TiltSensor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 3380 -mtime 1220953767 -attributes 1000 -filemethod 0
File ::DE244778-DBC1-4F87-B4E3-F09C7108F290 -name TouchSensor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 619 -mtime 1220953767 -attributes 1000 -filemethod 0
File ::C95A9AA3-714A-4935-9E98-300433BD6120 -name UltrasonicSensor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt -size 10620 -mtime 1220953767 -attributes 1000 -filemethod 0
File ::5E756821-363C-42F8-8C89-CA908B453011 -name comm -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 8192 -mtime 1220953770 -attributes 0000 -filemethod 0
File ::AEB1A711-59A5-4EC8-B00D-410CD3112565 -name Bluetooth.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 44200 -mtime 1220953768 -attributes 1000 -filemethod 0
File ::757A9AC3-E8DE-41C9-BADD-7D79395EA9E1 -name BTConnection.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 18419 -mtime 1220953768 -attributes 1000 -filemethod 0
File ::8830C521-526E-494D-B0F7-80F0A4E2E2AA -name DeviceInfo.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 256 -mtime 1220953768 -attributes 1000 -filemethod 0
File ::0BAC7606-B6BC-49F0-866F-1CFA2479F5CF -name FirmwareInfo.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 224 -mtime 1220953768 -attributes 1000 -filemethod 0
File ::2253A1F3-DAC3-4622-94E2-E158EAD8F45D -name InputValues.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 1018 -mtime 1220953768 -attributes 1000 -filemethod 0
File ::0AF15C85-A7DC-4D0A-96FB-46EFC65AD62B -name LCP.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 16179 -mtime 1220953768 -attributes 1000 -filemethod 0
File ::224A71F7-281A-4366-BF93-90A120678497 -name LCPBTResponder.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 955 -mtime 1220953769 -attributes 1000 -filemethod 0
File ::E20FAE76-FCDD-498D-875C-D4444E2BB944 -name NXTComm.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 1157 -mtime 1220953769 -attributes 1000 -filemethod 0
File ::8EC4FA66-3404-4D6A-8554-3503F4F4F5A6 -name NXTCommand.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 7666 -mtime 1220953769 -attributes 1000 -filemethod 0
File ::E567B1A3-D4A3-444B-969B-9257C52C36DB -name NXTConnection.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 460 -mtime 1220953769 -attributes 1000 -filemethod 0
File ::A28D5A06-4949-4448-9BC5-0CD223B7BF88 -name NXTInputStream.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 1375 -mtime 1220953769 -attributes 1000 -filemethod 0
File ::60B18AA8-3059-40A5-ABD5-E3DA537B3F4C -name NXTOutputStream.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 617 -mtime 1220953769 -attributes 1000 -filemethod 0
File ::C96CB62F-87B5-474C-9F53-46E8FBB4E39D -name NXTProtocol.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 4985 -mtime 1220953769 -attributes 1000 -filemethod 0
File ::FE7D66BF-1C0F-4A60-8F8D-5EBED402E7FF -name NXTServerSocket.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 2549 -mtime 1220953770 -attributes 1000 -filemethod 0
File ::1372AD9A-8A21-4961-9C26-E68D155DB6CE -name NXTSocket.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 4152 -mtime 1220953770 -attributes 1000 -filemethod 0
File ::0CE42F55-3D92-40A4-A33E-B267C5E5D65F -name package.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 38 -mtime 1220953770 -attributes 1000 -filemethod 0
File ::0F84F4E3-CA3F-4F0C-A473-748542C800F9 -name RConsole.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 2537 -mtime 1220953770 -attributes 1000 -filemethod 0
File ::C1FC42FB-D2B9-4282-A227-9C51DD0B78AD -name USB.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 4667 -mtime 1220953770 -attributes 1000 -filemethod 0
File ::0A3A6467-CD9F-4608-8AB3-D378B19DC89A -name USBConnection.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/comm -size 4046 -mtime 1220953770 -attributes 1000 -filemethod 0
File ::590B2298-903D-4352-ADF7-26B7DE18B6A0 -name debug -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/lejos/nxt/debug -size 4096 -mtime 1220953771 -attributes 0000 -filemethod 0
File ::8D9C56CA-56EE-4263-8AD6-17FB5E06BFCE -name DebugInterface.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/debug -size 3010 -mtime 1220953770 -attributes 1000 -filemethod 0
File ::702BBD52-8ACB-4633-980D-F0135CB430C1 -name DebugMonitor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/debug -size 4715 -mtime 1220953770 -attributes 1000 -filemethod 0
File ::EFBC408F-013B-4F29-AF02-D3F1A336189D -name DebugObject.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/debug -size 713 -mtime 1220953770 -attributes 1000 -filemethod 0
File ::1879F542-F4C3-43A0-9815-6DAA5A70D96E -name DebugStackFrame.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/debug -size 1119 -mtime 1220953771 -attributes 1000 -filemethod 0
File ::E1D33A5F-2004-4F91-A9E9-24BDA685268D -name DebugThread.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/debug -size 1014 -mtime 1220953771 -attributes 1000 -filemethod 0
File ::39CC9901-1EC6-4DBE-AEEB-D1BC6B235F50 -name DebugThreads.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/debug -size 2436 -mtime 1220953771 -attributes 1000 -filemethod 0
File ::1574CE8E-8891-46E4-B48E-AE8ECE87E515 -name remote -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/lejos/nxt/remote -size 4096 -mtime 1220953772 -attributes 0000 -filemethod 0
File ::33DB3764-0FB7-4F86-8AEB-82CC6F9AEDF5 -name package.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/remote -size 46 -mtime 1220953772 -attributes 1000 -filemethod 0
File ::073BD6E9-0E86-40ED-83A5-F88515B98156 -name RemoteBattery.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/remote -size 813 -mtime 1220953771 -attributes 1000 -filemethod 0
File ::3C71793E-6034-40DF-9E6C-7A2128D3FD7E -name RemoteMotorPort.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/remote -size 1446 -mtime 1220953771 -attributes 1000 -filemethod 0
File ::0D1F1FB4-4432-4520-8945-2601B97AAEC5 -name RemoteNXT.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/remote -size 2683 -mtime 1220953772 -attributes 1000 -filemethod 0
File ::FE2026E9-BD09-4B30-B19F-C039EBFE495B -name RemoteSensorPort.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/nxt/remote -size 1889 -mtime 1220953772 -attributes 1000 -filemethod 0
File ::09ABD612-0E79-4F3B-B834-53B5453A2434 -name rcxcomm -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/lejos/rcxcomm -size 4096 -mtime 1220953773 -attributes 0000 -filemethod 0
File ::EBF518D8-9118-4E50-B77D-6BCD2C70A515 -name LLC.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/rcxcomm -size 2599 -mtime 1220953772 -attributes 1000 -filemethod 0
File ::EEC8B296-DDFB-4471-A01C-03AD8837C543 -name LLCHandler.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/rcxcomm -size 2753 -mtime 1220953772 -attributes 1000 -filemethod 0
File ::C5587DBB-F403-4A50-9149-3EB30C2527E4 -name LLCReliableHandler.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/rcxcomm -size 2888 -mtime 1220953772 -attributes 1000 -filemethod 0
File ::0E76EC40-5C93-4EA9-BB75-86E6E339C66E -name Opcode.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/rcxcomm -size 7057 -mtime 1220953772 -attributes 1000 -filemethod 0
File ::72CA514A-43C8-4271-91F9-2DDFD83FAC0F -name package.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/rcxcomm -size 51 -mtime 1220953773 -attributes 1000 -filemethod 0
File ::332FC310-A527-43DB-8176-D7B5AE45CA8F -name PacketHandler.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/rcxcomm -size 1952 -mtime 1220953773 -attributes 1000 -filemethod 0
File ::4A8336BA-A8D3-439E-B0C0-A43605FA9BAE -name RCXAbstractPort.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/rcxcomm -size 6116 -mtime 1220953773 -attributes 1000 -filemethod 0
File ::DD6FD55C-55BA-45BF-A0BF-BEC573869388 -name RCXPort.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/rcxcomm -size 887 -mtime 1220953773 -attributes 1000 -filemethod 0
File ::356FFD78-7A62-46F2-8496-02055BD5D82F -name Serial.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/rcxcomm -size 5935 -mtime 1220953773 -attributes 1000 -filemethod 0
File ::BD928065-12D9-4A34-9C0E-01FF6D6A07E8 -name subsumption -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/lejos/subsumption -size 4096 -mtime 1220953774 -attributes 0000 -filemethod 0
File ::6E85350F-F8F2-46EA-8642-072097F3BB3B -name Activity.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/subsumption -size 6806 -mtime 1220953773 -attributes 1000 -filemethod 0
File ::96334F05-962D-416E-81BF-C072D96BD20F -name ActivityBase.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/subsumption -size 515 -mtime 1220953773 -attributes 1000 -filemethod 0
File ::FE2FB99D-4B3A-4B28-84E1-24B8DEE70B6C -name Arbitrator.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/subsumption -size 3235 -mtime 1220953774 -attributes 1000 -filemethod 0
File ::C8275C1F-8301-46ED-A4BC-40EDF87729E0 -name Arbitrator2.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/subsumption -size 3184 -mtime 1220953774 -attributes 1000 -filemethod 0
File ::361EB7D9-BA19-4D22-8EB3-FB1D116B308E -name Behavior.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/subsumption -size 2583 -mtime 1220953774 -attributes 1000 -filemethod 0
File ::A2B3A5F0-F4CA-49ED-9ACC-0C222FCFD539 -name Behavior2.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/subsumption -size 1533 -mtime 1220953774 -attributes 1000 -filemethod 0
File ::3DBFA38B-360E-40BA-89B2-A889C7C55B75 -name package.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/subsumption -size 315 -mtime 1220953774 -attributes 1000 -filemethod 0
File ::2B38526F-C47B-4B53-9101-4B3DEC3C751C -name StopException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/subsumption -size 186 -mtime 1220953774 -attributes 1000 -filemethod 0
File ::BED9FFDE-F10B-497E-84E1-CFB2F909FEA2 -name util -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/classes/lejos/util -size 4096 -mtime 1220953776 -attributes 0000 -filemethod 0
File ::F4A9AD5B-59F7-4971-A21F-247EEFC9922C -name AbstractRecyclable.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/util -size 775 -mtime 1220953774 -attributes 1000 -filemethod 0
File ::9D4E6470-3CE2-442E-BB95-275BDB0E030D -name ArrayRecycler.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/util -size 1308 -mtime 1220953775 -attributes 1000 -filemethod 0
File ::2085DEE4-62BA-4163-8770-55582E3C1401 -name Assertion.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/util -size 972 -mtime 1220953775 -attributes 1000 -filemethod 0
File ::1084ECC4-6CD7-4117-AE3F-FF8838A80629 -name ButtonCounter.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/util -size 3126 -mtime 1220953775 -attributes 1000 -filemethod 0
File ::353CE173-8790-4B8E-9E23-369BA452E072 -name Datalogger.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/util -size 3763 -mtime 1220953775 -attributes 1000 -filemethod 0
File ::DDE0F8FE-CD65-41D6-95B2-E778F7EC7165 -name package.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/util -size 34 -mtime 1220953776 -attributes 1000 -filemethod 0
File ::14BDC611-311A-42B1-890C-27FEF4E4C719 -name Recyclable.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/util -size 749 -mtime 1220953775 -attributes 1000 -filemethod 0
File ::005ACFED-B8A4-4595-9B67-4F09D09CA241 -name RecyclableArray.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/util -size 1088 -mtime 1220953775 -attributes 1000 -filemethod 0
File ::3A6435AA-34A2-4175-B59A-D7526A2FB78B -name Recycler.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/util -size 1511 -mtime 1220953775 -attributes 1000 -filemethod 0
File ::1A07EAFE-7B36-4FE8-9E8B-4161411A3243 -name Timer.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/util -size 1864 -mtime 1220953775 -attributes 1000 -filemethod 0
File ::BD83B385-1991-43B8-98D4-E23458A33A27 -name TimerListener.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/classes/lejos/util -size 281 -mtime 1220953776 -attributes 1000 -filemethod 0
File ::E6258B73-6A6B-48C9-A986-A91F3C11C180 -name jtools -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/jtools -mtime 1220953776 -attributes 0000 -filemethod 0
File ::5632C53C-611A-4A5D-A1BB-003754A656EB -name js -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/jtools/js -mtime 1220953782 -attributes 0000 -filemethod 0
File ::403D1B3E-5F9A-4E7D-8B1B-D41F5B2D2C1E -name common -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/jtools/js/common -size 4096 -mtime 1220953777 -attributes 0000 -filemethod 0
File ::4143B21F-63C4-4A7E-9D22-47393E50B60C -name AbstractTool.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/common -size 964 -mtime 1220953776 -attributes 1000 -filemethod 0
File ::D8695CBA-062D-49AF-A6F8-92B44D34C472 -name CLIToolProgressMonitor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/common -size 1376 -mtime 1220953776 -attributes 1000 -filemethod 0
File ::F97F7B2B-BA5D-4DA5-9356-74F7CB636E53 -name NullToolProgressMonitor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/common -size 889 -mtime 1220953776 -attributes 1000 -filemethod 0
File ::240367DB-7982-4DFF-9CD8-3B3C1DA4062B -name ToolException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/common -size 602 -mtime 1220953776 -attributes 1000 -filemethod 0
File ::3FCD6452-E802-417A-A792-7C5A98BA22DA -name ToolProgressMonitor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/common -size 753 -mtime 1220953777 -attributes 1000 -filemethod 0
File ::4FB01733-2CEB-4ED9-8F3D-2296348C2204 -name tinyvm -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 12288 -mtime 1220953781 -attributes 0000 -filemethod 0
File ::4F969486-CB4D-4B1A-BF37-B70D31C1CFA5 -name Binary.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 22128 -mtime 1220953777 -attributes 1000 -filemethod 0
File ::695DD677-E28A-4112-9527-63EB1183F5F9 -name BinaryReport.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 2202 -mtime 1220953777 -attributes 1000 -filemethod 0
File ::FEC2768D-EE98-427B-9664-F8500ED1DFC2 -name ClassPath.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 804 -mtime 1220953777 -attributes 1000 -filemethod 0
File ::9C7FAACD-9D41-4024-97F5-6BD7180ADB1E -name ClassRecord.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 23123 -mtime 1220953777 -attributes 1000 -filemethod 0
File ::A9DB47F2-B8F7-4FB5-8A55-229AC75C40BA -name CodeSequence.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 858 -mtime 1220953777 -attributes 1000 -filemethod 0
File ::397860CF-2039-4681-A30E-4B5F395DEAF9 -name CodeUtilities.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 28884 -mtime 1220953777 -attributes 1000 -filemethod 0
File ::7ABAC82A-9CE6-404B-916A-BDC639F125D9 -name ConstantRecord.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 2110 -mtime 1220953778 -attributes 1000 -filemethod 0
File ::45C7815A-0773-422C-9A09-79DA0DEA33AA -name ConstantValue.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 5697 -mtime 1220953778 -attributes 1000 -filemethod 0
File ::E710DD51-83BE-4342-8506-05D0424AA5C6 -name EntryClassIndex.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 727 -mtime 1220953778 -attributes 1000 -filemethod 0
File ::4DA42FC1-3B5F-4DB5-871A-CD47CC991B8D -name ExceptionRecord.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 2630 -mtime 1220953778 -attributes 1000 -filemethod 0
File ::5498B097-4AE7-4367-93CD-6747398EFB14 -name GenerateConstants.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 5921 -mtime 1220953778 -attributes 1000 -filemethod 0
File ::880426AA-0432-4584-B48C-C117FAB0B6D2 -name IClassPath.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 425 -mtime 1220953778 -attributes 1000 -filemethod 0
File ::E4B4D3F6-DA0F-440B-8416-435AD775783F -name InstanceFieldRecord.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 1100 -mtime 1220953778 -attributes 1000 -filemethod 0
File ::2067ABB0-6C46-47A4-AEFD-C00C7D878BF2 -name MasterRecord.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 2096 -mtime 1220953778 -attributes 1000 -filemethod 0
File ::911F5819-7658-497F-8FDC-30259F321B7B -name MethodRecord.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 10226 -mtime 1220953779 -attributes 1000 -filemethod 0
File ::C35C71BB-4BC8-4696-977F-B7BF82257C9E -name OpCodeConstants.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 4926 -mtime 1220953779 -attributes 1000 -filemethod 0
File ::9BAF08D2-C352-4272-B011-647E90AF0D79 -name OpCodeInfo.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 4289 -mtime 1220953779 -attributes 1000 -filemethod 0
File ::021D5915-A0DA-423E-B222-21B084D03CDB -name RecordTable.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 4872 -mtime 1220953779 -attributes 1000 -filemethod 0
File ::E5478551-1AE2-4AFE-ABBB-FBD1549F9185 -name Signature.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 792 -mtime 1220953779 -attributes 1000 -filemethod 0
File ::711AED40-C407-4230-8E00-2AD517642A26 -name SpecialClassConstants.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 733 -mtime 1220953779 -attributes 1000 -filemethod 0
File ::0B9222CE-7AEF-4773-B22A-66ED2A4FB343 -name SpecialSignatureConstants.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 2480 -mtime 1220953779 -attributes 1000 -filemethod 0
File ::4DFDE3E9-4D19-4328-9333-35F0672EB972 -name StaticFieldRecord.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 1426 -mtime 1220953779 -attributes 1000 -filemethod 0
File ::826A9921-7FA6-4B6E-8A89-7C088C091A4B -name StaticValue.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 2090 -mtime 1220953780 -attributes 1000 -filemethod 0
File ::23F70428-5E62-4FF2-8BCB-ED4D2609800D -name TinyVM.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 2363 -mtime 1220953780 -attributes 1000 -filemethod 0
File ::95039A9B-C90D-40E6-81A9-7040B1078D3B -name TinyVMConstants.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 1379 -mtime 1220953780 -attributes 1000 -filemethod 0
File ::B6444BA6-9483-4590-AE0F-3CDC19AD8A21 -name TinyVMException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 650 -mtime 1220953780 -attributes 1000 -filemethod 0
File ::59D707B0-AE29-4BD2-856A-AA0AA90063F9 -name TinyVMTool.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 4073 -mtime 1220953780 -attributes 1000 -filemethod 0
File ::CE595EC5-49F4-49E5-92C7-419BEDAFE003 -name TinyVMType.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 4631 -mtime 1220953780 -attributes 1000 -filemethod 0
File ::E8F1A8C9-B70B-403E-8567-683DDEBA4515 -name WritableData.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 414 -mtime 1220953780 -attributes 1000 -filemethod 0
File ::E1061F95-4266-424E-A412-694F81830FF2 -name WritableDataWithOffset.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm -size 1069 -mtime 1220953780 -attributes 1000 -filemethod 0
File ::115A039E-610D-4FBB-9CFD-4F691464BA58 -name io -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/jtools/js/tinyvm/io -size 4096 -mtime 1220953781 -attributes 0000 -filemethod 0
File ::7FB95581-1D8D-43F4-A6D8-49F48756E27C -name BEByteWriter.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm/io -size 602 -mtime 1220953781 -attributes 1000 -filemethod 0
File ::71B3AE09-9993-4E4A-897E-D076066974E0 -name ByteWriter.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm/io -size 2698 -mtime 1220953781 -attributes 1000 -filemethod 0
File ::CC65238F-F852-41F6-B792-691E04EAD9F6 -name IByteWriter.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm/io -size 1074 -mtime 1220953781 -attributes 1000 -filemethod 0
File ::CFA9F91A-EA42-4D67-88A8-57F29BCE1C9C -name IOUtilities.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm/io -size 885 -mtime 1220953781 -attributes 1000 -filemethod 0
File ::301A285F-DF8F-45E2-B6BB-7D7C6A29C652 -name LEByteWriter.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm/io -size 1321 -mtime 1220953781 -attributes 1000 -filemethod 0
File ::C964C3A2-D17A-4AF9-A01A-B10B39AAB467 -name util -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/jtools/js/tinyvm/util -mtime 1220953782 -attributes 0000 -filemethod 0
File ::B567B52E-4D07-41A9-99D7-9567C6BF3C48 -name HashVector.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm/util -size 1862 -mtime 1220953781 -attributes 1000 -filemethod 0
File ::B1A34572-F480-4E81-B124-8E718719B4EC -name TinyVMCommandLineParser.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tinyvm/util -size 3542 -mtime 1220953782 -attributes 1000 -filemethod 0
File ::25628804-8438-45B7-9B7B-9B9208F6ED99 -name tools -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/jtools/js/tools -mtime 1220953782 -attributes 0000 -filemethod 0
File ::340A673F-2393-4050-9D8E-C8A716CE0E0F -name CodePacker.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tools -size 7581 -mtime 1220953782 -attributes 1000 -filemethod 0
File ::1BB86EFE-2D8A-44B7-8C49-97ED39444F87 -name ListReader.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/jtools/js/tools -size 798 -mtime 1220953782 -attributes 1000 -filemethod 0
File ::956F2910-9EE9-4EBC-802B-A708A9A6CDED -name pccomms -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/pccomms -mtime 1220953782 -attributes 0000 -filemethod 0
File ::18AE5CB5-9E06-4C84-B731-4BE2656DFCEC -name lejos -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/pccomms/lejos -mtime 1220953782 -attributes 0000 -filemethod 0
File ::9C5C1533-8440-48EE-ABE0-D1D957A83152 -name pc -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/pccomms/lejos/pc -mtime 1220953782 -attributes 0000 -filemethod 0
File ::CDF6DEB5-26BF-4690-AEE4-AD6C7F74DC8D -name comm -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/pccomms/lejos/pc/comm -size 8192 -mtime 1220953784 -attributes 0000 -filemethod 0
File ::0668B367-0ED6-45F2-B418-F4004054BF45 -name BlueZException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pccomms/lejos/pc/comm -size 296 -mtime 1220953782 -attributes 1000 -filemethod 0
File ::CA92A21F-948E-4412-89A9-61E5B55A6A88 -name FileInfo.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pccomms/lejos/pc/comm -size 580 -mtime 1220953782 -attributes 1000 -filemethod 0
File ::207AC937-867C-42C0-BF3F-E1ED67CE8E2A -name InputValues.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pccomms/lejos/pc/comm -size 1368 -mtime 1220953782 -attributes 1000 -filemethod 0
File ::D82DDB6C-F791-4850-816A-8C400F55350E -name NXTComm.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pccomms/lejos/pc/comm -size 2194 -mtime 1220953782 -attributes 1000 -filemethod 0
File ::0DA55AEE-BA9A-4D5F-A70F-B5EFC207C0CC -name NXTCommand.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pccomms/lejos/pc/comm -size 15622 -mtime 1220953784 -attributes 1000 -filemethod 0
File ::2D494C56-0003-43CD-8764-D773DD681473 -name NXTCommBluecove.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pccomms/lejos/pc/comm -size 6517 -mtime 1220953783 -attributes 1000 -filemethod 0
File ::427A8E03-6CD6-40E8-9646-B2722A7F05C2 -name NXTCommBluez.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pccomms/lejos/pc/comm -size 6460 -mtime 1220953783 -attributes 1000 -filemethod 0
File ::8BDE6E00-DA25-423F-9028-DA2A627FC2AE -name NXTCommException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pccomms/lejos/pc/comm -size 650 -mtime 1220953783 -attributes 1000 -filemethod 0
File ::0A5594FC-1D49-4B17-A493-5E36AAD2ED9A -name NXTCommFactory.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pccomms/lejos/pc/comm -size 2386 -mtime 1220953783 -attributes 1000 -filemethod 0
File ::446045E1-494C-4D8A-B707-2A5A6696C281 -name NXTCommFantom.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pccomms/lejos/pc/comm -size 2471 -mtime 1220953783 -attributes 1000 -filemethod 0
File ::54364FBF-DE0B-42A6-A40A-D3BFFDF34C8C -name NXTCommInputStream.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pccomms/lejos/pc/comm -size 1327 -mtime 1220953783 -attributes 1000 -filemethod 0
File ::70CA3416-C27F-4804-8A4B-F50F4C7BB7F6 -name NXTCommLibnxt.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pccomms/lejos/pc/comm -size 3515 -mtime 1220953783 -attributes 1000 -filemethod 0
File ::79C27A7D-310A-4B33-89FB-90E5EEABB84E -name NXTCommLogListener.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pccomms/lejos/pc/comm -size 239 -mtime 1220953784 -attributes 1000 -filemethod 0
File ::152B82F9-46B2-47F1-B563-A13F64560716 -name NXTCommOutputStream.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pccomms/lejos/pc/comm -size 538 -mtime 1220953784 -attributes 1000 -filemethod 0
File ::BDF939CA-D20E-413B-97EC-CDF7C0F16855 -name NXTInfo.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pccomms/lejos/pc/comm -size 1127 -mtime 1220953784 -attributes 1000 -filemethod 0
File ::72C64DD4-7D80-4DBB-AD92-086DFB83104D -name NXTProtocol.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pccomms/lejos/pc/comm -size 5059 -mtime 1220953784 -attributes 1000 -filemethod 0
File ::F9B274BC-D6D6-4AAF-B495-2480650732CA -name OutputState.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pccomms/lejos/pc/comm -size 1352 -mtime 1220953784 -attributes 1000 -filemethod 0
File ::2FC554A9-BC88-47E4-BA0B-0F97B645697F -name package.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pccomms/lejos/pc/comm -size 50 -mtime 1220953784 -attributes 1000 -filemethod 0
File ::6EBE563E-D51B-4DC8-86F3-CADC0017EDFF -name pctools -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/pctools -mtime 1220953784 -attributes 0000 -filemethod 0
File ::2EB081AC-D4C2-427E-A332-FD904B12EA5C -name lejos -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/pctools/lejos -mtime 1220953784 -attributes 0000 -filemethod 0
File ::455F0C71-B3DA-4898-90CB-05DDBCFB2AC9 -name pc -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/pctools/lejos/pc -mtime 1220953784 -attributes 0000 -filemethod 0
File ::2FBC7ECF-1311-4088-BBDD-C108410D376E -name tools -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/pctools/lejos/pc/tools -size 8192 -mtime 1220953787 -attributes 0000 -filemethod 0
File ::CEAD490D-852E-44AC-ADAE-446A90DB6A26 -name Connector.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pctools/lejos/pc/tools -size 4305 -mtime 1220953784 -attributes 1000 -filemethod 0
File ::C9C93080-F346-4960-8437-2B326055A347 -name Console.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pctools/lejos/pc/tools -size 1489 -mtime 1220953785 -attributes 1000 -filemethod 0
File ::4498D42D-3C8B-455F-9139-8136853086A3 -name ConsoleViewer.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pctools/lejos/pc/tools -size 4759 -mtime 1220953785 -attributes 1000 -filemethod 0
File ::97517912-5B9A-4194-A527-CFF16B7656F2 -name DataViewer.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pctools/lejos/pc/tools -size 4664 -mtime 1220953785 -attributes 1000 -filemethod 0
File ::B48A635A-8D57-44B9-846B-1C15286576B2 -name NXJBrowser.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pctools/lejos/pc/tools -size 11811 -mtime 1220953785 -attributes 1000 -filemethod 0
File ::1A76A933-2B48-4934-9E92-E2CD325719C9 -name NXJBrowserCommandLineParser.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pctools/lejos/pc/tools -size 2077 -mtime 1220953785 -attributes 1000 -filemethod 0
File ::DC32CA09-B6A4-4F1B-ADFD-006A7B059ACE -name NXJCommandLineParser.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pctools/lejos/pc/tools -size 3769 -mtime 1220953785 -attributes 1000 -filemethod 0
File ::80869625-C414-410C-83CF-46475A1ECD93 -name NXJLinkAndUpload.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pctools/lejos/pc/tools -size 4279 -mtime 1220953785 -attributes 1000 -filemethod 0
File ::45712ADD-0A16-458A-94D8-8592F5285BF9 -name NXJMonitor.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pctools/lejos/pc/tools -size 11332 -mtime 1220953785 -attributes 1000 -filemethod 0
File ::BF85A76B-14CE-4F95-8B2E-9BBD015E53E9 -name NXJUpload.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pctools/lejos/pc/tools -size 1722 -mtime 1220953786 -attributes 1000 -filemethod 0
File ::90ACF16B-AF12-4BCF-903F-2764F4BEA1B2 -name NXJUploadCommandLineParser.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pctools/lejos/pc/tools -size 2616 -mtime 1220953786 -attributes 1000 -filemethod 0
File ::E3D94681-624A-4687-A716-93E63B6F0074 -name NXJUploadException.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pctools/lejos/pc/tools -size 599 -mtime 1220953786 -attributes 1000 -filemethod 0
File ::C26BD614-4CDC-4338-B92E-179AD6672695 -name NXTTableModel.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pctools/lejos/pc/tools -size 1341 -mtime 1220953786 -attributes 1000 -filemethod 0
File ::2964FAB6-82BD-48BA-A976-9C876D479E24 -name SendFile.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pctools/lejos/pc/tools -size 1224 -mtime 1220953786 -attributes 1000 -filemethod 0
File ::2C23C17E-D242-41C9-8103-6044123F9001 -name SocketProxy.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pctools/lejos/pc/tools -size 7355 -mtime 1220953786 -attributes 1000 -filemethod 0
File ::529056A9-495A-4AEF-A069-29E018A6D8AB -name ToolsLogger.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pctools/lejos/pc/tools -size 300 -mtime 1220953786 -attributes 1000 -filemethod 0
File ::181CCF24-A9CA-46A3-86E2-F6B381270B64 -name ToolsLogListener.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pctools/lejos/pc/tools -size 227 -mtime 1220953786 -attributes 1000 -filemethod 0
File ::0EE8AB37-310B-4204-9B58-761751DC76FF -name Upload.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/pctools/lejos/pc/tools -size 2382 -mtime 1220953787 -attributes 1000 -filemethod 0
File ::A853315D-3AFE-4A9D-8A28-70F4E4823E00 -name startup -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/java/startup -mtime 1220953787 -attributes 0000 -filemethod 0
File ::D2BBBADA-FD74-44DB-B541-2C18E2956C34 -name StartUpText.java -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/java/startup -size 23073 -mtime 1220953787 -attributes 1000 -filemethod 0
File ::904CADC5-FB2D-40F4-B8A3-C0199ABF31B4 -name libnxt -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/libnxt -size 4096 -mtime 1220953790 -attributes 0000 -filemethod 0
File ::991223C0-218C-4E03-9B27-4541AAF6AE5C -name AUTHORS -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 93 -mtime 1220953787 -attributes 1000 -filemethod 0
File ::CEB32CCF-C6D5-4085-AE15-EA6A36073101 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 3420 -mtime 1220953787 -attributes 1000 -filemethod 0
File ::47A2BE0F-A283-4758-BE4D-0FFCC92231C4 -name COPYING -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 15145 -mtime 1220953787 -attributes 1000 -filemethod 0
File ::3C5D96E5-FE18-4BC7-9179-3332C3FF4DC8 -name error.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 1283 -mtime 1220953787 -attributes 1000 -filemethod 0
File ::1E428E85-F887-4547-B895-FBD374C91E6A -name error.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 1460 -mtime 1220953788 -attributes 1000 -filemethod 0
File ::886DA21E-F95E-4280-8C2F-1A092F5134C8 -name firmware.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 3678 -mtime 1220953788 -attributes 1000 -filemethod 0
File ::DE9274C9-224E-45CE-A9FC-B157FED28B27 -name firmware.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 1326 -mtime 1220953788 -attributes 1000 -filemethod 0
File ::B0546E24-2D8A-4132-8AC6-7687339C5EC6 -name flash.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 2579 -mtime 1220953788 -attributes 1000 -filemethod 0
File ::3A02D327-18B5-4E31-B84A-2A9E1622F6CC -name flash.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 1264 -mtime 1220953788 -attributes 1000 -filemethod 0
File ::F07F3E95-AA81-442E-B916-FB9A9EF8EF03 -name flash_routine.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 2035 -mtime 1220953788 -attributes 1000 -filemethod 0
File ::7E1533B6-2168-421C-AC7E-C51EB10D6A9B -name flash_routine.h.base -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 1211 -mtime 1220953788 -attributes 1000 -filemethod 0
File ::35D25B55-04C8-4205-99D3-3BD59E7CB613 -name jlibnxt.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 1758 -mtime 1220953789 -attributes 1000 -filemethod 0
File ::2749AEE4-4770-4DC4-9D97-E57246581D53 -name lowlevel.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 6679 -mtime 1220953789 -attributes 1000 -filemethod 0
File ::05DBC1D9-2D92-46EB-B30C-1DB964F8305C -name lowlevel.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 1617 -mtime 1220953789 -attributes 1000 -filemethod 0
File ::502DB560-810E-4F96-92D5-C95897768AA6 -name main_fwflash.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 3125 -mtime 1220953789 -attributes 1000 -filemethod 0
File ::01DAD2F3-F8FA-42F5-92AC-B3181C1EDDEC -name main_jlibnxt.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 4154 -mtime 1220953789 -attributes 1000 -filemethod 0
File ::83D82BBF-7F2A-4A99-95CB-9607F99AB06C -name main_nxjflash.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 5539 -mtime 1220953789 -attributes 1000 -filemethod 0
File ::65B320D2-23F2-41F8-8D2B-33CE400F9DB5 -name main_runc.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 3259 -mtime 1220953789 -attributes 1000 -filemethod 0
File ::F6A5B4B8-D531-4732-97DA-A182C0E48F3D -name main_sambaget.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 3215 -mtime 1220953789 -attributes 1000 -filemethod 0
File ::2F855557-0D43-4C88-A698-81A8127D0E23 -name make_flash_header.py -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 1131 -mtime 1220953790 -attributes 1000 -filemethod 0
File ::B0EE03E8-AD27-482B-B38E-72823B0C3E2C -name README -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 4112 -mtime 1220953787 -attributes 1000 -filemethod 0
File ::BB3AF42D-17F2-4149-BDD4-5E8E10B04790 -name samba.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 3921 -mtime 1220953790 -attributes 1000 -filemethod 0
File ::77D1789B-8E7C-4F0B-9A11-74EA59C5C109 -name samba.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 1876 -mtime 1220953790 -attributes 1000 -filemethod 0
File ::F3CCFC3E-6A8F-4003-B5F0-0C9BBB0B9CE7 -name SConstruct -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt -size 1100 -mtime 1220953787 -attributes 1000 -filemethod 0
File ::E2A43BAB-25CC-4B60-BE02-754A3813EE9E -name docs -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/libnxt/docs -mtime 1220953790 -attributes 0000 -filemethod 0
File ::A5EA6EBB-F297-4B56-A7A8-7606FE5C7216 -name design -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/libnxt/docs/design -mtime 1220953790 -attributes 0000 -filemethod 0
File ::AA174B8F-D8B2-4F59-BB3E-65A59AA8E286 -name libnxt.dia -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt/docs/design -size 2753 -mtime 1220953790 -attributes 1000 -filemethod 0
File ::DC57C0EB-E127-42CB-84CF-1796BBF8FC7B -name reversing -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/libnxt/docs/reversing -mtime 1220953790 -attributes 0000 -filemethod 0
File ::9E4ADAC4-4EC2-4516-A8DE-79D74B8436D6 -name samba.fw.asm -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt/docs/reversing -size 387168 -mtime 1220953790 -attributes 1000 -filemethod 0
File ::8469E1F2-DBF2-4672-B382-2420CBAA47DD -name samba.th.asm -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt/docs/reversing -size 386252 -mtime 1220953790 -attributes 1000 -filemethod 0
File ::D1ED1280-6A79-447A-9F2B-A9B76ADF2813 -name flash_write -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/libnxt/flash_write -mtime 1220953792 -attributes 0000 -filemethod 0
File ::A762203A-8705-48DC-B115-8741F1C5AE66 -name crt0.s -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt/flash_write -size 1057 -mtime 1220953791 -attributes 1000 -filemethod 0
File ::51409A97-DC07-4D0B-8E39-DB34B0D9BF28 -name flash.asm -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt/flash_write -size 1308 -mtime 1220953792 -attributes 1000 -filemethod 0
File ::F906C047-1A90-4D18-BD05-FBF5FBA2B2BB -name flash.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt/flash_write -size 1504 -mtime 1220953792 -attributes 1000 -filemethod 0
File ::36CF7E93-12BC-4525-A345-CF6B115775EB -name Makefile -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/libnxt/flash_write -size 699 -mtime 1220953791 -attributes 1000 -filemethod 0
File ::AC388A6F-10DE-4F73-9505-7983AF52EEF3 -name nxtvm -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/nxtvm -mtime 1220953799 -attributes 0000 -filemethod 0
File ::314E8C70-2253-4935-8E1B-8972F7F08BEA -name javavm -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/nxtvm/javavm -size 8192 -mtime 1220953799 -attributes 0000 -filemethod 0
File ::9E3FB873-51E3-4123-9387-A7B87640F447 -name classes.db -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 700 -mtime 1220953792 -attributes 1000 -filemethod 0
File ::445AE197-DC16-464F-92B2-9415FF7272D6 -name classes.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 4037 -mtime 1220953792 -attributes 1000 -filemethod 0
File ::8468E88A-9C34-4B5D-8C75-B15EEDE685A8 -name configure.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 1671 -mtime 1220953792 -attributes 1000 -filemethod 0
File ::9D675D1A-7F72-4B19-B718-3551BDBCBAA9 -name constants.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 337 -mtime 1220953792 -attributes 1000 -filemethod 0
File ::E583C721-71B6-4629-BD7A-933B9E460013 -name debug.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 2402 -mtime 1220953793 -attributes 1000 -filemethod 0
File ::E85155B6-39C7-46AE-8594-823BF17436B9 -name debug.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 1162 -mtime 1220953793 -attributes 1000 -filemethod 0
File ::51A395AC-6EF3-4496-971A-989F156FDE40 -name exceptions.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 4786 -mtime 1220953793 -attributes 1000 -filemethod 0
File ::788C76DC-1E75-4E0E-9526-E71AA8F7FECE -name exceptions.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 675 -mtime 1220953793 -attributes 1000 -filemethod 0
File ::80338A58-2DEF-421F-ADF1-AEBF6B91856C -name fields.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 243 -mtime 1220953793 -attributes 1000 -filemethod 0
File ::D5A87403-F6C3-4E04-A7BF-45783D9335D7 -name gc.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 1007 -mtime 1220953794 -attributes 1000 -filemethod 0
File ::59F4FC8C-3939-46BE-803F-EB32B7FC0FF7 -name interpreter.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 6814 -mtime 1220953794 -attributes 1000 -filemethod 0
File ::98872B00-8853-43B9-8C46-308FA2F16E82 -name interpreter.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 782 -mtime 1220953794 -attributes 1000 -filemethod 0
File ::F2A70742-56EB-4DEA-B438-23EC62E32C30 -name language.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 10736 -mtime 1220953794 -attributes 1000 -filemethod 0
File ::0C466F8B-7E6C-4444-A188-97C7EBA3C4C9 -name language.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 7190 -mtime 1220953794 -attributes 1000 -filemethod 0
File ::75D44516-D520-45D0-A151-5CE2CB8BA2E5 -name limits.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 73 -mtime 1220953794 -attributes 1000 -filemethod 0
File ::F484D975-268F-4464-9D4B-DEE1D1198BAC -name magic.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 65 -mtime 1220953795 -attributes 1000 -filemethod 0
File ::B25F4821-E4D5-4057-A92C-8D9E2454EFDC -name memory.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 35442 -mtime 1220953795 -attributes 1000 -filemethod 0
File ::D6BAA504-2498-42F1-815E-03F8ACAB057E -name memory.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 3426 -mtime 1220953795 -attributes 1000 -filemethod 0
File ::EA7E220B-0D18-41EF-A9E4-19C0BBFE341D -name op_arithmetic.hc -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 2907 -mtime 1220953795 -attributes 1000 -filemethod 0
File ::E208CF3C-B49E-428D-B026-5F9093BE225E -name op_arrays.hc -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 4696 -mtime 1220953795 -attributes 1000 -filemethod 0
File ::553F4708-AE44-4C65-9CFD-2CEE1A91E864 -name op_control.hc -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 3233 -mtime 1220953795 -attributes 1000 -filemethod 0
File ::C07FCA3F-2088-4342-B3DA-E72A890EEDEE -name op_conversions.hc -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 2113 -mtime 1220953795 -attributes 1000 -filemethod 0
File ::C5923641-4138-4A2F-8338-5689DEA8C22B -name op_locals.hc -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 3840 -mtime 1220953796 -attributes 1000 -filemethod 0
File ::73BC435A-8A53-4F05-95A4-DFBB3D4269C3 -name op_logical.hc -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 1034 -mtime 1220953796 -attributes 1000 -filemethod 0
File ::997681D0-A789-4604-9456-BD030AD88ACD -name op_methods.hc -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 1177 -mtime 1220953796 -attributes 1000 -filemethod 0
File ::6957A449-AE9C-4916-962C-4D0E2126F410 -name op_objects.hc -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 8548 -mtime 1220953796 -attributes 1000 -filemethod 0
File ::9734D155-1799-423C-8300-0940F2E3742F -name op_other.hc -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 746 -mtime 1220953797 -attributes 1000 -filemethod 0
File ::7D8901CE-F6A9-47BC-846F-B65F38AE9348 -name op_skip.hc -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 103 -mtime 1220953797 -attributes 1000 -filemethod 0
File ::7214281E-2845-4E9B-825D-CE64970F3A6D -name op_stack.hc -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 4005 -mtime 1220953797 -attributes 1000 -filemethod 0
File ::481425EC-122F-4B1A-A422-058EF6FB33F1 -name opcodes.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 5147 -mtime 1220953797 -attributes 1000 -filemethod 0
File ::60F0435E-9E72-4854-8FE4-A1C71CAD31B3 -name poll.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 2220 -mtime 1220953798 -attributes 1000 -filemethod 0
File ::24519D92-C917-43BD-B0B1-4D971327BCC4 -name poll.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 585 -mtime 1220953798 -attributes 1000 -filemethod 0
File ::D3835C03-A6B0-4581-B851-A08B650DA55D -name signatures.db -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 2523 -mtime 1220953798 -attributes 1000 -filemethod 0
File ::5B6FA29F-9D68-48F0-B90E-B40A0A8F8436 -name specialclasses.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 769 -mtime 1220953798 -attributes 1000 -filemethod 0
File ::B2540438-FF26-42AA-B323-BAADA5A1D412 -name specialsignatures.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 3066 -mtime 1220953799 -attributes 1000 -filemethod 0
File ::9A50103B-9F78-4554-8149-A8CD9571F83A -name stack.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 3899 -mtime 1220953799 -attributes 1000 -filemethod 0
File ::5B0625F3-CE1B-43AB-9C90-B5318055C4A3 -name threads.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 21119 -mtime 1220953799 -attributes 1000 -filemethod 0
File ::FFF0312C-DF4A-45B1-8231-8A8086E1DD90 -name threads.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 3591 -mtime 1220953799 -attributes 1000 -filemethod 0
File ::C561C76C-D7ED-4493-980F-DA3A814F22A7 -name trace.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 1837 -mtime 1220953799 -attributes 1000 -filemethod 0
File ::BD228B13-91DD-4CE8-863E-013DE1289D21 -name types.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/javavm -size 1453 -mtime 1220953799 -attributes 1000 -filemethod 0
File ::1DD42C81-C461-4B65-B0A3-D8FAE048A0D2 -name platform -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/nxtvm/platform -mtime 1220953807 -attributes 0000 -filemethod 0
File ::3E1A8B64-D2C0-4B4B-B889-458A386126C2 -name nxt -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 12288 -mtime 1220953807 -attributes 0000 -filemethod 0
File ::26146168-2C11-45F5-8482-18F2072C9238 -name aic.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 3756 -mtime 1220953800 -attributes 1000 -filemethod 0
File ::C5A04BE7-7E7B-409F-BFD2-D60D1AAF8E03 -name aic.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 704 -mtime 1220953800 -attributes 1000 -filemethod 0
File ::495FDA88-AAAB-4FF5-AAA2-AE84388B543C -name AT91SAM7.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 61 -mtime 1220953800 -attributes 1000 -filemethod 0
File ::E696C111-97F6-4E12-8421-1855A89B115E -name at91sam7s256.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 149717 -mtime 1220953800 -attributes 1000 -filemethod 0
File ::7996C0DB-3524-4C0D-9D28-6480F981C721 -name bt.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 8662 -mtime 1220953800 -attributes 1000 -filemethod 0
File ::FB795549-A9F4-4CCA-8E61-8EE0CDD05B50 -name bt.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 2422 -mtime 1220953801 -attributes 1000 -filemethod 0
File ::120FDD3B-965C-48CF-A836-7C4476CF728D -name byte_fifo.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 2860 -mtime 1220953801 -attributes 1000 -filemethod 0
File ::43E8A9BA-3896-4D47-8C73-77F1AE6EF95A -name byte_fifo.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 897 -mtime 1220953801 -attributes 1000 -filemethod 0
File ::A6C4F74D-E705-4F5C-AC05-A76BC5EE9497 -name data_abort.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 898 -mtime 1220953801 -attributes 1000 -filemethod 0
File ::1FC90FC8-98EA-4BE1-8520-038B88EF8632 -name display.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 16372 -mtime 1220953801 -attributes 1000 -filemethod 0
File ::1BF2A0D4-1579-4435-B4FD-8DAB8DA6C0FC -name display.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 824 -mtime 1220953801 -attributes 1000 -filemethod 0
File ::8AC78AB1-FAA1-4C56-B476-7237A8086F52 -name environment.mak -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 776 -mtime 1220953802 -attributes 1000 -filemethod 0
File ::15C8842B-33E2-45CE-B880-25835A14C785 -name flashprog.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 2017 -mtime 1220953802 -attributes 1000 -filemethod 0
File ::A350331E-BA1B-4C39-81C2-FCF73917D336 -name flashprog.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 572 -mtime 1220953802 -attributes 1000 -filemethod 0
File ::C2AF1A5C-EDE8-47CC-AD62-68AE36B05449 -name i2c.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 13251 -mtime 1220953802 -attributes 1000 -filemethod 0
File ::447FF994-5120-4EE9-89D7-FD6750EB8AD1 -name i2c.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 487 -mtime 1220953802 -attributes 1000 -filemethod 0
File ::353DF9FE-813E-448A-ADD5-64F6DD1B2E0E -name init.s -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 6465 -mtime 1220953802 -attributes 1000 -filemethod 0
File ::2CC29517-E6F5-43DE-ACF2-E73AC166EBD0 -name interrupts.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 129 -mtime 1220953802 -attributes 1000 -filemethod 0
File ::0EBBF65C-B054-4471-97E0-21408CBACCBC -name interrupts.s -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 1115 -mtime 1220953803 -attributes 1000 -filemethod 0
File ::1121B45C-5046-4255-8E38-A3F5F4B11E96 -name irq.s -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 2893 -mtime 1220953803 -attributes 1000 -filemethod 0
File ::AE5BC82C-4F54-49B1-AEA2-C7BC1CEDC101 -name java_binary.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 36926 -mtime 1220953803 -attributes 1000 -filemethod 0
File ::1E5D8B40-A1E9-4974-929B-2DC742EE8777 -name lejos_nxt.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 118 -mtime 1220953803 -attributes 1000 -filemethod 0
File ::38BF3B72-DA91-4674-AB4E-EBE0FFA9229A -name main.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 11052 -mtime 1220953803 -attributes 1000 -filemethod 0
File ::DA937A60-6D48-4DCE-B08D-5A82DA2DEA7B -name Make.mak -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 3409 -mtime 1220953800 -attributes 1000 -filemethod 0
File ::418029AD-EFB2-4803-A4DE-7FEC74134402 -name Makefile -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 18 -mtime 1220953800 -attributes 1000 -filemethod 0
File ::C864982F-39BE-4DFA-B916-1243308674B7 -name mytypes.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 209 -mtime 1220953803 -attributes 1000 -filemethod 0
File ::F622731C-B8F7-4FDA-BD84-6C5264DB25F0 -name native.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 13090 -mtime 1220953803 -attributes 1000 -filemethod 0
File ::689DAB3C-3A82-4D97-8CC9-0A8F4437E61F -name nxt_avr.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 6238 -mtime 1220953803 -attributes 1000 -filemethod 0
File ::337F5A73-E903-49F3-AE2B-7ADBD533217F -name nxt_avr.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 503 -mtime 1220953803 -attributes 1000 -filemethod 0
File ::CA13DA32-2CF2-4824-810F-D128EF39A01D -name nxt_lcd.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 2534 -mtime 1220953804 -attributes 1000 -filemethod 0
File ::F2456CB8-0933-4B70-955C-4B1E1DDE57FB -name nxt_lcd.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 282 -mtime 1220953804 -attributes 1000 -filemethod 0
File ::08876ABB-7175-4732-A577-27538DEE7BA6 -name nxt_motors.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 3472 -mtime 1220953804 -attributes 1000 -filemethod 0
File ::DA1A9504-8ED4-422E-B66A-AE79066C20D8 -name nxt_motors.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 465 -mtime 1220953804 -attributes 1000 -filemethod 0
File ::01859862-E0D6-4979-AB14-9EC3EAD92986 -name nxt_spi.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 5386 -mtime 1220953804 -attributes 1000 -filemethod 0
File ::2558DD08-7337-4CE0-8226-3CAB1A67B6CA -name nxt_spi.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 545 -mtime 1220953804 -attributes 1000 -filemethod 0
File ::87C76CEB-67A3-414E-919D-FCDE7F0E73AB -name platform_config.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 780 -mtime 1220953804 -attributes 1000 -filemethod 0
File ::2FB36156-D114-4B56-A5D9-12DC5B99360D -name platform_hooks.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 136 -mtime 1220953804 -attributes 1000 -filemethod 0
File ::3853EF9F-6E9C-41A0-811A-22061EBD3D08 -name platform_hooks.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 1143 -mtime 1220953805 -attributes 1000 -filemethod 0
File ::7F2A23A7-D701-4E70-AAB0-7FDC12B96700 -name README -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 522 -mtime 1220953800 -attributes 1000 -filemethod 0
File ::9C149698-223F-435F-8E94-901A18B22336 -name sam7.lds -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 5466 -mtime 1220953805 -attributes 1000 -filemethod 0
File ::B77BD9B9-1875-4C9E-846C-0F611807DC99 -name sensors.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 2428 -mtime 1220953805 -attributes 1000 -filemethod 0
File ::F86BE612-6D66-4134-8A96-EC94526A53EC -name sensors.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 503 -mtime 1220953805 -attributes 1000 -filemethod 0
File ::C48B45C6-B42D-4F12-B725-90226E77CBE0 -name sound.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 14498 -mtime 1220953805 -attributes 1000 -filemethod 0
File ::C41D83AF-754A-42B6-8BDC-19D37484A885 -name sound.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 431 -mtime 1220953805 -attributes 1000 -filemethod 0
File ::3FC965DB-5276-48A2-A4CC-4229316FA560 -name systick.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 2645 -mtime 1220953806 -attributes 1000 -filemethod 0
File ::68CAC153-7459-4AFE-845B-DF31A6132731 -name systick.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 321 -mtime 1220953806 -attributes 1000 -filemethod 0
File ::7D2A6140-694F-4A1C-A454-38E77272C488 -name systime.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 101 -mtime 1220953806 -attributes 1000 -filemethod 0
File ::55834896-1A52-4B51-9181-220DD250C3DD -name targetdef.mak -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 896 -mtime 1220953806 -attributes 1000 -filemethod 0
File ::2EE71F9B-E31E-4EC9-8EF0-F5170B8BB9DF -name twi.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 4558 -mtime 1220953806 -attributes 1000 -filemethod 0
File ::D3F156E0-F58A-46FD-B575-1FD87BC41A95 -name twi.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 390 -mtime 1220953806 -attributes 1000 -filemethod 0
File ::C2E698B5-FF23-46DC-A9DC-02708A69CCEE -name uart.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 6141 -mtime 1220953806 -attributes 1000 -filemethod 0
File ::5710F6A6-4EA3-4294-96A2-B6C549959097 -name uart.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 448 -mtime 1220953806 -attributes 1000 -filemethod 0
File ::CAF86C51-8B92-4BE4-A028-4CEB92772583 -name udp.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 18101 -mtime 1220953806 -attributes 1000 -filemethod 0
File ::6CB5F958-1DF3-4939-9BBB-529D40F84FD7 -name udp.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 1548 -mtime 1220953807 -attributes 1000 -filemethod 0
File ::AFC357DD-5A6D-4536-9A9A-D54E0852155A -name vectors.s -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 1142 -mtime 1220953807 -attributes 1000 -filemethod 0
File ::BC9ECE24-2D00-4FB3-BD78-1189C52B303D -name version.mak -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/nxt -size 38 -mtime 1220953807 -attributes 1000 -filemethod 0
File ::DEB44F5F-28AE-4470-AA73-80877CEF0F3A -name unix -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -type dir -directory <%InstallDir%>/src/nxtvm/platform/unix -size 4096 -mtime 1220953809 -attributes 0000 -filemethod 0
File ::E14E5667-0D2C-477A-8B85-53D531A53069 -name build.xml -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/unix -size 3115 -mtime 1220953807 -attributes 1000 -filemethod 0
File ::59D1BAC0-7593-41FF-997C-142C8F7FCD97 -name dump.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/unix -size 3311 -mtime 1220953807 -attributes 1000 -filemethod 0
File ::66F86B09-0810-4534-8350-BA0628C8F944 -name dump_config.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/unix -size 1880 -mtime 1220953807 -attributes 1000 -filemethod 0
File ::47BE380F-8078-4227-9696-590B099AAD9B -name load.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/unix -size 1321 -mtime 1220953807 -attributes 1000 -filemethod 0
File ::60C10BF2-FA24-42BC-AFA4-3901565D7720 -name load.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/unix -size 141 -mtime 1220953808 -attributes 1000 -filemethod 0
File ::B7101829-4F5F-4F95-85B8-303B181F449E -name nativeemul.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/unix -size 21758 -mtime 1220953808 -attributes 1000 -filemethod 0
File ::591753BC-7377-403C-A5C9-CEDBFA5EE327 -name opcodeinfo.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/unix -size 4318 -mtime 1220953808 -attributes 1000 -filemethod 0
File ::D28147D4-5DBB-4FF7-B423-B2431DC5F73B -name platform_config.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/unix -size 766 -mtime 1220953808 -attributes 1000 -filemethod 0
File ::621B064D-BCA3-4467-8A26-1B83A0570531 -name platform_hooks.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/unix -size 1079 -mtime 1220953808 -attributes 1000 -filemethod 0
File ::160CB77A-87E8-494D-B18D-CF755FF69F9C -name sensors.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/unix -size 1008 -mtime 1220953808 -attributes 1000 -filemethod 0
File ::87E86D4A-159A-437D-BE55-D0DA2D2B314D -name sensors.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/unix -size 394 -mtime 1220953808 -attributes 1000 -filemethod 0
File ::D95720A5-0B15-41EC-9980-962745DFAEEE -name systime.h -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/unix -size 99 -mtime 1220953808 -attributes 1000 -filemethod 0
File ::03049189-D8CA-49A0-8E07-CA1C104C7CA4 -name traceemul.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/unix -size 187 -mtime 1220953809 -attributes 1000 -filemethod 0
File ::A3BA8E63-CDBE-40B0-8EED-E366DDA25557 -name tvmemul.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/unix -size 6046 -mtime 1220953809 -attributes 1000 -filemethod 0
File ::CA0F3620-D1AD-4CE9-90AC-E88DD15834B8 -name verbose.c -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%>/src/nxtvm/platform/unix -size 21208 -mtime 1220953809 -attributes 1000 -filemethod 0
File ::23736DE2-FD34-4645-80EE-E62D19D1D409 -name RELEASENOTES -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%> -size 27134 -mtime 1220953694 -attributes 1000 -filemethod 0
File ::092E8552-EB8D-4F01-9958-4FB9061410E3 -name ACKNOWLEDGMENTS -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%> -size 3485 -mtime 1220953693 -attributes 1000 -filemethod 0
File ::CBA1FA3C-827D-4C41-A6E0-3BA436572737 -name LEGAL -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%> -size 1032 -mtime 1220953693 -attributes 1000 -filemethod 0
File ::F81018D1-5399-4EF2-B9BF-EFD6F1150634 -name LICENSE -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%> -size 19663 -mtime 1220953694 -attributes 1000 -filemethod 0
File ::2AC011C1-8AB1-48CE-976A-B091F292C03D -name README.html -parent 20C58F69-C30F-497D-A4BA-E1B395EC15A7 -directory <%InstallDir%> -size 20551 -mtime 1220953694 -attributes 1000 -filemethod 0

}
} gui.tcl {proc ::InitGui {} {
if {[info exists ::conf(initGui)]} { return }
set ::conf(initGui) 1

set ::conf(x11)  0
set ::conf(aqua) 0

if {[catch { package require Tk } error]} {
if {!$::info(FallBackToConsole)} {
puts "This program must be run in a graphical environment,"
puts "or you must specify a silent or console install."
::InstallJammer::ShowUsageAndExit
}

set ::info(GuiMode)       0
set ::info(SilentMode)    0
set ::info(DefaultMode)   0
set ::info(ConsoleMode)   1
set ::info($::conf(mode)) "Console"

if {![catch { exec stty size } result]
&& [scan $result "%d %d" height width] == 2} {
set conf(ConsoleWidth)  $width
set conf(ConsoleHeight) $height
}

return
}

set ::info(GuiMode) 1

set ::conf(wm)   [tk windowingsystem]
set ::conf(x11)  [string equal $::conf(wm) "x11"]
set ::conf(aqua) [string equal $::conf(wm) "aqua"]

wm withdraw .

if {[package vcompare [package require Tk] 8.5] >= 0} {
namespace eval :: { namespace import ::ttk::style }
} else {
package require tile
}

package require tkpng

if {$::conf(x11)} {
tile::setTheme jammer
}

bind TButton <Return> "%W invoke; break"
array set ::images {BC0409EB-AB66-4D71-895E-E9F8377574D8,Icon <%Icon%> E3CE5D6E-1F59-45F5-AFFB-D154A771D21B,Image <%Image%> FEF5CE97-BF58-472B-9CEC-3AADF9AC1A54,Image <%Image%> 36E6FB50-375B-4B44-A060-2120BC76845A,Icon <%Icon%> C44ED22A-F9ED-46FE-B276-C45D197EBD67,Icon <%Icon%> AE0C668C-FB50-4AA0-924A-8A4EF992E7BD,Icon <%Icon%> 761101CD-B1D6-480A-9B3C-EAC7879A5576,Icon <%Icon%> 68C6794D-56E8-4272-B2B2-62B1B81544C8,Icon <%Icon%> 6B8FE306-976D-49F6-A84E-5CF7A80643EB,Image <%Image%> A06DD6A5-A619-4713-8EA7-C1010EB4800F,Icon <%Icon%> 7DF6F9D7-CF7E-4A69-B0AB-440813123C44,Image <%Image%> FCF679A0-2B02-495D-BA7A-B4C99FEE93B8,Icon <%Icon%>}
set "::images(Modern/Small/SetupModernSmall01.gif)" [image create photo -data R0lGODlhNwA3APcAAP/////78Pf39+/39+/v9+/v7+fv7+fn797n597e59be3tbW3s7W3s7W1s7O1sbO1sbOzr3Gzr3GxrW9xq29xq21xqW1xrW9va21vaW1vaW1taWtvaWttZytvZyttZyltZSltZylrZSlrYyltYylrZScrZScpYycrYycpYyUpYScrYScpYSUrYSUpYyUnISUnISMnISMlHuUpXuMpXOMpXuUnHuMnHuMlHuElHOMnHuEjHOEjHN7jGt7hGtzhGNzhGtze2NzewcAAAj+AHMIFEgjR8GCM2jMkLFQhsMWLWSwYNFi4goWKk6IEJGRxYmPIEmAHDnSYMGBMwzOsKHQYUOHKipavKhChYgNIEhkHClS5IkRP4P6xHFyIA2FKh0qfSijxYoWMVmsqAkiQwefH7EG/QhUJNARB43SYDmjLMOXDifKnIqRRAerPneCBCrUp8+BeI/aSIh2qQyaF52yAPEWp9aQdLV6LXr0aI6EDF0upRiRolSnIDZksEoyK92sI4GqcGxSId+yNZZGlDhR6lMSHjRbzXnC52fEXD8yAJHQMeSyDVc3rXzxKQsSITxszrDhA1a7dEc8/2lAAQcZBg3upSE5+GrLKlb+aPTwocMG5VdJdu2c2ECBAxdYcAe+sK9Sta41fvjgwfyGDjnZVduAJNgGUgEIHhDBCDIUFJlfDzlVXAsoaCQCCB70958HBc6FFQi3fYQgAQjudpZ9TEHUwgsvpFBhCBhy0AEH/YnQWW0jgKAjCZ+NSKIBDVxnll/CwVCDDSy+gIIJJHwgAn8dZGhjT89VlVNXI7hHgAA/KlABCxAuZcOYY8LwAoUWYpgheTZuxdUHGXiwHglaCiDAewgoMAGYYcpwZA433DAmiym0QMKFGe5n4208dlBBBgH+dEABdnJJwAEKLFDBCX2OCSgONgg0KIvibXThgCFVZQGkPH6EQAH+W9o5QAEINPDABCIwxZANONyAAw6ACiQomTW0kFurqIKAAQUVAMhVAghWeucBCTQQAa4uhZoDsMB+mgOZYxZ740gZMGsBTiAl4J4AAFR6QJ4PXIABCRGR+S24+IZrbEZfjeRBBQBjYAGHHykwqbR3GlBtBFZ9AOYKw6XoZ0QvHAlVViWMpCwFzD7q7AkKvFppu7MisAAEE3Cwn2UXWUbZRFFVJFeqG3QM8Ga0NaAupe1WqrC1GDjJ0VMqYBReTTVNdcJOXnGVmc0VYIBBBk6S8IDBlLLbMwF5Xkv1CRViRDTSZH+kgoEnZBb1zWtbJYLVC0xKQM92ElCdAxJg4AH+2CiUUJPRSC9ttlYg3LScBRUwS8FmhkXQgALrslvpeyenDMIJKaQwFdkZdQ7aRyB8kJlsiK+awdRwSfBAAgcDQLfdC2PAgQgotFhh4Lcv/VyTGco29aOPbgYgBhAsgMABdgbguqUmQ3ABB5dnruTSgQteE0glhMBfbLI9OvWqOGngOOuxLs8lpg/kDX0JJaRgZu4qoLDCUyqaUFsIInjAwQaybRb8eRiYwNUOJrmeFSABDLhV6C5Egtq16ATze0qSXuCCFVRIBMnpXf+W858IEK8Bxyvf8gxQHQ6cwCMhQYGxPjI/iLAISS4wlv10FBvuaYZ/50lABiSgMwLSTQD+CTBBr14gl56AJDwQSY2RXgCDFbXARScowaGchKEZeQAAF7hA8RCwrgDYCQAJSIEOfGWmFIzrKTKoGLFscKQX2AAGTWERREqlIwAwQHw6i5zyEFCCHfBgjDcwU0ZEYkb65StciDwSuORYGxIAYAAciMAADRCrAoiABz3YwQ7GGIMmVoiFJ3AhxdIYLjMhCQYzMFINYIAkY4nEdRDAQAQYgLUtZaAHQOgBD3igyUARClVmg6BrnKIiFSWpBTVY5QodCQAERNIBxjPAACCwg1zikpc7wEEnXZCCF9iPBCVo02EERz2oEFNFWXEdACYgy8chAAEmCII8e9ADH/CyVzH+oKCLTCDFRgLTn8DEShHVuQANCFBnEdiBPOXpAx9kUgdDbNEKoPiRt80lRP40YlaY6ToOXECSCzABEBYahFzu8o++rKAJ+BlOEYSzQDANDUkUo04ANGADE5DkC0gaBB+YVJM62OZEV9rSjejoQpf73E+6YsQR1LQAHriABCaAA5729KdjrIHtmIQ/7SWKPKLbkUWnlJuP1BQAEfAAO3lgVZ/qUpPa9KT9MKi9/XSgMDjsjwd0xNek/uSsCvCA7Hxg1SDQ06G9hIELvGmCJ3lVQ/xbTgYswDHEMe48/zkrADCwAQ70oLAlpScvx0hBFKBgI/uh0YzMsxkLuBZgiUv+nOI4plkGcIADbLUqEH5Az4f6ckmo/QCN9kc6/8H2uLClgGYFcB4YgLanusRmUJXU2O3FhgP+W07iMgCw2XKsApoFwANAgILnGhaTm/xVDFzQNwzq74aSZdt2Y8sx5WrWkijIrW4duksdjNFM3nwS9yTL3fk+qr4UWJZ9NSsBGOjgB4UFgk93uclAbbNvmdmMwLh7ugogTnH0pW14EdCCGxAWtA3FZq9g0MkzoUB//lsWd7/bsQTLdsGaxcAOPltYH/ygoXC9wTZX5CIUhEDDzMLAcUGcYBGH1wA24MFII8zf9MYgnxRaAXuBe2QO1ze5CA6vOieASZJOeaH1BKpIoFz8EfuZFgXIUU7UEOxdMbtuAB/AAY9LamaHZjKbLV6SRhoLtgiGsz+tVTDA7Ow6A+T3ufakMCDZHIJwJlV+EDHtoaoom4AAADs=]
set "::images(Modern/SetupModern01.gif)" [image create photo -data ]


proc ::ThemeSetup {} {
option add *font  TkTextFont

if {$::tcl_platform(platform) ne "windows"} {
option add *background          [style default . -background]
option add *selectForeground    [style default . -selectforeground]
option add *selectBackground    [style default . -selectbackground]

option add *Listbox.background  white

option add *Entry.background    white
option add *Entry.borderWidth   1

option add *Text.background     white
}
}

ThemeSetup


package require Tcl 8.1.1

namespace eval Widget {
variable _class
variable _tk_widget

variable _theme 0

variable  _optiontype
array set _optiontype {
TkResource Widget::_test_tkresource
BwResource Widget::_test_bwresource
Enum       Widget::_test_enum
Int        Widget::_test_int
Boolean    Widget::_test_boolean
Boolean2   Widget::_test_boolean2
String     Widget::_test_string
Flag       Widget::_test_flag
Synonym    Widget::_test_synonym
Color      Widget::_test_color
Color2     Widget::_test_color2
Padding    Widget::_test_padding
}

proc use {} {}
}


proc Widget::CreateTempWidget { class {command frame} } {
set class [string map [list :: ""] $class]
set path  ".#BWidget.#Class#$class"
if {![winfo exists .#BWidget]} { frame .#BWidget }
if {![winfo exists $path]} {
if {[string equal $command "frame"]
|| [string equal $command "toplevel"]} {
$command $path -class $class
if {[string equal $command "toplevel"]} { wm withdraw $path }
} else {
$command $path
}
}
return $path
}


proc Widget::tkinclude { class tkwidget subpath args } {
foreach {cmd lopt} $args {
switch -- $cmd {
remove {
foreach option $lopt {
set remove($option) 1
}
}

include {
foreach option $lopt {
set include($option) 1
}
}

prefix {
set prefix [lindex $lopt 0]
foreach option [lrange $lopt 1 end] {
set rename($option) "-$prefix[string range $option 1 end]"
}
}

rename - readonly - initialize {
array set $cmd $lopt
}

default {
return -code error "invalid argument \"$cmd\""
}
}
}

namespace eval $class {}
upvar 0 ${class}::opt classopt
upvar 0 ${class}::map classmap
upvar 0 ${class}::map$subpath submap
upvar 0 ${class}::optionExports exports
upvar 0 ${class}::subpaths subpaths

if {![info exists subpaths($subpath)]} { set subpaths($subpath) [list] }
eval [list lappend subpaths($subpath)] [array get initialize]

set widg [Widget::CreateTempWidget $tkwidget $tkwidget]
foreach optdesc [_get_tkwidget_options $tkwidget] {
set option [lindex $optdesc 0]

if {[info exists remove($option)]} { continue }
if {[info exists include] && ![info exists include($option)]} {continue}

if {[llength $optdesc] == 3} {
set syn [lindex $optdesc 1]
if {![info exists remove($syn)]} {
if {[info exists rename($syn)]} {
set classopt($option) [list Synonym $rename($syn)]
} else {
set classopt($option) [list Synonym $syn]
}
}

continue
}

set ro      0
set value   [lindex $optdesc 1]
set realopt $option

if {[info exists rename($option)]} {
set realopt $option
set option  $rename($option)
}

if {[info exists readonly($option)]} {
set ro $readonly($option)
}

set optionval [list $tkwidget $realopt]
set classopt($option) [list TkResource $value $ro $optionval]

if {![info exists initialize($option)]} {
set conf    [_configure_option $option ""]
set dbName  [lindex $conf 0]
set dbClass [lindex $conf 1]

set def [option get $widg $dbName $dbClass]
if {[string length $def]} {
set value $def
lappend subpaths($subpath) $option $value
}
}


lappend classmap($option) $subpath "" $realopt
set submap($realopt) $option
}
}


proc Widget::bwinclude { class subclass subpath args } {
upvar 0 ${subclass}::opt subclassopt

foreach {cmd lopt} $args {
switch -- $cmd {
remove {
foreach option $lopt {
set remove($option) 1
}
}

include {
foreach option $lopt {
set include($option) 1
}
}

prefix {
set prefix   [lindex $lopt 0]
set options  [lrange $lopt 1 end]
set doremove [string equal [lindex $options 0] "remove"]
if {![llength $options] || $doremove} {
set options  [list]
set toremove [lrange $options 1 end]
foreach option [array names subclassopt] {
if {[lsearch -exact $toremove $option] < 0} {
lappend options $option
}
}
}

foreach option $options {
set rename($option) "-$prefix[string range $option 1 end]"
}
}

rename - readonly - initialize {
array set $cmd $lopt
}

default {
return -code error "invalid argument \"$cmd\""
}
}
}

namespace eval $class {}
upvar 0 ${class}::opt classopt
upvar 0 ${class}::map classmap
upvar 0 ${class}::map$subpath submap
upvar 0 ${class}::optionExports exports
upvar 0 ${subclass}::optionExports subexports
upvar 0 ${class}::subpaths subpaths

if {![info exists subpaths($subpath)]} { set subpaths($subpath) [list] }
eval [list lappend subpaths($subpath)] [array get initialize]

set path [Widget::CreateTempWidget $class]
foreach {option optdesc} [array get subclassopt] {
set subOption $option

if {[info exists remove($option)]} { continue }
if {[info exists include] && ![info exists include($option)]} {continue}

set type [lindex $optdesc 0]
if {[string equal $type "Synonym"]} {
set syn [lindex $optdesc 1]
if {![info exists remove($syn)]} {
if {[info exists rename($syn)]} {
set classopt($option) [list Synonym $rename($syn)]
} else {
set classopt($option) [list Synonym $syn]
}
}
continue
}

set ro      [lindex $optdesc 2]
set value   [lindex $optdesc 1]
set realopt $option

if {[info exists rename($option)]} {
set realopt $option
set option  $rename($option)
}

if {[info exists initialize($option)]} {
set value $initialize($option)
}

if {[info exists readonly($option)]} {
set ro $readonly($option)
}

if {![info exists initialize($option)]} {
set conf    [_configure_option $option ""]
set dbName  [lindex $conf 0]
set dbClass [lindex $conf 1]

set def [option get $path $dbName $dbClass]
if {[string length $def]} {
set value $def
lappend subpaths($subpath) $option $value
}
}

set classopt($option) [list $type $value $ro [lindex $optdesc 3]]


lappend classmap($option) $subpath $subclass $realopt
set submap($realopt) $option
}
}


proc Widget::declare { class optlist } {
variable _optiontype

namespace eval $class {}
upvar 0 ${class}::opt classopt
upvar 0 ${class}::optionExports exports
upvar 0 ${class}::optionClass optionClass

set path [Widget::CreateTempWidget $class]
foreach optdesc $optlist {
set option  [lindex $optdesc 0]
set optdesc [lrange $optdesc 1 end]
set type    [lindex $optdesc 0]

if {![info exists _optiontype($type)]} {
return -code error "invalid option type \"$type\""
}

if {[string equal $type "Synonym"]} {
set syn [lindex $optdesc 1]
if {![info exists classopt($syn)]} {
return -code error  "unknow option \"$syn\" for Synonym \"$option\""
}
set classopt($option) [list Synonym $syn]
continue
}

set value [lindex $optdesc 1]
set ro    [lindex $optdesc 2]
set arg   [lindex $optdesc 3]

set conf    [_configure_option $option ""]
set dbName  [lindex $conf 0]
set dbClass [lindex $conf 1]
set default [option get $path $dbName $dbClass]

if {[string equal $type "BwResource"]} {
set subclass    [lindex $arg 0]
set realopt     [lindex $arg 1]
if {![string length $realopt]} { set realopt $option }

upvar 0 ${subclass}::opt subclassopt
if {![info exists subclassopt($realopt)]} {
return -code error "unknow option \"$realopt\""
}

set suboptdesc $subclassopt($realopt)
if {![string length $value]} {
set value [lindex $suboptdesc 1]
}

set type [lindex $suboptdesc 0]
set ro   [lindex $suboptdesc 2]
set arg  [lindex $suboptdesc 3]
set classopt($option) [list $type $value $ro $arg]
continue
}

if {[string equal $type "TkResource"]} {
set tkwidget [lindex $arg 0]
set widg [Widget::CreateTempWidget $tkwidget $tkwidget]
set realopt  [lindex $arg 1]
if { ![string length $realopt] } {
set realopt $option
}
set tkoptions [_get_tkwidget_options $tkwidget]
if {![string length $value]} {
set ind [lsearch $tkoptions [list $realopt *]]
set value [lindex [lindex $tkoptions $ind] end]
}
set classopt($option) [list TkResource $value $ro  [list $tkwidget $realopt]]
set optionClass($option) [lindex [$widg configure $realopt] 1]
continue
}

if {[string equal $type "Color"]} {
if {[info exists ::BWidget::colors($value)]} {
set value $::BWidget::colors($value)
}
}


set classopt($option) [list $type $value $ro $arg]
}
}


proc Widget::define { class filename args } {
variable _inuse
variable ::BWidget::use

proc ::${class}::use {} {}

if {[set x [lsearch -exact $args "-classonly"]] > -1} {
set args [lreplace $args $x $x]
} else {
interp alias {} ::${class} {} ${class}::create

proc ::${class}::cget { path option } {
return [Widget::cget $path $option]
}

proc ::${class}::configure { path args } {
return [Widget::configure $path $args]
}

bind $class <Destroy> [list Widget::destroy %W]
}

set _inuse($class) 0

set use($class)      $args
set use($class,file) $filename
lappend use(classes) $class

foreach class $args { ${class}::use }
}


proc Widget::create { class path {rename 1} } {
if {$rename} { rename $path ::$path:cmd }
set cmd "${class}::\$cmd"
proc ::$path { cmd args }  [subst {return \[eval \[linsert \$args 0 $cmd [list $path]\]\]}]
return $path
}


proc Widget::addmap { class subclass subpath options } {
upvar 0 ${class}::opt classopt
upvar 0 ${class}::optionExports exports
upvar 0 ${class}::optionClass optionClass
upvar 0 ${class}::map classmap
upvar 0 ${class}::map$subpath submap
upvar 0 ${class}::subpaths subpaths

if {![info exists subpaths($subpath)]} { set subpaths($subpath) [list] }

foreach {option realopt} $options {
if {![string length $realopt]} { set realopt $option }


lappend classmap($option) $subpath $subclass $realopt
set submap($realopt) $option

lappend subpaths($subpath) $realopt [lindex $classopt($option) 1]
}
}


proc Widget::syncoptions { class subclass subpath options } {
upvar 0 ${class}::sync classync
upvar 0 ${class}::subpaths subpaths

if {![info exists subpaths($subpath)]} { set subpaths($subpath) [list] }

foreach {option realopt} $options {
if {![string length $realopt]} { set realopt $option }
set classync($option) [list $subpath $subclass $realopt]
}
}


proc Widget::init { class path options {initFromODB 0} } {
variable _inuse

upvar 0 Widget::_optiontype opttype
upvar 0 ${class}::opt classopt
upvar 0 ${class}::map classmap
upvar 0 ${class}::$path:opt  pathopt
upvar 0 ${class}::$path:mod  pathmod
upvar 0 ${class}::$path:init pathinit

if {[info exists pathopt]} { unset pathopt }
if {[info exists pathmod]} { unset pathmod }

set fpath    $path
set rdbclass [string map [list :: ""] $class]
if {![winfo exists $path]} { set fpath [Widget::CreateTempWidget $class] }

foreach {option optdesc} [array get classopt] {
set pathmod($option) 0
if {[info exists classmap($option)]} { continue }

set type [lindex $optdesc 0]
if {[string equal $type "Synonym"]} { continue }

set alt ""
if {[string equal $type "TkResource"]} {
set alt [lindex [lindex $optdesc 3] 1]
}

set optdb [lindex [_configure_option $option $alt] 0]
set def   [option get $fpath $optdb $rdbclass]
if {[string length $def]} {
set pathopt($option) $def
} else {
set pathopt($option) [lindex $optdesc 1]
}
}

if {![info exists _inuse($class)]} { set _inuse($class) 0 }
incr _inuse($class)

set Widget::_class($path) $class

if {$initFromODB} {
array set pathopt $options
} else {
foreach {option value} $options {
if {![info exists classopt($option)]} {
unset pathopt
unset pathmod
return -code error "unknown option \"$option\""
}

set optdesc $classopt($option)
set type    [lindex $optdesc 0]
if {[string equal $type "Synonym"]} {
set option  [lindex $optdesc 1]
set optdesc $classopt($option)
set type    [lindex $optdesc 0]
}

set arg [lindex $optdesc 3]
set pathopt($option)  [$opttype($type) $option $value $arg]
set pathinit($option) $pathopt($option)
}
}
}



proc Widget::initFromODB { class path options } {
Widget::init $class $path $options 1
}




proc Widget::copyinit { class templatepath path options } {
upvar 0 ${class}::opt classopt  ${class}::$path:opt	 pathopt  ${class}::$path:mod	 pathmod  ${class}::$path:init pathinit  ${class}::$templatepath:opt	 templatepathopt  ${class}::$templatepath:mod	 templatepathmod  ${class}::$templatepath:init templatepathinit

if {[info exists pathopt]} { unset pathopt }
if {[info exists pathmod]} { unset pathmod }

array set pathmod  [array get templatepathmod]
array set pathopt  [array get templatepathopt]
array set pathinit [array get templatepathinit]

set Widget::_class($path) $class
foreach {option value} $options {
if {![info exists classopt($option)]} {
unset pathopt
unset pathmod
return -code error "unknown option \"$option\""
}

set optdesc $classopt($option)
set type    [lindex $optdesc 0]
if {[string equal $type "Synonym"]} {
set option	[lindex $optdesc 1]
set optdesc $classopt($option)
set type	[lindex $optdesc 0]
}

set arg [lindex $optdesc 3]
set pathopt($option)  [$Widget::_optiontype($type) $option $value $arg]
set pathinit($option) $pathopt($option)
}
}


proc Widget::parseArgs { class options {errorOut 1} } {
upvar 0 ${class}::opt classopt
upvar 0 ${class}::map classmap

foreach {option val} $options {
if {![info exists classopt($option)]} {
if {$errorOut} { return -code error "unknown option \"$option\"" }
continue
}

set optdesc $classopt($option)
set type    [lindex $optdesc 0]
if {[string equal $type "Synonym"]} {
set option  [lindex $optdesc 1]
set optdesc $classopt($option)
set type    [lindex $optdesc 0]
}

if {[string equal $type "TkResource"]} {
Widget::_get_tkwidget_options [lindex [lindex $optdesc 3] 0]
}

set val [$Widget::_optiontype($type) $option $val [lindex $optdesc 3]]

if {[info exists classmap($option)]} {
foreach {subpath subclass realopt} $classmap($option) {
lappend maps($subpath) $realopt $val
}
} else {
lappend maps($class) $option $val
}
}

return [array get maps]
}



proc Widget::initArgs { class options arrayName } {
upvar 1 $arrayName maps
upvar 0 ${class}::subpaths subpaths

array set maps [list $class {} :cmd {}]
foreach subpath [array names subpaths] {
set maps($subpath) [list]
}

array set maps [array get subpaths]

foreach {var val} [Widget::parseArgs $class $options] {
eval lappend maps($var) $val
}
}



proc Widget::splitArgs { options args } {
array set maps [list :cmd {}]
foreach class $args {
if {![info exists maps($class)]} { set maps($class) [list] }
array set maps [Widget::parseArgs $class $options 0]
}

return [array get maps]
}


proc Widget::optionExists { class option } {
return [info exists ${class}::opt($option)]
}


proc Widget::class { path } {
if {[info exists Widget::_class($path)]} { return $Widget::_class($path) }
return -code error "unknown widget $path"
}


proc Widget::destroy { path {unsetVariables 1} } {
variable _class
variable _inuse

if {[info exists _class($path)]} {
set class $_class($path)

if {[info exists _inuse($class)]} { incr _inuse($class) -1 }

if {![string equal [info commands $path] ""]} { rename $path "" }

foreach x {opt mod init} {
if {[info exists ${class}::$path:$x]} {
unset ${class}::$path:$x
}
}

if {$unsetVariables} { eval unset [info vars ${class}::$path:*] }

unset _class($path)
}
}


proc Widget::configure { path options } {
set len [llength $options]
if {$len < 2} { return [_get_configure $path $options] }
if {$len % 2} { return -code error "incorrect number of arguments" }

variable _class
variable _optiontype

set class $_class($path)
upvar 0 ${class}::opt  classopt
upvar 0 ${class}::map  classmap
upvar 0 ${class}::$path:opt pathopt
upvar 0 ${class}::$path:mod pathmod

set window [_get_window $class $path]
foreach {option value} $options {
if {![info exists classopt($option)]} {
return -code error "unknown option \"$option\""
}

set optdesc $classopt($option)
set type    [lindex $optdesc 0]
if {[string equal $type "Synonym"]} {
set option  [lindex $optdesc 1]
set optdesc $classopt($option)
set type    [lindex $optdesc 0]
}

if {[lindex $optdesc 2]} { continue }

set newval [$_optiontype($type) $option $value [lindex $optdesc 3]]

if {[info exists classmap($option)]} {
set window [_get_window $class $window]
foreach {subpath subclass realopt} $classmap($option) {
if {[string length $subclass]} {
set curval [${subclass}::cget $window$subpath $realopt]
${subclass}::configure $window$subpath $realopt $newval
} else {
set curval [$window$subpath cget $realopt]
$window$subpath configure $realopt $newval
}
}
} else {
set curval $pathopt($option)
set pathopt($option) $newval
}

set pathmod($option) [expr {![string equal $newval $curval]}]
}

return
}


proc Widget::cget { path option } {
if {![info exists ::Widget::_class($path)]} {
return -code error "unknown widget \"$path\""
}

set class $::Widget::_class($path)
if {![info exists ${class}::opt($option)]} {
return -code error "unknown option \"$option\""
}

set optdesc [set ${class}::opt($option)]
set type    [lindex $optdesc 0]
if {[string equal $type "Synonym"]} {
set option [lindex $optdesc 1]
}

if {[info exists ${class}::map($option)]} {
foreach {subpath subclass realopt} [set ${class}::map($option)] {break}
set path "[_get_window $class $path]$subpath"
return [$path cget $realopt]
}
upvar 0 ${class}::$path:opt pathopt
set pathopt($option)
}


proc Widget::subcget { path subwidget } {
set class $::Widget::_class($path)
upvar 0 ${class}::$path:opt pathopt
upvar 0 ${class}::map$subwidget submap
upvar 0 ${class}::$path:init pathinit

set result [list]
foreach realopt [array names submap] {
if {[info exists pathinit($submap($realopt))]} {
lappend result $realopt $pathopt($submap($realopt))
}
}
return $result
}


proc Widget::hasChanged { path option varName } {
upvar 1 $varName value
Widget::getVariable $path mod pathmod

set value   [Widget::cget $path $option]
set result  $pathmod($option)
set pathmod($option) 0

return $result
}

proc Widget::hasChangedX { path option args } {
set class $::Widget::_class($path)
upvar 0 ${class}::$path:mod pathmod

set result  $pathmod($option)
set pathmod($option) 0
foreach option $args {
lappend result $pathmod($option)
set pathmod($option) 0
}

set result
}


proc Widget::anyChangedX { path args } {
set class $::Widget::_class($path)
upvar 0 ${class}::$path:mod pathmod

set result 0
foreach option $args {
incr result $pathmod($option)
set pathmod($option) 0
}
return $result
}


proc Widget::getoption { path option } {
set class $::Widget::_class($path)
upvar 0 ${class}::${path}:opt pathopt
set pathopt($option)
}


proc Widget::setoption { path args } {
set class $::Widget::_class($path)
upvar 0 ${class}::${path}:opt pathopt
foreach [list option value] $args {
set pathopt($option) $value
}
}


proc Widget::getMegawidgetOption { path option } {
set class $::Widget::_class($path)
upvar 0 ${class}::${path}:opt pathopt
set pathopt($option)
}


proc Widget::setMegawidgetOption { path option value } {
set class $::Widget::_class($path)
upvar 0 ${class}::${path}:opt pathopt
set pathopt($option) $value
}


proc Widget::_get_window { class path } {
set idx [expr {[string last "#" $path] + 1}]
if {$idx && [string equal [string range $path $idx end] $class]} {
return [string range $path 0 [expr {$idx - 2}]]
}
return $path
}


proc Widget::_get_configure { path options } {
variable _class

set class $_class($path)
upvar 0 ${class}::opt classopt
upvar 0 ${class}::$path:opt pathopt

if {[llength $options] == 1} {
set option  [lindex $options 0]
if { ![info exists classopt($option)] } {
return -code error "unknown option \"$option\""
}
set optdesc $classopt($option)
set type    [lindex $optdesc 0]
if { [string equal $type "Synonym"] } {
set option  [lindex $optdesc 1]
set optdesc $classopt($option)
set type    [lindex $optdesc 0]
}
if { [string equal $type "TkResource"] } {
set alt [lindex [lindex $optdesc 3] 1]
} else {
set alt ""
}

set res [list $option]
eval lappend res [_configure_option $option $alt]
lappend res [lindex $optdesc 1] [${class}::cget $path $option]

return $res
}


set result [list]
foreach option [lsort [array names classopt]] {
set alt     ""
set syn     ""
set optdesc $classopt($option)
set type    [lindex $optdesc 0]

if {[string equal $type "Synonym"]} {
set syn     $option
set option  [lindex $optdesc 1]
set optdesc $classopt($option)
set type    [lindex $optdesc 0]
}

if {[string equal $type "TkResource"]} {
set alt [lindex [lindex $optdesc 3] 1]
}

set res [_configure_option $option $alt]
if {![string length $syn]} {
lappend result [concat $option $res  [list [lindex $optdesc 1]] [list [cget $path $option]]]
} else {
lappend result [list $syn [lindex $res 0]]
}
}

return $result
}


proc Widget::_configure_option { option altopt } {
variable _optiondb
variable _optionclass

if {[info exists _optiondb($option)]} {
set optdb $_optiondb($option)
} else {
set optdb [string range $option 1 end]
}

if {[info exists _optionclass($option)]} {
set optclass $_optionclass($option)
} elseif {[string length $altopt]} {
if {[info exists _optionclass($altopt)]} {
set optclass $_optionclass($altopt)
} else {
set optclass [string range $altopt 1 end]
}
} else {
set optclass [string range $option 1 end]
}

return [list $optdb $optclass]
}


proc Widget::_get_tkwidget_options { tkwidget } {
variable _tk_widget
variable _optiondb
variable _optionclass

if {![info exists _tk_widget($tkwidget)]} {
set widget [Widget::CreateTempWidget $tkwidget $tkwidget]

set config [$widget configure]
foreach optlist $config {
set opt [lindex $optlist 0]
if {[llength $optlist] == 2} {
set refsyn [lindex $optlist 1]

set idx [lsearch $config [list * $refsyn *]]
if {$idx == -1} {
if {[string index $refsyn 0] == "-"} {
set idx [lsearch $config [list $refsyn * *]]
} else {
set refsyn [string tolower $refsyn]
set idx [lsearch $config [list -$refsyn * *]]
}

if {$idx == -1} {
return -code error "can't find option of synonym $opt"
}
}

set syn [lindex [lindex $config $idx] 0]
set def [lindex [lindex $config $idx] 4]
lappend _tk_widget($tkwidget) [list $opt $syn $def]
} else {
set def [lindex $optlist 4]
lappend _tk_widget($tkwidget) [list $opt $def]
set _optiondb($opt)    [lindex $optlist 1]
set _optionclass($opt) [lindex $optlist 2]
}
}
}

return $_tk_widget($tkwidget)
}


proc Widget::_test_tkresource { option value arg } {
set tkwidget [lindex $arg 0]
set realopt  [lindex $arg 1]
set path     [Widget::CreateTempWidget $tkwidget $tkwidget]
set old      [$path cget $realopt]
$path configure $realopt $value
set res      [$path cget $realopt]
$path configure $realopt $old
return $res
}


proc Widget::_test_bwresource { option value arg } {
return -code error "bad option type BwResource in widget"
}


proc Widget::_test_synonym { option value arg } {
return -code error "bad option type Synonym in widget"
}

proc Widget::_test_color { option value arg } {
if {[info exists ::BWidget::colors($value)]} {
set value $::BWidget::colors($value)
}

if {[catch {winfo rgb . $value} color]} {
return -code error  "bad $option value \"$value\": must be a colorname or #RRGGBB"
}

return $value
}


proc Widget::_test_color2 { option value arg } {
if {![string length $value]} { return }

if {[info exists ::BWidget::colors($value)]} {
set value $::BWidget::colors($value)
}

if {[catch {winfo rgb . $value} color]} {
return -code error  "bad $option value \"$value\": must be a colorname or #RRGGBB"
}

return $value
}


proc Widget::_test_string { option value arg } {
return $value
}


proc Widget::_test_flag { option value arg } {
set len [string length $value]
set res ""
for {set i 0} {$i < $len} {incr i} {
set c [string index $value $i]
if {[string first $c $arg] == -1} {
set name [string range $option 1 end]
return -code error [BWidget::badOptionString $name $value $arg]
}
if {[string first $c $res] == -1} { append res $c }
}
return $res
}


proc Widget::_test_enum { option value arg } {
if {[lsearch -exact $arg $value] == -1} {
set name [string range $option 1 end]
return -code error [BWidget::badOptionString $name $value $arg]
}
return $value
}


proc Widget::_test_int { option value arg } {
set map [list %d $value]
if {![string is int -strict $value]
|| ([string length $arg] && ![expr [string map $map $arg]])} {
return -code error  "bad $option value \"$value\": must be integer ($arg)"
}
return $value
}


proc Widget::_test_boolean { option value arg } {
if {![string is boolean -strict $value]} {
set name [string range $option 1 end]
return -code error [BWidget::badOptionString $name $value boolean]
}

return [string is true $value]
}


proc Widget::_test_boolean2 { option value arg } {
if {![string is boolean $value]} {
set name [string range $option 1 end]
set opts [list empty boolean]
return -code error [BWidget::badOptionString $name $value $opts]
}

if {[string length $value]} { return [string is true $value] }
}


proc Widget::_test_padding { option values arg } {
set len [llength $values]
if {$len < 1 || $len > 2} {
return -code error  "bad pad value \"$values\": must be positive screen distance"
}

foreach value $values {
set map [list %d $value]
if {![string is int -strict $value]
|| ([string length $arg] && ![expr [string map $map $arg]])} {
return -code error  "bad pad value \"$value\": must be positive screen distance"
}
}
return $values
}


proc Widget::_get_padding { args } {
if {[llength $args] == 2} {
set padding [lindex $args 0]
set index   [lindex $args 1]
} elseif {[llength $args] == 3} {
set path    [lindex $args 0]
set option  [lindex $args 1]
set index   [lindex $args 2]
set padding [Widget::cget $path $option]
}
set val [lindex $padding $index]
if {![string length $val]} { set val [lindex $padding 0] }
return $val
}


proc Widget::focusNext { w } {
set cur $w
while 1 {


set parent $cur
set children [winfo children $cur]
set i -1


while 1 {
incr i
if {$i < [llength $children]} {
set cur [lindex $children $i]
if {[winfo toplevel $cur] == $cur} {
continue
} else {
break
}
}


set cur $parent
if {[winfo toplevel $cur] == $cur} {
break
}
set parent [winfo parent $parent]
set children [winfo children $parent]
set i [lsearch -exact $children $cur]
}
if {($cur == $w) || [focusOK $cur]} {
return $cur
}
}
}


proc Widget::focusPrev { w } {
set cur $w
while 1 {


if {[winfo toplevel $cur] == $cur}  {
set parent $cur
set children [winfo children $cur]
set i [llength $children]
} else {
set parent [winfo parent $cur]
set children [winfo children $parent]
set i [lsearch -exact $children $cur]
}


while {$i > 0} {
incr i -1
set cur [lindex $children $i]
if {[winfo toplevel $cur] == $cur} {
continue
}
set parent $cur
set children [winfo children $parent]
set i [llength $children]
}
set cur $parent
if {($cur == $w) || [focusOK $cur]} {
return $cur
}
}
}


proc Widget::focusOK { w } {
set code [catch {$w cget -takefocus} value]
if {$code == 1} { return 0 }

if {!$code && [string length $value]} {
if {$value == 0} {
return 0
} elseif {$value == 1} {
return [winfo viewable $w]
} else {
set value [uplevel \#0 $value $w]
if {[string length $value]} { return $value }
}
}

if {![winfo viewable $w]} { return 0 }

set code [catch {$w cget -state} value]
if {!$code && [string equal $value "disabled"]} { return 0 }

set code [catch {$w cget -editable} value]
if {!$code && $value == 0} { return 0 }

set top [winfo toplevel $w]
foreach tag [bindtags $w] {
if {![string equal $tag $top]
&& ![string equal $tag "all"]
&& [string match *Key* [bind $tag]]} {
return 1
}
}
return 0
}


proc Widget::traverseTo { w } {
set focus [focus]
if {[string length $focus]} {
event generate $focus <<TraverseOut>>
}
focus $w

event generate $w <<TraverseIn>>
}



proc Widget::varForOption { path option } {
variable _class
variable _optiontype

set class $_class($path)
upvar 0 ${class}::$path:opt pathopt

if {![info exists pathopt($option)]} {
return -code error "unable to find variable for option \"$option\""
}

return ::Widget::${class}::$path:opt($option)
}


proc Widget::widgetVar { path varName } {
set class $Widget::_class($path)
return ::Widget::${class}::$path:$varName
}


proc Widget::getVariable { path varName {newVarName ""} } {
if {![string length $newVarName]} { set newVarName $varName }
uplevel 1 [list upvar \#0 [Widget::widgetVar $path $varName] $newVarName]
}


proc Widget::options { path args } {
if {[llength $args]} {
foreach option $args {
lappend options [_get_configure $path $option]
}
} else {
set options [_get_configure $path {}]
}

set result [list]
foreach list $options {
if {[llength $list] < 5} { continue }
lappend result [lindex $list 0] [lindex $list end]
}
return $result
}


proc Widget::getOption { option default args } {
foreach widget $args {
set value  [Widget::getoption $widget $option]
if {$value != $default} { break }
}
return $value
}


proc Widget::cgetOption { option default args } {
foreach widget $args {
set value  [Widget::cget $widget $option]
if {$value != $default} { break }
}
return $value
}


proc Widget::nextIndex { path node } {
Widget::getVariable $path autoIndex
if {![info exists autoIndex]} { set autoIndex -1 }
return [string map [list #auto [incr autoIndex]] $node]
}


proc Widget::exists { path } {
return [info exists ::Widget::_class($path)]
}


proc Widget::theme {{bool {}}} {
variable _theme
if {[llength [info level 0]] == 2} {
if {[catch {package require tile 0.6}]
&& [catch {package require tile 1}]} {
return -code error "BWidget's theming requires tile 0.6+"
} else {
catch {style default BWSlim.Toolbutton -padding 0}
}
set _theme [string is true -strict $bool]
}
return $_theme
}


namespace eval BWidget {
variable _gstack [list]
variable _fstack [list]
}


proc BWidget::use { args } {
variable includes

if {![llength $args]} {
BWidget::use aqua [expr {$::tcl_version >= 8.4
&& [string equal [tk windowingsystem] "aqua"]}]
return
}

set package [lindex $args 0]
set value   [lindex $args 1]
set force   [string equal [lindex $args 2] "-force"]
if {![string length $value]} { set value 1 }

if {$value && ($force || ![info exists includes($package)])} {
switch -- $package {
"aqua" {

}

"png" {
if {[catch { package require img::png } err]} {
if {[catch { package require tkpng } err]} {
return -code error "Could not find img::png or tkpng package to support PNG data"
} else {
set ::BWidget::imageFormat png
}
} else {
set ::BWidget::imageFormat PNG
}

if {![info exists ::BWidget::iconLibraryFile]} {
set ::BWidget::iconLibraryFile  [file join $::BWidget::imageDir BWidget.png.tkico]
}
}

"ttk" {
Widget::theme 1

variable ::BWidget::colors

foreach {opt val} [style configure .] {
switch -- $opt {
"-background" {
set colors(SystemButtonFace) $val
}

"-foreground" {
set colors(SystemWindowText) $val
}

"-selectbackground" {
set colors(SystemHighlight) $val
}

"-selectforeground" {
set colors(SystemHighlightText) $val
}

"-troughcolor" {
set colors(SystemScrollbar) $val
}
}
}
}
}
}

set includes($package) $value
return $value
}


proc BWidget::using { package } {
if {[info exists ::BWidget::includes($package)]} {
return $::BWidget::includes($package)
}
return 0
}


proc BWidget::globalexists { varName } {
return [uplevel \#0 [list info exists $varName]]
}


proc BWidget::setglobal { varName value } {
return [uplevel \#0 [list set $varName $value]]
}


proc BWidget::getglobal { varName } {
return [uplevel \#0 [list set $varName]]
}


proc BWidget::traceglobal { cmd varName args } {
return [uplevel \#0 [list trace $cmd $varName] $args]
}



proc BWidget::lreorder { list neworder } {
set pos     0
set newlist {}
foreach e $neworder {
if { [lsearch -exact $list $e] != -1 } {
lappend newlist $e
set tabelt($e)  1
}
}
set len [llength $newlist]
if { !$len } {
return $list
}
if { $len == [llength $list] } {
return $newlist
}
set pos 0
foreach e $list {
if { ![info exists tabelt($e)] } {
set newlist [linsert $newlist $pos $e]
}
incr pos
}
return $newlist
}


proc BWidget::lremove { list args } {
foreach elem $args {
set x [lsearch -exact $list $elem]
if {$x > -1} { set list [lreplace $list $x $x] }
}
return $list
}


proc BWidget::lassign { list args } {
foreach elem $list varName $args {
if {[string equal $varName ""]} { break }
uplevel 1 [list set $varName $elem]
}
}


proc BWidget::assert { exp {msg ""}} {
set res [uplevel 1 expr $exp]
if { !$res} {
if { $msg == "" } {
return -code error "Assertion failed: {$exp}"
} else {
return -code error $msg
}
}
}


proc BWidget::clonename { menu } {
set path     ""
set menupath ""
set found    0
foreach widget [lrange [split $menu "."] 1 end] {
if { $found || [winfo class "$path.$widget"] == "Menu" } {
set found 1
append menupath "#" $widget
append path "." $menupath
} else {
append menupath "#" $widget
append path "." $widget
}
}
return $path
}


proc BWidget::getname { name } {
if { [string length $name] } {
set text [option get . "${name}Name" ""]
if { [string length $text] } {
return [parsetext $text]
}
}
return {}
}


proc BWidget::parsetext { text } {
set result ""
set index  -1
set start  0
while { [string length $text] } {
set idx [string first "&" $text]
if { $idx == -1 } {
append result $text
set text ""
} else {
set char [string index $text [expr {$idx+1}]]
if { $char == "&" } {
append result [string range $text 0 $idx]
set    text   [string range $text [expr {$idx+2}] end]
set    start  [expr {$start+$idx+1}]
} else {
append result [string range $text 0 [expr {$idx-1}]]
set    text   [string range $text [expr {$idx+1}] end]
incr   start  $idx
set    index  $start
}
}
}
return [list $result $index]
}


proc BWidget::get3dcolor { path bgcolor {multiplier 0} {divideBy 100} } {
set fmt "#%04x%04x%04x"

if {$multiplier} {
foreach val [winfo rgb $path $bgcolor] {
lappend list [expr {$multiplier * $val / $divideBy}]
}
return [eval format $fmt $list]
}

if {[string equal $bgcolor "SystemButtonFace"]} {
lappend list System3dDarkShadow SystemButtonHighlight
lappend list SystemButtonShadow System3dLight
return $list
}

foreach val [winfo rgb $path $bgcolor] {
lappend dark  [expr {48 * $val / 100}]
lappend dark2 [expr {72 * $val / 100}]

set tmp1 [expr {14*$val/10}]
if { $tmp1 > 65535 } { set tmp1 65535 }

set tmp2 [expr {(65535+$val)/2}]
lappend light  [expr {($tmp1 > $tmp2) ? $tmp1:$tmp2}]

set tmp [expr {92 * $val / 90}]
lappend light2 [expr {($tmp > 65535) ? 65535 : $tmp}]
}

lappend list [eval format $fmt $dark]
lappend list [eval format $fmt $light]
lappend list [eval format $fmt $dark2]
lappend list [eval format $fmt $light2]

return $list
}


proc BWidget::color2hex { path color } {
if {[catch { winfo rgb $path $color } rgb]} {
return -code error "Invalid color '$color'"
}
foreach {r g b} $rgb { break }
return [format {#%4.4x%4.4x%4.4x} $r $g $b]
}


proc BWidget::getGradientColors { col1Str col2Str size {offset 0} } {
if {[catch { winfo rgb . $col1Str } color1]} {
return -code error "Invalid color '$col1Str'"
}

if {[catch { winfo rgb . $col2Str } color2]} {
return -code error "Invalid color '$col2Str'"
}

set max [expr {$size - $offset}]

foreach {r1 g1 b1} $color1 { break }
foreach {r2 g2 b2} $color2 { break }
set rRange [expr {double($r2) - $r1}]
set gRange [expr {double($g2) - $g1}]
set bRange [expr {double($b2) - $b1}]
set rRatio [expr {$rRange / $max}]
set gRatio [expr {$gRange / $max}]
set bRatio [expr {$bRange / $max}]

set colors [list]

for {set i 0} {$i < $offset} {incr i} {
lappend colors [format {#%4.4x%4.4x%4.4x} $r1 $g1 $b1]
}

for {set i 0} {$i < $max} {incr i} {
set nR [expr {int( $r1 + ($rRatio * $i) )}]
set nG [expr {int( $g1 + ($gRatio * $i) )}]
set nB [expr {int( $b1 + ($bRatio * $i) )}]
lappend colors [format {#%4.4x%4.4x%4.4x} $nR $nG $nB]
}

return $colors
}


proc BWidget::XLFDfont { cmd args } {
switch -- $cmd {
create {
set font "-*-*-*-*-*-*-*-*-*-*-*-*-*-*"
}
configure {
set font [lindex $args 0]
set args [lrange $args 1 end]
}
default {
return -code error "XLFDfont: command incorrect: $cmd"
}
}
set lfont [split $font "-"]
if { [llength $lfont] != 15 } {
return -code error "XLFDfont: description XLFD incorrect: $font"
}

foreach {option value} $args {
switch -- $option {
-foundry { set index 1 }
-family  { set index 2 }
-weight  { set index 3 }
-slant   { set index 4 }
-size    { set index 7 }
default  { return -code error "XLFDfont: option incorrect: $option" }
}
set lfont [lreplace $lfont $index $index $value]
}
return [join $lfont "-"]
}



proc BWidget::place { path w h args } {
update idletasks
if {$w == 0} { set w [winfo reqwidth  $path] }
if {$h == 0} { set h [winfo reqheight $path] }

set arglen [llength $args]
if { $arglen > 3 } {
return -code error "BWidget::place: bad number of argument"
}

if { $arglen > 0 } {
set where [lindex $args 0]
set list  [list "at" "center" "left" "right" "above" "below"]
set idx   [lsearch -exact $list $where]
if { $idx == -1 } {
return -code error [BWidget::badOptionString position $where $list]
}
if { $idx == 0 } { ## at
set err [catch {
set x [expr int([lindex $args 1])]
set y [expr int([lindex $args 2])]
}]
if { $err } {
return -code error "BWidget::place: incorrect position"
}
if {[string equal $::tcl_platform(platform) "windows"]} {
if {[string index [lindex $args 1] 0] != "-"} {
set x "+$x"
}
if {[string index [lindex $args 2] 0] != "-"} {
set y "+$y"
}
} else {
if { $x >= 0 } {
set x "+$x"
}
if { $y >= 0 } {
set y "+$y"
}
}
} else {
if { $arglen == 2 } {
set widget [lindex $args 1]
if { ![winfo exists $widget] } {
set msg "BWidget::place: \"$widget\" does not exist"
return -code error $msg
}
} else {
set widget .
}

set sw    [winfo screenwidth  $path]
set sh    [winfo screenheight $path]
set rootx [winfo rootx $widget]
set rooty [winfo rooty $widget]

if { $idx == 1 } { ## center
if { $arglen == 2 } {
set x0 [expr {$rootx + ([winfo width  $widget] - $w)/2}]
set y0 [expr {$rooty + ([winfo height $widget] - $h)/2}]
} else {
set x0 [expr {($sw - $w)/2 - [winfo vrootx $path]}]
set y0 [expr {($sh - $h)/2 - [winfo vrooty $path]}]
}
set x "+$x0"
set y "+$y0"
if {$::tcl_platform(platform) != "windows"} {
if { $x0+$w > $sw } {set x "-0"; set x0 [expr {$sw-$w}]}
if { $x0 < 0 }      {set x "+0"}
if { $y0+$h > $sh } {set y "-0"; set y0 [expr {$sh-$h}]}
if { $y0 < 0 }      {set y "+0"}
}
} else {
set x0 $rootx
set y0 $rooty
set x1 [expr {$x0 + [winfo width  $widget]}]
set y1 [expr {$y0 + [winfo height $widget]}]
if { $idx == 2 || $idx == 3 } { ## left or right
set y "+$y0"
if {$::tcl_platform(platform) != "windows"} {
if { $y0+$h > $sh } {set y "-0"; set y0 [expr {$sh-$h}]}
if { $y0 < 0 }      {set y "+0"}
}
if { $idx == 2 } {
if { $x0 >= $w } {
set x [expr {$x0-$sw}]
} elseif { $x1+$w <= $sw } {
set x "+$x1"
} else {
set x "+0"
}
} else {
if { $x1+$w <= $sw } {
set x "+$x1"
} elseif { $x0 >= $w } {
set x [expr {$x0-$sw}]
} else {
set x "-0"
}
}
} else { ## above or below
set x "+$x0"
if {[string equal $::tcl_platform(platform) "windows"]} {
if { $x0+$w > $sw } {set x "-0"; set x0 [expr {$sw-$w}]}
if { $x0 < 0 }      {set x "+0"}
}
if { $idx == 4 } {
if { $h <= $y0 } {
set y [expr {$y0-$sh}]
} elseif { $y1+$h <= $sh } {
set y "+$y1"
} else {
set y "+0"
}
} else {
if { $y1+$h <= $sh } {
set y "+$y1"
} elseif { $h <= $y0 } {
set y [expr {$y0-$sh}]
} else {
set y "-0"
}
}
}
}
}

if {[string is integer [string index $x 0]]} { set x +$x }
if {[string is integer [string index $y 0]]} { set y +$y }

wm geometry $path "${w}x${h}${x}${y}"
} else {
wm geometry $path "${w}x${h}"
}
update idletasks
}


proc BWidget::grab { option path } {
variable _gstack

if { $option == "release" } {
catch {::grab release $path}
while { [llength $_gstack] } {
set grinfo  [lindex $_gstack end]
set _gstack [lreplace $_gstack end end]
foreach {oldg mode} $grinfo {
if { ![string equal $oldg $path] && [winfo exists $oldg] } {
if { $mode == "global" } {
catch {::grab -global $oldg}
} else {
catch {::grab $oldg}
}
return
}
}
}
} else {
set oldg [::grab current]
if { $oldg != "" } {
lappend _gstack [list $oldg [::grab status $oldg]]
}
if { $option == "global" } {
::grab -global $path
} else {
::grab $path
}
}
}


proc BWidget::focus { option path {refocus 1} } {
variable _fstack

if { $option == "release" } {
while { [llength $_fstack] } {
set oldf [lindex $_fstack end]
set _fstack [lreplace $_fstack end end]
if { ![string equal $oldf $path] && [winfo exists $oldf] } {
if {$refocus} {catch {::focus -force $oldf}}
return
}
}
} elseif { $option == "set" } {
lappend _fstack [::focus]
::focus -force $path
}
}


proc BWidget::refocus {container component} {
if { [string equal $container [::focus]] } {
::focus $component
}
return
}


proc BWidget::SetFocusGrab {grab {focus {}}} {
variable _focusGrab
set index "$grab,$focus"

lappend _focusGrab($index) [::focus]
set oldGrab [::grab current $grab]
lappend _focusGrab($index) $oldGrab
if {[winfo exists $oldGrab]} {
lappend _focusGrab($index) [::grab status $oldGrab]
}
catch {::grab $grab}
if {[winfo exists $focus]} {
::focus $focus
}
}

proc BWidget::RestoreFocusGrab {grab focus {destroy destroy}} {
variable _focusGrab
set index "$grab,$focus"
if {[info exists _focusGrab($index)]} {
foreach {oldFocus oldGrab oldStatus} $_focusGrab($index) break
unset _focusGrab($index)
} else {
set oldGrab ""
}

catch {::focus $oldFocus}
::grab release $grab
if {[string equal $destroy "withdraw"]} {
wm withdraw $grab
} else {
::destroy $grab
}
if {[winfo exists $oldGrab] && [winfo ismapped $oldGrab]} {
if {[string equal $oldStatus "global"]} {
::grab -global $oldGrab
} else {
::grab $oldGrab
}
}
}

proc BWidget::badOptionString { type value list } {
set list [lsort $list]

set x [lsearch -exact $list "--"]
if {$x > -1} {
set list [lreplace $list $x $x]
lappend list --
}

set last [lindex $list end]
set list [lreplace $list end end]
set msg  "bad $type \"$value\": must be "

if {![llength $list]} {
append msg "$last"
} elseif {[llength $list] == 1} {
append msg "$list or $last"
} else {
append msg "[join $list ", "], or $last"
}

return $msg
}


proc BWidget::wrongNumArgsString { string } {
return "wrong # args: should be \"$string\""
}


proc BWidget::read_file { file } {
set fp [open $file]
set x  [read $fp [file size $file]]
close $fp
return $x
}


proc BWidget::classes { class } {
variable use

${class}::use
set classes [list $class]
if {![info exists use($class)]} { return }
foreach class $use($class) {
eval lappend classes [classes $class]
}
return [lsort -unique $classes]
}


proc BWidget::library { args } {
variable use

set exclude [list]
if {[set x [lsearch -exact $args "-exclude"]] > -1} {
set exclude [lindex $args [expr {$x + 1}]]
set args    [lreplace $args $x [expr {$x + 1}]]
}

set libs    [list widget init utils]
set classes [list]
foreach class $args {
${class}::use
foreach c [classes $class] {
if {[lsearch -exact $exclude $c] > -1} { continue }
lappend classes $c
}
}

eval lappend libs [lsort -unique $classes]

set library ""
foreach lib $libs {
if {![info exists use($lib,file)]} {
set file [file join $::BWIDGET::LIBRARY $lib.tcl]
} else {
set file [file join $::BWIDGET::LIBRARY $use($lib,file).tcl]
}
append library [read_file $file]
}

return $library
}


proc BWidget::inuse { class } {
variable ::Widget::_inuse

if {![info exists _inuse($class)]} { return 0 }
return [expr $_inuse($class) > 0]
}


proc BWidget::write { filename {mode w} } {
variable use

if {![info exists use(classes)]} { return }

set classes [list]
foreach class $use(classes) {
if {![inuse $class]} { continue }
lappend classes $class
}

set fp [open $filename $mode]
puts $fp [eval library $classes]
close $fp

return
}


proc BWidget::bindMouseWheel { widgetOrClass } {
bind $widgetOrClass <MouseWheel>         {
if {![string equal [%W yview] "0 1"]} {
%W yview scroll [expr {-%D/24}]  units
}
}

bind $widgetOrClass <Shift-MouseWheel>   {
if {![string equal [%W yview] "0 1"]} {
%W yview scroll [expr {-%D/120}] pages
}
}

bind $widgetOrClass <Control-MouseWheel> {
if {![string equal [%W yview] "0 1"]} {
%W yview scroll [expr {-%D/120}] units
}
}

bind $widgetOrClass <Button-4> {event generate %W <MouseWheel> -delta  120}
bind $widgetOrClass <Button-5> {event generate %W <MouseWheel> -delta -120}
}


proc BWidget::Icon { name } {
if {![Widget::exists $::BWidget::iconLibrary]} {
BWidget::LoadBWidgetIconLibrary
}

return [$::BWidget::iconLibrary image $name]
}


proc BWidget::LoadBWidgetIconLibrary {} {
if {![Widget::exists $::BWidget::iconLibrary]} {
IconLibrary $::BWidget::iconLibrary -file $::BWidget::iconLibraryFile
}
}


proc BWidget::CreateImage { gifdata pngdata args } {
lappend args -format $::BWidget::imageFormat
if {[BWidget::using png]} {
lappend args -data $pngdata
} else {
lappend args -data $gifdata
}

return [eval image create photo $args]
}


proc BWidget::ParseArgs { _arrayName _arglist args } {
upvar 1 $_arrayName array

array set _args {
-strict     0
-options    {}
-switches   {}
-required   {}
-nocomplain 0
}
array set _args $args
if {[info exists _args(-errorvar)]} { upvar 1 $_args(-errorvar) error }

set switches $_args(-switches)
foreach switch $switches {
set array([string range $switch 1 end]) 0
}

set options [list]
foreach opt $_args(-options) {
set option $opt
if {[llength $opt] == 2} {
set option [lindex $opt 0]
set array([string range $option 1 end]) [lindex $opt 1]
}
lappend options $option
}

set array(OPTIONS)  [list]
set array(SWITCHES) [list]

set oplen   [llength $options]
set swlen   [llength $switches]
set index   0
set waiting 0
foreach arg $_arglist {
switch -glob -- $arg {
"--" {
incr index
break
}

"-*" {
if {$waiting} {
set waiting 0
set array($option) $arg
lappend array(OPTIONS) -$option $arg
continue
}

if {$swlen && [lsearch -exact $switches $arg] > -1} {
lappend array(SWITCHES) $arg
set array([string range $arg 1 end]) 1
} elseif {$oplen && [lsearch -exact $options $arg] < 0} {
if {$_args(-nocomplain)} { return 0 }
return -code error "unknown option \"$arg\""
} elseif {$_args(-strict)} {
set switches [concat -- $_args(-switches)]
set msg [BWidget::badOptionString option $arg $switches]
return -code error $msg
} else {
set waiting 1
set option [string range $arg 1 end]
}
}

default {
if {$waiting} {
set waiting 0
set array($option) $arg
lappend array(OPTIONS) -$option $arg
} else {
break
}
}
}

incr index
}

set array(_ARGS_) [lrange $_arglist $index end]

if {[llength $_args(-required)]} {
foreach arg [lsort -dict $_args(-required)] {
if {![info exists array([string range $arg 1 end])]} {
return -code error "missing required argument $arg"
}
}
}

return 1
}


proc BWidget::CopyBindings { from to } {
foreach event [bind $from] {
bind $to $event [bind $from $event]
}
}


proc BWidget::DrawCanvasBorder { canvas relief color coords args } {
lassign $coords x0 y0 x1 y1
lassign [BWidget::get3dcolor $canvas $color] dark light dark2 light2

switch -- $relief {
"raised" - "sunken" {
lappend lines [list $x0 $y1 $x0 $y0 $x1 $y0]
lappend lines [list $x1 $y0 $x1 $y1 $x0 $y1]
lappend lines [list  [expr {$x0 + 1}] [expr {$y1 - 2}]  [expr {$x0 + 1}] [expr {$y0 + 1}]  [expr {$x1 - 1}] [expr {$y0 + 1}]]
lappend lines [list  [expr {$x0 + 1}] [expr {$y1 - 1}]  [expr {$x1 - 1}] [expr {$y1 - 1}]  [expr {$x1 - 1}] $y0]

set colors [list $light $dark $light2 $dark2]
if {[string equal $relief "sunken"]} {
set colors [list $dark $light $dark2 $light2]
}
}

"groove" - "ridge" {
lappend lines [list  $x0 $y1  $x1 $y1  $x1 $y0  $x1 [expr {$y0 + 1}]  [expr {$x0 + 1}] [expr {$y0 + 1}]  [expr {$x0 + 1}] $y1  ]

lappend lines [list  $x0 $y0  [expr {$x1 - 1}] $y0  [expr {$x1 - 1}] [expr {$y1 - 1}]  $x0 [expr {$y1 - 1}]  $x0 $y0  ]

set colors [list $light $dark2]
if {[string equal $relief "ridge"]} {
set colors [list $dark2 $light]
}
}

"rounded" {
set coords [list  [expr {$x0 + 1}] $y0  [expr {$x1 - 1}] $y0  $x1 [expr {$y0 + 1}]  $x1 [expr {$y1 - 1}]  [expr {$x1 - 1}] $y1  [expr {$x0 + 1}] $y1  $x0 [expr {$y1 - 1}]  $x0 [expr {$y0 + 1}]  [expr {$x0 + 1}] $y0  ]

set opts [list -outline $dark2 -fill $color]
eval [list $canvas create poly $coords] $opts $args

return
}

"highlight" {
set opts [list -outline $dark -fill $light]
eval [list $canvas create rect $coords] $opts $args

set coords [list [incr x0] [incr y0] [incr x1 -1] [incr y1 -1]]
eval [list $canvas create rect $coords -outline $dark2] $args

return
}
}

foreach line $lines color $colors {
eval [list $canvas create line $line -fill $color] $args
}
}

proc ::BWidget::FadeWindowIn { top {increment 0.08} {current 0} } {
if {[tk windowingsystem] eq "x11"
|| ![package vsatisfies [info patchlevel] 8.4.8]} {
wm deiconify $top
return
}

if {$current == 0} {
wm attributes $top -alpha [set current 0.01]
wm deiconify $top
}

set current [expr {$current + $increment}]

if {$current < 1.0} {
wm attributes $top -alpha $current
update idletasks

after 10 [list BWidget::FadeWindowIn $increment $current]
} else {
wm attributes $top -alpha 0.99999
}
}

proc ::BWidget::FadeWindowOut { top {destroy 0} {increment 0.08} {current 0} } {
if {![winfo exists $top]} { return }

if {[tk windowingsystem] eq "x11"
|| ![package vsatisfies [info patchlevel] 8.4.8]} {
if {$destroy} {
destroy $top
} else {
wm withdraw $top
}
return
}

if {$current == 0} {
set current [wm attributes $top -alpha]
}

set current [expr {$current - $increment}]

if {$current >= .01} {
wm attributes $top -alpha $current
update idletasks

after 10 [list BWidget::FadeWindowOut $top $destroy $increment $current]
} else {
if {$destroy} {
destroy $top
} else {
wm withdraw   $top
wm attributes $top -alpha 0.99999
}
}
}


if {[info exists ::InstallJammer]} { return }

namespace eval ::BWIDGET {
variable LIBRARY [file join $::installkit::root lib InstallJammer]
}

proc BWidgetInit {} {
set ::BWidget::imageDir $::BWIDGET::LIBRARY
set ::BWidget::iconLibraryFile [file join $::BWIDGET::LIBRARY icons.tkico]

BWidget::use ttk
BWidget::use png
}

namespace eval DragSite    { proc use {} {} }
namespace eval DropSite    { proc use {} {} }
namespace eval DynamicHelp { proc use {} {} }

proc DragSite::include { class type event } {
set dragoptions [list  [list	-dragenabled	Boolean	0	0]  [list	-draginitcmd	String	""	0]  [list	-dragendcmd	String	""	0]  [list	-dragtype	String	$type	0]  [list	-dragevent	Enum	$event	0	[list 1 2 3]]  ]
Widget::declare $class $dragoptions
}
proc DragSite::setdrag {args} { }

proc DropSite::include { class types } {
set dropoptions [list  [list	-dropenabled	Boolean	0	0]  [list	-dropovercmd	String	""	0]  [list	-dropcmd	String	""	0]  [list	-droptypes	String	$types	0]  ]
Widget::declare $class $dropoptions
}

proc DynamicHelp::include { class type } {
set helpoptions [list  [list -helptext String "" 0]  [list -helpvar  String "" 0]  [list -helptype Enum $type 0 [list balloon variable]]  ]
Widget::declare $class $helpoptions
}

proc DropSite::setdrop    { args } { }
proc DropSite::setcursor  { args } { }
proc DynamicHelp::sethelp { args } { }

package provide BWidget 1.8

BWidgetInit
if {[string equal $::tcl_platform(platform) "windows"]} {
option add *ListBox.background      SystemWindow            widgetDefault
option add *ButtonBox.padY          0                       widgetDefault
option add *Dialog.padY             0                       widgetDefault
} elseif {[tk windowingsystem] eq "aqua"} {

} else {
option add *Scrollbar.width         12                      widgetDefault
option add *Scrollbar.borderWidth   1                       widgetDefault
option add *Dialog.separator        1                       widgetDefault
option add *MainFrame.relief        raised                  widgetDefault
option add *MainFrame.separator     none                    widgetDefault
option add *MessageDlg.usenative    0                       widgetDefault
}

option read [file join $::BWIDGET::LIBRARY lang en.rc]

bind Entry   <<TraverseIn>> { %W selection range 0 end; %W icursor end }
bind Spinbox <<TraverseIn>> { %W selection range 0 end; %W icursor end }

bind all <Key-Tab>       { Widget::traverseTo [Widget::focusNext %W] }
bind all <<PrevWindow>>  { Widget::traverseTo [Widget::focusPrev %W] }

namespace eval ::BWidget {
variable library     $::BWIDGET::LIBRARY
variable langDir     [file join $library lang]
variable imageDir    [file join $library images]
variable imageFormat GIF

variable iconLibrary
if {![info exists iconLibrary]} {
set iconLibrary BWidgetIcons
}

variable iconLibraryFile
if {![info exists iconLibraryFile]} {
set iconLibraryFile [file join $imageDir BWidget.gif.tkico]
}

variable colors
if {[string equal $::tcl_platform(platform) "windows"]} {
array set colors {
SystemButtonFace    SystemButtonFace
SystemButtonText    SystemButtonText
SystemDisabledText  SystemDisabledText
SystemHighlight     SystemHighlight
SystemHighlightText SystemHighlightText
SystemMenu          SystemMenu
SystemMenuText      SystemMenuText
SystemScrollbar     SystemScrollbar
SystemWindow        SystemWindow
SystemWindowFrame   SystemWindowFrame
SystemWindowText    SystemWindowText
}
} else {
array set colors {
SystemButtonFace    #d9d9d9
SystemButtonText    black
SystemDisabledText  #a3a3a3
SystemHighlight     #c3c3c3
SystemHighlightText white
SystemMenu          #d9d9d9
SystemMenuText      white
SystemScrollbar     #d9d9d9
SystemWindow        white
SystemWindowFrame   #d9d9d9
SystemWindowText    black
}
}

if {[lsearch -exact [font names] "TkTextFont"] < 0} {
catch {font create TkTextFont}
catch {font create TkDefaultFont}
catch {font create TkHeadingFont}
catch {font create TkCaptionFont}
catch {font create TkTooltipFont}

switch -- [tk windowingsystem] {
win32 {
if {$::tcl_platform(osVersion) >= 5.0} {
variable family "Tahoma"
} else {
variable family "MS Sans Serif"
}
variable size 8

font configure TkDefaultFont -family $family -size $size
font configure TkTextFont    -family $family -size $size
font configure TkHeadingFont -family $family -size $size
font configure TkCaptionFont -family $family -size $size  -weight bold
font configure TkTooltipFont -family $family -size $size
}

classic - aqua {
variable family "Lucida Grande"
variable size 13
variable viewsize 12
variable smallsize 11

font configure TkDefaultFont -family $family -size $size
font configure TkTextFont    -family $family -size $size
font configure TkHeadingFont -family $family -size $smallsize
font configure TkCaptionFont -family $family -size $size  -weight bold
font configure TkTooltipFont -family $family -size $viewsize
}

x11 {
if {![catch {tk::pkgconfig get fontsystem} fs]
&& [string equal $fs "xft"]} {
variable family "sans-serif"
} else {
variable family "Helvetica"
}
variable size -12
variable ttsize -10
variable capsize -14

font configure TkDefaultFont -family $family -size $size
font configure TkTextFont    -family $family -size $size
font configure TkHeadingFont -family $family -size $size  -weight bold
font configure TkCaptionFont -family $family -size $capsize  -weight bold
font configure TkTooltipFont -family $family -size $ttsize
}
}
}
} ; ## namespace eval ::BWidget


namespace eval Label {
Widget::define Label label DragSite DropSite DynamicHelp

Widget::tkinclude Label label .l  remove { -foreground -state -text -textvariable -underline }

Widget::declare Label {
{-name               String     ""     0}
{-text               String     ""     0}
{-textvariable       String     ""     0}
{-underline          Int        -1     0 "%d >= -1"}
{-focus              String     ""     0}
{-foreground         Color      "SystemButtonText"       0}
{-disabledforeground Color      "SystemDisabledText"     0}
{-state              Enum       normal 0  {normal disabled}}

{-autowrap           Boolean    "0"    1}
{-wrappadx           Int        "10"   0}

{-elide              Boolean    "0"    1}
{-ellipsis           String     "..."  0}
{-elidepadx          Int        "5"    0}
{-elideside          Enum       "right" 0 {center left right}}

{-fg                 Synonym    -foreground}
}

DynamicHelp::include Label balloon
DragSite::include    Label "" 1
DropSite::include    Label {
TEXT    {move {}}
IMAGE   {move {}}
BITMAP  {move {}}
FGCOLOR {move {}}
BGCOLOR {move {}}
COLOR   {move {}}
}

Widget::syncoptions Label "" .l {-text {} -underline {}}

bind BwLabel <FocusIn>   [list Label::setfocus %W]
bind BwLabel <Destroy>   [list Label::_destroy %W]
}


proc Label::create { path args } {
Widget::initArgs Label $args maps

frame $path -class Label -borderwidth 0 -highlightthickness 0 -relief flat
Widget::initFromODB Label $path $maps(Label)

Widget::getVariable $path data

set data(width) 0

eval [list label $path.l] $maps(.l)

if {[string equal [Widget::cget $path -state] "normal"]} {
set fg [Widget::cget $path -foreground]
} else {
set fg [Widget::cget $path -disabledforeground]
}

set var [Widget::cget $path -textvariable]
if {$var == ""
&& [Widget::cget $path -image] == ""
&& [Widget::cget $path -bitmap] == ""} {
set desc [BWidget::getname [Widget::cget $path -name]]
if {[string length $desc]} {
set text  [lindex $desc 0]
set under [lindex $desc 1]
} else {
set text  [Widget::cget $path -text]
set under [Widget::cget $path -underline]
}
} else {
set under -1
set text  ""
}

$path.l configure -text $text -underline $under -foreground $fg

set accel [string tolower [string index $text $under]]
if {[string length $accel]} {
bind [winfo toplevel $path] <Alt-$accel> [list Label::setfocus $path]
}

bindtags $path   [list BwLabel [winfo toplevel $path] all]
bindtags $path.l [list $path.l $path Label [winfo toplevel $path] all]
pack $path.l -expand yes -fill both

set dragendcmd [Widget::cget $path -dragendcmd]
DragSite::setdrag $path $path.l Label::_init_drag_cmd $dragendcmd 1
DropSite::setdrop $path $path.l Label::_over_cmd Label::_drop_cmd 1
DynamicHelp::sethelp $path $path.l 1

if {[string length $var]} {
upvar #0 $var textvar
_trace_variable $path
if {![info exists textvar]} {
set textvar [Widget::getoption $path -text]
} else {
_update_textvariable $path "" "" write
}
}

if {[Widget::getoption $path -elide]
|| [Widget::getoption $path -autowrap]} {
bind $path.l <Configure> [list Label::_redraw $path %w]
}

return [Widget::create Label $path]
}


proc Label::configure { path args } {
set oldunder [$path.l cget -underline]
if {$oldunder != -1} {
set oldaccel [string index [$path.l cget -text] $oldunder]
set oldaccel [string tolower $oldaccel]
} else {
set oldaccel ""
}

set oldvar [$path.l cget -textvariable]

set res [Widget::configure $path $args]

set cfg  [Widget::hasChanged $path -foreground fg]
set cdfg [Widget::hasChanged $path -disabledforeground dfg]
set cst  [Widget::hasChanged $path -state state]

if { $cst || $cfg || $cdfg } {
if { $state == "normal" } {
$path.l configure -fg $fg
} else {
$path.l configure -fg $dfg
}
}

set cv [Widget::hasChanged $path -textvariable var]
set cb [Widget::hasChanged $path -image img]
set ci [Widget::hasChanged $path -bitmap bmp]
set cn [Widget::hasChanged $path -name name]
set ct [Widget::hasChanged $path -text text]
set cu [Widget::hasChanged $path -underline under]

if { $cv || $cb || $ci || $cn || $ct || $cu } {
if {  $var == "" && $img == "" && $bmp == "" } {
set desc [BWidget::getname $name]
if { $desc != "" } {
set text  [lindex $desc 0]
set under [lindex $desc 1]
}
} else {
set under -1
set text  ""
}
set top [winfo toplevel $path]
if { $oldaccel != "" } {
bind $top <Alt-$oldaccel> {}
}
set accel [string tolower [string index $text $under]]
if { $accel != "" } {
bind $top <Alt-$accel> [list Label::setfocus $path]
}
$path.l configure -text $text -underline $under -textvariable $var
}

if {$cv} {
if {[string length $oldvar]} {
trace remove variable $oldvar [list write unset]  [list Label::_update_textvariable $path]
}

_trace_variable $path
}

if {$ct && [Widget::getoption $path -elide]} {
_redraw $path [winfo width $path]
}

set force [Widget::hasChanged $path -dragendcmd dragend]
DragSite::setdrag $path $path.l Label::_init_drag_cmd $dragend $force
DropSite::setdrop $path $path.l Label::_over_cmd Label::_drop_cmd
DynamicHelp::sethelp $path $path.l

return $res
}


proc Label::cget { path option } {
return [Widget::cget $path $option]
}


proc Label::setfocus { path } {
if {[string equal [Widget::cget $path -state] "normal"]} {
set w [Widget::cget $path -focus]
if { [winfo exists $w] && [Widget::focusOK $w] } {
focus $w
}
}
}


proc Label::_init_drag_cmd { path X Y top } {
set path [winfo parent $path]
if {[set cmd [Widget::cget $path -draginitcmd]] != ""} {
return [uplevel \#0 $cmd [list $path $X $Y $top]]
}
if { [set data [$path.l cget -image]] != "" } {
set type "IMAGE"
pack [label $top.l -image $data]
} elseif { [set data [$path.l cget -bitmap]] != "" } {
set type "BITMAP"
pack [label $top.l -bitmap $data]
} else {
set data [$path.l cget -text]
set type "TEXT"
}
set usertype [Widget::getoption $path -dragtype]
if { $usertype != "" } {
set type $usertype
}
return [list $type {copy} $data]
}


proc Label::_drop_cmd { path source X Y op type data } {
set path [winfo parent $path]
if {[set cmd [Widget::cget $path -dropcmd]] != ""} {
return [uplevel \#0 $cmd [list $path $source $X $Y $op $type $data]]
}
if { $type == "COLOR" || $type == "FGCOLOR" } {
configure $path -foreground $data
} elseif { $type == "BGCOLOR" } {
configure $path -background $data
} else {
set text   ""
set image  ""
set bitmap ""
switch -- $type {
IMAGE   {set image $data}
BITMAP  {set bitmap $data}
default {
set text $data
if { [set var [$path.l cget -textvariable]] != "" } {
configure $path -image "" -bitmap ""
BWidget::setglobal $var $data
return
}
}
}
configure $path -text $text -image $image -bitmap $bitmap
}
return 1
}


proc Label::_over_cmd { path source event X Y op type data } {
set path [winfo parent $path]
if { [set cmd [Widget::cget $path -dropovercmd]] != "" } {
set opts [list $path $source $event $X $Y $op $type $data]
return [uplevel \#0 $cmd $opts]
}
if {[Widget::getoption $path -state] == "normal" ||
$type == "COLOR" || $type == "FGCOLOR" || $type == "BGCOLOR"} {
DropSite::setcursor based_arrow_down
return 1
}
DropSite::setcursor dot
return 0
}


proc Label::_redraw { path width } {
Widget::getVariable $path data

if {$width == $data(width)} { return }

if {[Widget::getoption $path -autowrap]} {
set padx [Widget::getoption $path -wrappadx]
$path.l configure -wraplength [expr {$width - $padx}]
} elseif {[Widget::getoption $path -elide]} {
set font     [$path.l cget -font]
set text     [Widget::getoption $path -text]
set side     [Widget::getoption $path -elideside]
set ellipsis [Widget::getoption $path -ellipsis]

set bd    [$path.l cget -bd]
set padx  [$path.l cget -padx]
set epadx [Widget::getoption $path -elidepadx]
set width [expr {($width - (($bd + $padx) * 2)) - $epadx}]

if {$width > 0} {
set string $text
while {[font measure $font $string] > $width} {
switch -- $side {
"left"   {
set text   [string range $text 1 end]
set string $ellipsis$text
}

"right"  {
set text   [string range $text 0 end-1]
set string $text$ellipsis
}

"center" {
set x [expr {[string length $text] / 2}]
set l [string range $text 0 $x]
set r [string range $text [incr x 2] end]
set text   $l$r
set string $l$ellipsis$r
}
}

if {![string length $text]} { break }
}

$path.l configure -text $string
}
}

set data(width) [winfo reqwidth $path.l]
}


proc Label::_trace_variable { path } {
set varName [Widget::getoption $path -textvariable]

if {[string length $varName]} {
set ops     [list write unset]
set command [list Label::_update_textvariable $path]

uplevel #0 [list trace add variable $varName $ops $command]
}
}


proc Label::_update_textvariable { path name1 name2 op } {
set varName [Widget::getoption $path -textvariable]
upvar #0 $varName var

switch -- $op {
"write" {
Widget::setoption $path -text $var

$path.l configure -text $var

_redraw $path [winfo width $path]
}

"unset" {
set var [Widget::getoption $path -text]
_trace_variable $path
}
}
}


proc Label::_destroy { path } {
set ops     [list write unset]
set cmd     [list Label::_update_textvariable $path]
set varName [Widget::getoption $path -textvariable]

uplevel #0 [list trace remove variable $varName $ops $cmd]

Widget::destroy $path
}


namespace eval Tree {
Widget::define Tree tree DragSite DropSite DynamicHelp

namespace eval Node {
Widget::declare Tree::Node {
{-text       String     ""      0}
{-font       String     ""      0}
{-image      String     ""      0}
{-window     String     ""      0}
{-fill       Color      "SystemButtonText"   0}
{-data       String     ""      0}
{-open       Boolean    0       0}
{-selectable Boolean    1       0}
{-drawcross  Enum       auto    0 {auto allways never}}
{-padx       Int        -1      0 "%d >= -1"}
{-deltax     Int        -1      0 "%d >= -1"}
{-anchor     String     "w"     0 ""}
}
}

DynamicHelp::include Tree::Node balloon

Widget::tkinclude Tree canvas .c  remove {
-insertwidth -insertbackground -insertborderwidth -insertofftime
-insertontime -selectborderwidth -closeenough -confine -scrollregion
-xscrollincrement -yscrollincrement -width -height
} initialize {
-background white -relief sunken -borderwidth 2
-takefocus 1 -highlightthickness 1 -width 200
}

DragSite::include Tree "TREE_NODE" 1
DropSite::include Tree {
TREE_NODE {copy {} move {}}
}

Widget::declare Tree {
{-deltax            Int        10       0 "%d >= 0"}
{-deltay            Int        15       0 "%d >= 0"}
{-padx              Int        20       0 "%d >= 0"}
{-font              String     "TkTextFont" 0}
{-background        Color      "SystemWindow"  0}
{-selectbackground  Color      "SystemHighlight"  0}
{-selectforeground  Color      "SystemHighlightText" 0}
{-selectcommand     String     ""       0}
{-selectmode        Enum       "single" 0 {extended none single}}
{-width             TkResource ""       0 listbox}
{-height            TkResource ""       0 listbox}
{-selectfill        Boolean    0        0}
{-showlines         Boolean    1        0}
{-linesfill         Color      "SystemButtonText"  0}
{-linestipple       TkResource ""       0 {label -bitmap}}
{-crossfill         Color      "SystemButtonText"  0}
{-redraw            Boolean    1        0}
{-opencmd           String     ""       0}
{-closecmd          String     ""       0}
{-dropovermode      Flag       "wpn"    0 "wpn"}
{-dropcmd           String     "Tree::_drag_and_drop" 0}

{-crossopenimage    String     ""       0}
{-crosscloseimage   String     ""       0}
{-crossopenbitmap   String     ""       0}
{-crossclosebitmap  String     ""       0}

{-bg                Synonym    -background}
}

Widget::addmap Tree "" .c { -deltay -yscrollincrement }

bind Tree <FocusIn>   [list after idle {BWidget::refocus %W %W.c}]
bind Tree <Destroy>   [list Tree::_destroy %W]
bind Tree <Configure> [list Tree::_update_scrollregion %W]

bind TreeSentinalStart <Button-1> {
if {$::Tree::sentinal(%W)} {
set ::Tree::sentinal(%W) 0
break
}
}

bind TreeSentinalEnd <Button-1> {
set ::Tree::sentinal(%W) 0
}

bind TreeFocus <Button-1> [list focus %W]

BWidget::bindMouseWheel TreeCanvas

variable _edit
set _edit(editing) 0
}


proc Tree::create { path args } {
Widget::initArgs Tree $args maps

eval [list frame $path -class Tree] $maps(:cmd)

if {[info tclversion] > 8.3} { $path configure -padx 0 -pady 0 }

Widget::initFromODB Tree $path $maps(Tree)

set ::Tree::sentinal($path.c) 0

Widget::getVariable $path data

set data(root)         [list [list]]
set data(selnodes)     [list]
set data(upd,level)    0
set data(upd,nodes)    [list]
set data(upd,afterid)  ""
set data(dnd,scroll)   ""
set data(dnd,afterid)  ""
set data(dnd,selnodes) [list]
set data(dnd,node)     ""

Widget::getVariable $path items

eval [list canvas $path.c] $maps(.c) -xscrollincrement 8
bindtags $path.c [list TreeSentinalStart TreeFocus $path.c Canvas  TreeCanvas [winfo toplevel $path] all TreeSentinalEnd]
pack $path.c -expand yes -fill both
$path.c bind cross <ButtonPress-1> [list Tree::_cross_event $path]

bind $path.c <KeyPress-Up>    [list Tree::_keynav up $path]
bind $path.c <KeyPress-Down>  [list Tree::_keynav down $path]
bind $path.c <KeyPress-Right> [list Tree::_keynav right $path]
bind $path.c <KeyPress-Left>  [list Tree::_keynav left $path]
bind $path.c <KeyPress-space> [list +Tree::_keynav space $path]

bind $path.c <Control-KeyPress-Up>    [list $path.c yview scroll -1 units]
bind $path.c <Control-KeyPress-Down>  [list $path.c yview scroll  1 units]
bind $path.c <Control-KeyPress-Left>  [list $path.c xview scroll -1 units]
bind $path.c <Control-KeyPress-Right> [list $path.c xview scroll  1 units]

DragSite::setdrag $path $path.c Tree::_init_drag_cmd  [Widget::cget $path -dragendcmd] 1
DropSite::setdrop $path $path.c Tree::_over_cmd Tree::_drop_cmd 1

Widget::create Tree $path

set w [Widget::cget $path -width]
set h [Widget::cget $path -height]
set dy [Widget::cget $path -deltay]
$path.c configure -width [expr {$w*8}] -height [expr {$h*$dy}]

set mode [Widget::getoption $path -selectmode]
if {$mode ne "none"} {
Tree::bindText  $path <Double-1> [list $path toggle]
Tree::bindImage $path <Double-1> [list $path toggle]
Tree::bindText  $path <Button-1> [list $path selection set]
Tree::bindImage $path <Button-1> [list $path selection set]
}

if {$mode eq "extended"} {
Tree::bindText  $path <Control-Button-1> [list $path selection toggle]
Tree::bindImage $path <Control-Button-1> [list $path selection toggle]
}

$path.c bind TreeItemSentinal <Double-Button-1>  [list set ::Tree::sentinal($path.c) 1]


set image  [Widget::getoption $path -crossopenimage]
set bitmap [Widget::getoption $path -crossopenbitmap]
if {![string length $image] && ![string length $bitmap]} {
Widget::setoption $path -crossopenimage [BWidget::Icon tree-minus]
}

set image  [Widget::getoption $path -crosscloseimage]
set bitmap [Widget::getoption $path -crossclosebitmap]
if {![string length $image] && ![string length $bitmap]} {
Widget::setoption $path -crosscloseimage [BWidget::Icon tree-plus]
}

return $path
}


proc Tree::configure { path args } {
Widget::getVariable $path data

set res [Widget::configure $path $args]

set ch1 [expr {[Widget::hasChanged $path -deltax val]
|| [Widget::hasChanged $path -deltay dy]
|| [Widget::hasChanged $path -padx val]
|| [Widget::hasChanged $path -showlines val]
|| [Widget::hasChanged $path -font font]}]

set ch2 [expr {[Widget::hasChanged $path -selectbackground val] |
[Widget::hasChanged $path -selectforeground val]}]

if {[Widget::hasChanged $path -linesfill fill]
|| [Widget::hasChanged $path -linestipple stipple] } {
$path.c itemconfigure line  -fill $fill -stipple $stipple
}

if {[Widget::hasChanged $path -crossfill fill]} {
$path.c itemconfigure cross -foreground $fill
}

if {[Widget::hasChanged $path -selectfill fill]} {
if {$fill} {
foreach event [$path.c bind "node"] {
$path.c bind "box" $event [$path.c bind "node" $event]
}
} else {
foreach event [$path.c bind "node"] {
$path.c bind "box" $event {}
}
}
}

if { $ch1 } {
_redraw_idle $path 3
} elseif { $ch2 } {
_redraw_idle $path 1
}

if { [Widget::hasChanged $path -height h] } {
$path.c configure -height [expr {$h*$dy}]
}
if { [Widget::hasChanged $path -width w] } {
$path.c configure -width [expr {$w*8}]
}

if { [Widget::hasChanged $path -redraw bool] && $bool } {
set upd $data(upd,level)
set data(upd,level) 0
_redraw_idle $path $upd
}

set force [Widget::hasChanged $path -dragendcmd dragend]
DragSite::setdrag $path $path.c Tree::_init_drag_cmd $dragend $force
DropSite::setdrop $path $path.c Tree::_over_cmd Tree::_drop_cmd

return $res
}


proc Tree::cget { path option } {
return [Widget::cget $path $option]
}


proc Tree::insert { path index parent node args } {
Widget::getVariable $path data

set node [_node_name $path $node]
set node [Widget::nextIndex $path $node]

if {[info exists data($node)]} {
return -code error "node \"$node\" already exists"
}

if {![info exists data($parent)]} {
return -code error "node \"$parent\" does not exist"
}

Widget::init Tree::Node $path.$node $args

if {[string equal $index "end"]} {
lappend data($parent) $node
} else {
set data($parent) [linsert $data($parent) [incr index] $node]
}
set data($node) [list $parent]

if {[string equal $parent "root"]} {
_redraw_idle $path 3
} elseif {[Tree::visible $path $parent]} {
if {[Widget::getoption $path.$parent -open]} {
_redraw_idle $path 3
} else {
lappend data(upd,nodes) $parent 8
_redraw_idle $path 2
}
}

return $node
}


proc Tree::itemconfigure { path node args } {
Widget::getVariable $path data

set node [_node_name $path $node]
if {[string equal $node "root"] || ![info exists data($node)]} {
return -code error "node \"$node\" does not exist"
}

set result [Widget::configure $path.$node $args]

_set_help $path $node

if { [visible $path $node] } {
set lopt   {}
set flag   0
foreach opt {-window -image -drawcross -font -text -fill} {
set flag [expr {$flag << 1}]
if {[Widget::hasChanged $path.$node $opt val]} {
set flag [expr {$flag | 1}]
}
}

if {[Widget::hasChanged $path.$node -open val]} {
if {[llength $data($node)] > 1} {
_redraw_idle $path 3
} else {
set flag [expr {$flag | 8}]
}
}

if {$data(upd,level) < 3 && [Widget::hasChanged $path.$node -padx x]} {
_redraw_idle $path 3
}

if { $data(upd,level) < 3 && $flag } {
if { [set idx [lsearch -exact $data(upd,nodes) $node]] == -1 } {
lappend data(upd,nodes) $node $flag
} else {
incr idx
set flag [expr {[lindex $data(upd,nodes) $idx] | $flag}]
set data(upd,nodes) [lreplace $data(upd,nodes) $idx $idx $flag]
}
_redraw_idle $path 2
}
}
return $result
}


proc Tree::itemcget { path node option } {
Widget::getVariable $path data
set node [_node_name $path $node]
if {[string equal $node "root"] || ![info exists data($node)]} {
return -code error "node \"$node\" does not exist"
}

return [Widget::cget $path.$node $option]
}


proc Tree::bindText { path event script } {
if {[string length $script]} {
append script " \[Tree::_get_node_name [list $path] current 2\]"
}
$path.c bind "node" $event $script
if {[Widget::getoption $path -selectfill]} {
$path.c bind "box" $event $script
} else {
$path.c bind "box" $event {}
}
}


proc Tree::bindImage { path event script } {
if {[string length $script]} {
append script " \[Tree::_get_node_name [list $path] current 2\]"
}
$path.c bind "img" $event $script
if {[Widget::getoption $path -selectfill]} {
$path.c bind "box" $event $script
} else {
$path.c bind "box" $event {}
}
}


proc Tree::bindTree { path args } {
return [eval [list bind $path.c] $args]
}


proc Tree::clear { path } {
eval [list Tree::delete $path] [Tree::nodes $path root]
}


proc Tree::delete { path args } {
Widget::getVariable $path data

foreach lnodes $args {
foreach node $lnodes {
set node [_node_name $path $node]
if { ![string equal $node "root"] && [info exists data($node)] } {
set parent [lindex $data($node) 0]
set idx	   [lsearch -exact $data($parent) $node]
set data($parent) [lreplace $data($parent) $idx $idx]
_subdelete $path [list $node]
}
}
}

_redraw_idle $path 3
}


proc Tree::move { path parent node index } {
Widget::getVariable $path data

set node [_node_name $path $node]
if { [string equal $node "root"] || ![info exists data($node)] } {
return -code error "node \"$node\" does not exist"
}
if { ![info exists data($parent)] } {
return -code error "node \"$parent\" does not exist"
}
set p $parent
while {![string equal $p "root"]} {
if {[string equal $p $node]} {
return -code error "node \"$parent\" is a descendant of \"$node\""
}
set p [Tree::parent $path $p]
}

set oldp        [lindex $data($node) 0]
set idx         [lsearch -exact $data($oldp) $node]
set data($oldp) [lreplace $data($oldp) $idx $idx]
set data($node) [concat [list $parent] [lrange $data($node) 1 end]]

if {[string equal $index "end"]} {
lappend data($parent) $node
} else {
set data($parent) [linsert $data($parent) [incr index] $node]
}

if {([string equal $oldp "root"] ||
([visible $path $oldp] && [Widget::getoption $path.$oldp -open]))
|| ([string equal $parent "root"] ||
([visible $path $parent]
&& [Widget::getoption $path.$parent -open]))} {
_redraw_idle $path 3
}
}


proc Tree::reorder { path node neworder } {
Widget::getVariable $path data

set node [_node_name $path $node]
if { ![info exists data($node)] } {
return -code error "node \"$node\" does not exist"
}
set children [lrange $data($node) 1 end]
if { [llength $children] } {
set children [BWidget::lreorder $children $neworder]
set data($node) [linsert $children 0 [lindex $data($node) 0]]
if { [visible $path $node] && [Widget::getoption $path.$node -open] } {
_redraw_idle $path 3
}
}
}


proc Tree::selection { path cmd args } {
Widget::getVariable $path data

switch -- $cmd {
toggle {
foreach node $args {
set node [_node_name $path $node]
if {![info exists data($node)]} {
return -code error "$path selection toggle:
Cannot toggle unknown node \"$node\"."
}
}

foreach node $args {
set node [_node_name $path $node]
if {[set idx [lsearch -exact $data(selnodes) $node]] != -1} {
set data(selnodes) [lreplace $data(selnodes) $idx $idx]
} else {
lappend data(selnodes) $node
}
}
}

set {
foreach node $args {
set node [_node_name $path $node]
if {![info exists data($node)]} {
return -code error "$path selection set:  Cannot select unknown node \"$node\"."
}
}
set data(selnodes) {}
foreach node $args {
set node [_node_name $path $node]
if { [Widget::getoption $path.$node -selectable] } {
if { [lsearch -exact $data(selnodes) $node] == -1 } {
lappend data(selnodes) $node
}
}
}
_call_selectcmd $path
}

add {
foreach node $args {
set node [_node_name $path $node]
if {![info exists data($node)]} {
return -code error "$path selection add:  Cannot select unknown node \"$node\"."
}
}

foreach node $args {
set node [_node_name $path $node]
if {[Widget::getoption $path.$node -selectable]} {
if {[lsearch -exact $data(selnodes) $node] == -1} {
lappend data(selnodes) $node
}
}
}
_call_selectcmd $path
}

range {

if {[llength $args] != 2} {
return -code error  [BWidget::wrongNumArgsString  "$path selection range node1 node2"]
}

foreach {node1 node2} $args break

set node1 [_node_name $path $node1]
set node2 [_node_name $path $node2]
if {![info exists data($node1)]} {
return -code error "$path selection range:  Cannot start range at unknown node \"$node1\"."
}
if {![info exists data($node2)]} {
return -code error "$path selection range:  Cannot end range at unknown node \"$node2\"."
}

set nodes {}
foreach nodeItem [$path.c find withtag node] {
set node [Tree::_get_node_name $path $nodeItem 2]
if { [Widget::getoption $path.$node -selectable] } {
lappend nodes $node
}
}

if {$node1 == "root"} {
set node1 [lindex $nodes 0]
}

if {$node2 == "root"} {
set node2 [lindex $nodes 0]
}

while {[set index1 [lsearch -exact $nodes $node1]] == -1} {
set node1 [lindex $data($node1) 0]
}

while {[set index2 [lsearch -exact $nodes $node2]] == -1} {
set node2 [lindex $data($node2) 0]
}

if {$index2 < $index1} {
incr index1 $index2
set index2 [expr {$index1 - $index2}]
set index1 [expr {$index1 - $index2}]
}

set data(selnodes) [lrange $nodes $index1 $index2]
_call_selectcmd $path
}

remove {
foreach node $args {
set node [_node_name $path $node]
if { [set idx [lsearch -exact $data(selnodes) $node]] != -1 } {
set data(selnodes) [lreplace $data(selnodes) $idx $idx]
}
}
_call_selectcmd $path
}

clear {
if {[llength $args] != 0} {
return -code error  [BWidget::wrongNumArgsString "$path selection clear"]
}
set data(selnodes) {}
_call_selectcmd $path
}

get {
if {[llength $args] != 0} {
return -code error  [BWidget::wrongNumArgsString "$path selection get"]
}
return $data(selnodes)
}

includes {
if {[llength $args] != 1} {
return -code error  [BWidget::wrongNumArgsString  "$path selection includes node"]
}
set node [lindex $args 0]
set node [_node_name $path $node]
return [expr {[lsearch -exact $data(selnodes) $node] != -1}]
}

default {
return
}
}

event generate $path <<TreeSelect>>

_redraw_idle $path 1
}


proc Tree::getcanvas { path } {
return $path.c
}


proc Tree::exists { path node } {
Widget::getVariable $path data
set node [_node_name $path $node]
return [info exists data($node)]
}


proc Tree::visible { path node } {
Widget::getVariable $path items
set node [_node_name $path $node]
return [info exists items($node)]
}


proc Tree::parent { path node } {
Widget::getVariable $path data

set node [_node_name $path $node]
if {![info exists data($node)]} {
return -code error "node \"$node\" does not exist"
}
return [lindex $data($node) 0]
}


proc Tree::index { path node } {
Widget::getVariable $path data

set node [_node_name $path $node]
if {[string equal $node "root"] || ![info exists data($node)]} {
return -code error "node \"$node\" does not exist"
}
set parent [lindex $data($node) 0]
return [expr {[lsearch -exact $data($parent) $node] - 1}]
}


proc Tree::find { path findInfo {confine ""} } {
if {[regexp -- {^@([0-9]+),([0-9]+)$} $findInfo match x y]} {
set x [$path.c canvasx $x]
set y [$path.c canvasy $y]
} elseif {[regexp -- {^[0-9]+$} $findInfo lineNumber]} {
set dy [Widget::cget $path -deltay]
set y  [expr {$dy*($lineNumber+0.5)}]
set confine ""
} else {
return -code error "invalid find spec \"$findInfo\""
}

set found  0
set region [$path.c bbox all]
if {[llength $region]} {
set xi [lindex $region 0]
set xs [lindex $region 2]
foreach id [$path.c find overlapping $xi $y $xs $y] {
set ltags [$path.c gettags $id]
set item  [lindex $ltags 1]
if { [string equal $item "node"] ||
[string equal $item "img"]  ||
[string equal $item "win"] } {
set node  [Tree::_get_node_name $path $id 2]
set found 1
break
}
}
}

if {$found} {
if {[string equal $confine "confine"]} {
set padx [_get_node_padx $path $node]
set xi [expr {[lindex [$path.c coords n:$node] 0] - $padx}]
set xs [lindex [$path.c bbox n:$node] 2]
if {$x >= $xi && $x <= $xs} {
return $node
}
} else {
return $node
}
}

return
}


proc Tree::line { path node } {
Widget::getVariable $path items
set node [_node_name $path $node]
set line [lindex $items($node) 0]
if {[string length $line]} { return $line }
return -1
}


proc Tree::nodes { path node {first ""} {last ""} } {
Widget::getVariable $path data

set node [_node_name $path $node]
if {![info exists data($node)]} {
return -code error "node \"$node\" does not exist"
}

if {![string length $first]} {
return [lrange $data($node) 1 end]
}

if {![string length $last]} {
return [lindex [lrange $data($node) 1 end] $first]
} else {
return [lrange [lrange $data($node) 1 end] $first $last]
}
}



proc Tree::visiblenodes { path {node root} } {
Widget::getVariable $path data

set nodes [list]
foreach node [lrange $data($node) 1 end] {
lappend nodes $node
if {[Widget::getoption $path.$node -open]} {
eval lappend nodes [Tree::visiblenodes $path $node]
}
}

return $nodes
}

proc Tree::see { path node } {
Widget::getVariable $path data
Widget::getVariable $path items

set node [_node_name $path $node]
if {[Widget::getoption $path -redraw] && $data(upd,afterid) != ""} {
after cancel $data(upd,afterid)
_redraw_tree $path
}

if {[info exists items($node)]} {
Tree::_see $path [lindex $items($node) 1]
}
}


proc Tree::opentree { path node {recursive 1} } {
Widget::getVariable $path data

set node [_node_name $path $node]
if {[string equal $node "root"] || ![info exists data($node)]} {
return -code error "node \"$node\" does not exist"
}

_recexpand $path $node 1 $recursive [Widget::getoption $path -opencmd]
_redraw_idle $path 3
}


proc Tree::closetree { path node {recursive 1} } {
Widget::getVariable $path data

set node [_node_name $path $node]
if {[string equal $node "root"] || ![info exists data($node)]} {
return -code error "node \"$node\" does not exist"
}

_recexpand $path $node 0 $recursive [Widget::getoption $path -closecmd]
_redraw_idle $path 3
}


proc Tree::toggle { path node } {
if {[Tree::itemcget $path $node -open]} {
$path closetree $node 0
} else {
$path opentree $node 0
}
}


proc Tree::edit { path node text {verifycmd ""} {clickres 0} {select 1}} {
variable _edit
Widget::getVariable $path data
Widget::getVariable $path items

set node [_node_name $path $node]
if { [Widget::getoption $path -redraw] && $data(upd,afterid) != "" } {
after cancel $data(upd,afterid)
_redraw_tree $path
}

if {[info exists items($node)]} {
set _edit(editing) 1

set idn [lindex $items($node) 1]

Tree::_see $path $idn

set oldfg  [$path.c itemcget $idn -fill]
set sbg    [Widget::cget $path -selectbackground]
set coords [$path.c coords $idn]
set x      [lindex $coords 0]
set y      [lindex $coords 1]
set ht     [$path.c cget -highlightthickness]
set bd     [expr {[$path.c cget -borderwidth] + $ht}]
set w      [expr {[winfo width $path] - 2 * $bd}]
set wmax   [expr {[$path.c canvasx $w] - $x}]

set _edit(wait) 0
set _edit(path) $path
set _edit(node) $node
set _edit(text) $text

$path.c itemconfigure $idn    -fill [Widget::cget $path -background]
$path.c itemconfigure s:$node -fill {} -outline {}

set frame  [frame $path.edit  -relief flat -borderwidth 0 -highlightthickness 0  -background [Widget::cget $path -background]]
set ent    [entry $frame.edit  -width              0      -relief             solid  -borderwidth        1      -highlightthickness 0      -foreground         [Widget::getoption $path.$node -fill]  -background         [Widget::cget $path -background]  -selectforeground   [Widget::cget $path -selectforeground]  -selectbackground   $sbg   -font               [_get_option $path $node -font]  -textvariable       Tree::_edit(text)]
pack $ent -ipadx 8 -anchor w

set _edit(frame) $frame
set _edit(entry) $ent

set idw [$path.c create window $x $y -window $frame -anchor w]
trace variable Tree::_edit(text) w  [list Tree::_update_edit_size $path $ent $idw $wmax]
tkwait visibility $ent
grab  $frame
BWidget::focus set $ent

_update_edit_size $path $ent $idw $wmax
update

if {$select} {
$ent selection range 0 end
$ent icursor end
$ent xview end
}

bindtags $ent [list $ent Entry]
bind $ent <Escape> {set Tree::_edit(wait) 0}
bind $ent <Return> {set Tree::_edit(wait) 1}
if {$clickres == 0 || $clickres == 1} {
bind $frame <Button>  [list set Tree::_edit(wait) $clickres]
}

set ok 0
while {!$ok} {
focus -force $ent
tkwait variable Tree::_edit(wait)
if {!$_edit(wait) || ![llength $verifycmd] ||
[uplevel \#0 $verifycmd [list $_edit(text)]]} {
set ok 1
}
}

trace vdelete Tree::_edit(text) w  [list Tree::_update_edit_size $path $ent $idw $wmax]
grab release $frame
BWidget::focus release $ent

set _edit(editing) 0

destroy $frame
$path.c delete $idw
$path.c itemconfigure $idn    -fill $oldfg
$path.c itemconfigure s:$node -fill $sbg -outline $sbg

if {$_edit(wait)} {
return $_edit(text)
}
}
}


proc Tree::editing { path } {
variable _edit
if {$_edit(editing) && $_edit(path) eq $path} { return 1 }
return 0
}


proc Tree::xview { path args } {
return [eval [linsert $args 0 $path.c xview]]
}


proc Tree::yview { path args } {
return [eval [linsert $args 0 $path.c yview]]
}


proc Tree::search { path args } {
Widget::getVariable $path data

array set _args {
-pattern  *
}
array set _args $args

return [array names data $_args(-pattern)]
}


proc Tree::level { path node } {
Widget::getVariable $path data

if {[string equal $node "root"]} { return 0 }

if {![info exists data($node)]} {
return -code error "node \"$node\" does not exists"
}

set level  1
set parent [lindex $data($node) 0]
while {![string equal $parent "root"]} {
incr level
set parent [lindex $data($parent) 0]
}

return $level
}


proc Tree::_call_selectcmd { path } {
Widget::getVariable $path data

set selectcmd [Widget::getoption $path -selectcommand]
if {[llength $selectcmd]} {
lappend selectcmd $path
lappend selectcmd $data(selnodes)
uplevel \#0 $selectcmd
}
return
}


proc Tree::_update_edit_size { path entry idw wmax args } {
set entw [winfo reqwidth $entry]
if {$entw + 8 >= $wmax} {
$path.c itemconfigure $idw -width $wmax
} else {
$path.c itemconfigure $idw -width 0
}
}


proc Tree::_see { path idn } {
set bbox [$path.c bbox $idn]
set scrl [$path.c cget -scrollregion]

set ymax [lindex $scrl 3]
set dy   [$path.c cget -yscrollincrement]
set yv   [$path yview]
set yv0  [expr {round([lindex $yv 0]*$ymax/$dy)}]
set yv1  [expr {round([lindex $yv 1]*$ymax/$dy)}]
set y    [expr {int([lindex [$path.c coords $idn] 1]/$dy)}]

if {$y < $yv0} {
$path.c yview scroll [expr {$y-$yv0}] units
} elseif { $y >= $yv1 } {
$path.c yview scroll [expr {$y-$yv1+1}] units
}

set xmax [lindex $scrl 2]
set dx   [$path.c cget -xscrollincrement]
set xv   [$path xview]
set x0   [expr {int([lindex $bbox 0]/$dx)}]
set xv0  [expr {round([lindex $xv 0]*$xmax/$dx)}]
set xv1  [expr {round([lindex $xv 1]*$xmax/$dx)}]

if {$x0 >= $xv1 || $x0 < $xv0} {
$path.c xview scroll [expr {$x0-$xv0}] units
}
}


proc Tree::_recexpand { path node expand recursive cmd } {
Widget::getVariable $path data

if {[Widget::getoption $path.$node -open] != $expand} {
Widget::setoption $path.$node -open $expand
if {[llength $cmd]} {
uplevel \#0 $cmd [list $node]
}
}

if {$recursive} {
foreach subnode [lrange $data($node) 1 end] {
_recexpand $path $subnode $expand $recursive $cmd
}
}
}


proc Tree::_subdelete { path lnodes } {
Widget::getVariable $path data

set sel $data(selnodes)

while {[llength $lnodes]} {
set lsubnodes [list]
foreach node $lnodes {
foreach subnode [lrange $data($node) 1 end] {
lappend lsubnodes $subnode
}
unset data($node)
set idx [lsearch -exact $sel $node]
if {$idx >= 0} {
set sel [lreplace $sel $idx $idx]
}
if {[set win [Widget::getoption $path.$node -window]] != ""} {
destroy $win
}
Widget::destroy $path.$node 0
}
set lnodes $lsubnodes
}

set data(selnodes) $sel
}


proc Tree::_update_scrollregion { path } {
set bd   [$path.c cget -borderwidth]
set ht   [$path.c cget -highlightthickness]
set bd   [expr {2 * ($bd + $ht)}]
set w    [expr {[winfo width  $path] - $bd}]
set h    [expr {[winfo height $path] - $bd}]
set xinc [$path.c cget -xscrollincrement]
set yinc [$path.c cget -yscrollincrement]
set bbox [$path.c bbox node]
if {[llength $bbox]} {
set xs [lindex $bbox 2]
set ys [lindex $bbox 3]

if {$w < $xs} {
set w [expr {int($xs)}]
if {[set r [expr {$w % $xinc}]]} {
set w [expr {$w+$xinc-$r}]
}
}
if {$h < $ys} {
set h [expr {int($ys)}]
if {[set r [expr {$h % $yinc}]]} {
set h [expr {$h+$yinc-$r}]
}
}
}

$path.c configure -scrollregion [list 0 0 $w $h]

if {[Widget::getoption $path -selectfill]} {
_redraw_selection $path
}
}


proc Tree::_cross_event { path } {
Widget::getVariable $path data

set node [Tree::_get_node_name $path current 1]
if {[Widget::getoption $path.$node -open]} {
Tree::itemconfigure $path $node -open 0
if {[llength [set cmd [Widget::getoption $path -closecmd]]]} {
uplevel \#0 $cmd [list $node]
}
} else {
Tree::itemconfigure $path $node -open 1
if {[llength [set cmd [Widget::getoption $path -opencmd]]]} {
uplevel \#0 $cmd [list $node]
}
}
}


proc Tree::_draw_cross { path node open x y } {
Widget::getVariable $path items
set idc [lindex $items($node) 2]

if {$open} {
set img [Widget::cget $path -crossopenimage]
set bmp [Widget::cget $path -crossopenbitmap]
} else {
set img [Widget::cget $path -crosscloseimage]
set bmp [Widget::cget $path -crossclosebitmap]
}

if {[string length $idc]} {
if {![string length $img]} {
$path.c itemconfigure $idc -bitmap $bmp
} else {
$path.c itemconfigure $idc -image $img
}
return $idc
}

if {![Widget::getoption $path -showlines]} { set x [expr {$x + 6}] }

if {![string length $img]} {
set idc [$path.c create bitmap $x $y  -bitmap     $bmp  -background [$path.c cget -background]  -foreground [Widget::getoption $path -crossfill]  -tags       [list cross c:$node] -anchor c]
} else {
set idc [$path.c create image $x $y  -image      $img  -tags       [list cross c:$node] -anchor c]
}

return $idc
}


proc Tree::_draw_node { path node x0 y0 deltax deltay padx showlines } {
Widget::getVariable $path data
Widget::getVariable $path items

set x1 [expr {$x0+$deltax+5}]
set y1 $y0
if {$showlines} {
set i [$path.c create line $x0 $y0 $x1 $y0  -fill    [Widget::getoption $path -linesfill]    -stipple [Widget::getoption $path -linestipple]  -tags    line]

lappend items($node) $i
} else {
lappend items($node) ""
}

set i [$path.c create text [expr {$x1+$padx}] $y0  -anchor w  -text   [Widget::getoption $path.$node -text]  -fill   [Widget::getoption $path.$node -fill]  -font   [_get_option $path $node -font]  -tags   [Tree::_get_node_tags $path $node [list node n:$node]]]
lappend items($node) $i

set len [expr {[llength $data($node)] > 1}]
set dc  [Widget::getoption $path.$node -drawcross]
set exp [Widget::getoption $path.$node -open]

if {$len && $exp} {
set y1 [_draw_subnodes $path [lrange $data($node) 1 end]  [expr {$x0+$deltax}] $y0 $deltax $deltay $padx $showlines]
}

if {![string equal $dc "never"] && ($len || [string equal $dc "allways"])} {
lappend items($node) [_draw_cross $path $node $exp $x0 $y0]
} else {
lappend items($node) ""
}

if {[set win [Widget::getoption $path.$node -window]] != ""} {
set a [Widget::cget $path.$node -anchor]
set i [$path.c create window $x1 $y0 -window $win -anchor $a  -tags [Tree::_get_node_tags $path $node [list win i:$node]]]
lappend items($node) $i
} elseif {[set img [Widget::getoption $path.$node -image]] != ""} {
set a [Widget::cget $path.$node -anchor]
set i [$path.c create image $x1 $y0 -image $img -anchor $a  -tags   [Tree::_get_node_tags $path $node [list img i:$node]]]
lappend items($node) $i
} else {
lappend items($node) ""
}

set nid [lindex $items($node) 1]
set iid [lindex $items($node) 3]
set box [$path.c bbox $nid $iid]
set id [$path.c create rect 0 [lindex $box 1]  [winfo screenwidth $path] [lindex $box 3]  -tags [Tree::_get_node_tags $path $node [list box b:$node]]  -fill {} -outline {}]
$path.c lower $id
lappend items($node) $id

_set_help $path $node

return $y1
}


proc Tree::_draw_subnodes { path nodes x0 y0 deltax deltay padx showlines } {
set y1 $y0
foreach node $nodes {
set padx   [_get_node_padx $path $node]
set deltax [_get_node_deltax $path $node]
set yp $y1
set y1 [_draw_node $path $node $x0 [expr {$y1+$deltay}]  $deltax $deltay $padx $showlines]
}
if {$showlines && [llength $nodes]} {
if {$y0 < 0} {
incr y0 $deltay
}
set id [$path.c create line $x0 $y0 $x0 [expr {$yp+$deltay}]  -fill    [Widget::getoption $path -linesfill]    -stipple [Widget::getoption $path -linestipple]  -tags    line]

$path.c lower $id
}
return $y1
}


proc Tree::_update_nodes { path } {
Widget::getVariable $path data
Widget::getVariable $path items

foreach {node flag} $data(upd,nodes) {
if {![info exists items($node)]} { continue }
set idn [lindex $items($node) 1]

set padx   [_get_node_padx $path $node]
set deltax [_get_node_deltax $path $node]
set c  [$path.c coords $idn]
set x1 [expr {[lindex $c 0]-$padx}]
set x0 [expr {$x1-$deltax-5}]
set y0 [lindex $c 1]
if {$flag & 48} {
set win  [Widget::getoption $path.$node -window]
set img  [Widget::getoption $path.$node -image]
set anc  [Widget::cget $path.$node -anchor]
set idi  [lindex $items($node) 3]
set type [lindex [$path.c gettags $idi] 1]
if {[string length $win]} {
if {[string equal $type "win"]} {
$path.c itemconfigure $idi -window $win
} else {
$path.c delete $idi
set tags [_get_node_tags $path $node [list win i:$node]]
set idi [$path.c create window $x1 $y0 -window $win  -anchor $anc -tags $tags]
set items($node) [lreplace $items($node) 3 3 $idi]
}
} elseif {[string length $img]} {
if {[string equal $type "img"]} {
$path.c itemconfigure $idi -image $img
} else {
$path.c delete $idi
set tags [_get_node_tags $path $node [list win i:$node]]
set idi [$path.c create image $x1 $y0 -image $img  -anchor $anc -tags $tags]
set items($node) [lreplace $items($node) 3 3 $idi]
}
} else {
$path.c delete $idi
set items($node) [lreplace $items($node) 3 3 ""]
}
}

if {$flag & 8} {
set len [expr {[llength $data($node)] > 1}]
set dc  [Widget::getoption $path.$node -drawcross]
set exp [Widget::getoption $path.$node -open]

if {![string equal $dc "never"]
&& ($len || [string equal $dc "allways"])} {
set idc [_draw_cross $path $node $exp $x0 $y0]
set items($node) [lreplace $items($node) 2 2 $idc]
} else {
set idc [lindex $items($node) 2]
$path.c delete $idc
set items($node) [lreplace $items($node) 2 2 ""]
}
}

if {$flag & 7} {
$path.c itemconfigure $idn  -text [Widget::getoption $path.$node -text]  -fill [Widget::getoption $path.$node -fill]  -font [_get_option $path $node -font]
}
}
}


proc Tree::_draw_tree { path } {
Widget::getVariable $path data
Widget::getVariable $path items

if {[info exists items]} { unset items }

$path.c delete all
set cursor [$path.c cget -cursor]
$path.c configure -cursor watch

set x0 8
if {![Widget::getoption $path -showlines]} { set x0 0 }

Tree::_draw_subnodes $path [lrange $data(root) 1 end] $x0  [expr {-[Widget::cget $path -deltay]/2}]  [Widget::getoption $path -deltax]  [Widget::cget $path -deltay]  [Widget::getoption $path -padx]    [Widget::getoption $path -showlines]
$path.c configure -cursor $cursor
}


proc Tree::_redraw_tree { path } {
Widget::getVariable $path data

if {[Widget::getoption $path -redraw]} {
if {$data(upd,level) == 2} {
_update_nodes $path
} elseif {$data(upd,level) == 3} {
_draw_tree $path
}
_redraw_selection $path
_update_scrollregion $path
set data(upd,nodes)   {}
set data(upd,level)   0
set data(upd,afterid) ""
}
}


proc Tree::_redraw_selection { path } {
Widget::getVariable $path data

set selbg [Widget::cget $path -selectbackground]
set selfg [Widget::cget $path -selectforeground]
set fill  [Widget::getoption $path -selectfill]
if {$fill} {
set scroll [$path.c cget -scrollregion]
if {[llength $scroll]} {
set xmax [expr {[lindex $scroll 2]-1}]
} else {
set xmax [winfo width $path]
}
}
foreach id [$path.c find withtag sel] {
set node [Tree::_get_node_name $path $id 1]
$path.c itemconfigure "n:$node"  -fill [Widget::getoption $path.$node -fill]
}
$path.c delete sel
foreach node $data(selnodes) {
set bbox [$path.c bbox "n:$node"]
if {[llength $bbox]} {
if {$fill} {
set bbox [$path.c bbox "n:$node" "i:$node"]
set bbox [list 0 [lindex $bbox 1] $xmax [lindex $bbox 3]]
}
set id [$path.c create rectangle $bbox -tags [list sel s:$node]  -fill $selbg -outline $selbg]
$path.c itemconfigure "n:$node" -fill $selfg
$path.c lower $id
}
}
}


proc Tree::_redraw_idle { path level } {
Widget::getVariable $path data

if {[Widget::getoption $path -redraw] && $data(upd,afterid) == ""} {
set data(upd,afterid) [after idle [list Tree::_redraw_tree $path]]
}
if {$level > $data(upd,level)} {
set data(upd,level) $level
}
return ""
}


proc Tree::_init_drag_cmd { path X Y top } {
set path [winfo parent $path]
set ltags [$path.c gettags current]
set item  [lindex $ltags 1]
if {[string equal $item "node"]
|| [string equal $item "img"]
|| [string equal $item "win"]} {
set node [Tree::_get_node_name $path current 2]
if {[llength [set cmd [Widget::getoption $path -draginitcmd]]]} {
return [uplevel \#0 $cmd [list $path $node $top]]
}
if {[set type [Widget::getoption $path -dragtype]] == ""} {
set type "TREE_NODE"
}
if {[set img [Widget::getoption $path.$node -image]] != ""} {
pack [label $top.l -image $img -padx 0 -pady 0]
}
return [list $type {copy move link} $node]
}
return {}
}


proc Tree::_drop_cmd { path source X Y op type dnddata } {
set path [winfo parent $path]
Widget::getVariable $path data

$path.c delete drop
if {[string length $data(dnd,afterid)]} {
after cancel $data(dnd,afterid)
set data(dnd,afterid) ""
}
set data(dnd,scroll) ""
if {[llength $data(dnd,node)]
&& [llength [set cmd [Widget::getoption $path -dropcmd]]]} {
return [uplevel \#0 $cmd  [list $path $source $data(dnd,node) $op $type $dnddata]]
}
return 0
}


proc Tree::_over_cmd { path source event X Y op type dnddata } {
set path [winfo parent $path]
Widget::getVariable $path data

if {[string equal $event "leave"]} {
$path.c delete drop
if {[string length $data(dnd,afterid)]} {
after cancel $data(dnd,afterid)
set data(dnd,afterid) ""
}
set data(dnd,scroll) ""
return 0
}

if {[string equal $event "enter"]} {
set mode [Widget::getoption $path -dropovermode]
set data(dnd,mode) 0
foreach c {w p n} {
set data(dnd,mode) [expr {($data(dnd,mode) << 1)
| ([string first $c $mode] != -1)}]
}
set bbox [$path.c bbox all]
if {[llength $bbox]} {
set data(dnd,xs) [lindex $bbox 2]
set data(dnd,empty) 0
} else {
set data(dnd,xs) 0
set data(dnd,empty) 1
}
set data(dnd,node) {}
}

set x [expr {$X-[winfo rootx $path]}]
set y [expr {$Y-[winfo rooty $path]}]

$path.c delete drop
set data(dnd,node) {}

if {$data(dnd,mode) != 4 && [_auto_scroll $path $x $y] != ""} { return 2 }

if {$data(dnd,mode) & 4} {
set target [list widget]
set vmode  4
} else {
set target [list ""]
set vmode  0
}

if {($data(dnd,mode) & 2) && $data(dnd,empty)} {
lappend target [list root 0]
set vmode  [expr {$vmode | 2}]
}

set xs $data(dnd,xs)
set xc [$path.c canvasx $x]
if {$xc <= $xs} {
set yc   [$path.c canvasy $y]
set dy   [$path.c cget -yscrollincrement]
set line [expr {int($yc/$dy)}]
set xi   0
set yi   [expr {$line*$dy}]
set ys   [expr {$yi+$dy}]
set found 0
foreach id [$path.c find overlapping $xi $yi $xs $ys] {
set ltags [$path.c gettags $id]
set item  [lindex $ltags 1]
if {[string equal $item "node"]
|| [string equal $item "img"]
|| [string equal $item "win"]} {
set node [Tree::_get_node_name $path $id 2]
set found 1
break
}
}

if {$found} {
set padx   [_get_node_padx $path $node]
set deltax [_get_node_deltax $path $node]
set xi [expr {[lindex [$path.c coords n:$node] 0] - $padx - 1}]
if {$data(dnd,mode) & 1} {
lappend target $node
set vmode [expr {$vmode | 1}]
} else {
lappend target ""
}

if {$data(dnd,mode) & 2} {
if {$yc >= $yi+$dy/2} {
if {[Widget::getoption $path.$node -open] &&
[llength $data($node)] > 1} {
set parent $node
set index  0
set xli    [expr {$xi-5}]
} elseif {[Widget::getoption $path.$node -open]} {
set parent $node
set index  0
set xli    [expr {$xi-5}]
} else {
set parent [lindex $data($node) 0]
set index  [lsearch -exact $data($parent) $node]
set xli    [expr {$xi - $deltax - 5}]
}
set yl $ys
} else {
set parent [lindex $data($node) 0]
set index  [expr {[lsearch -exact $data($parent) $node] - 1}]
set xli    [expr {$xi - $deltax - 5}]
set yl     $yi
}
lappend target [list $parent $index]
set vmode  [expr {$vmode | 2}]
} else {
lappend target {}
}

if {($vmode & 3) == 3} {
if {$yc-$yi <= 3 || $ys-$yc <= 3} {
lappend target "position"
} else {
lappend target "node"
}
}
}
}

if {$vmode && [llength [set cmd [Widget::getoption $path -dropovercmd]]]} {
set res     [uplevel \#0 $cmd  [list $path $source $target $op $type $dnddata]]
set code    [lindex $res 0]
set newmode 0
if {$code & 1} {
set mode [lindex $res 1]
if {($vmode & 1) && [string equal $mode "node"]} {
set newmode 1
} elseif {($vmode & 2) && [string equal $mode "position"]} {
set newmode 2
} elseif {($vmode & 4) && [string equal $mode "widget"]} {
set newmode 4
}
}
set vmode $newmode
} else {
if {($vmode & 3) == 3} {
if {[string equal [lindex $target 3] "position"]} {
set vmode [expr {$vmode & ~1}]
} else {
set vmode [expr {$vmode & ~2}]
}
}

if {$data(dnd,mode) == 4 || $data(dnd,mode) == 0} {
set code 1
} else {
set code 3
}
}

if {!$data(dnd,empty)} {
if {$vmode & 1} {
set data(dnd,node) [list "node" [lindex $target 1]]
$path.c create rectangle $xi $yi $xs $ys -tags drop
} elseif {$vmode & 2} {
set data(dnd,node) [concat "position" [lindex $target 2]]
$path.c create line  [list $xli [expr {$yl-$dy/2}] $xli $yl $xs $yl] -tags drop
} elseif {$vmode & 4} {
set data(dnd,node) [list "widget"]
} else {
set code [expr {$code & 2}]
}
}

if {$code & 1} {
DropSite::setcursor based_arrow_down
} else {
DropSite::setcursor dot
}
return $code
}


proc Tree::_drag_and_drop { path from endItem operation type startItem } {
if {[winfo parent $from] != $path} { return }

set place [lindex $endItem 0]

switch -- $place {
"node" {
set node   [lindex $endItem 1]
set parent [$path parent $node]
set index  [$path index $node]
}

"position" {
set parent [lindex $endItem 1]
set index  [lindex $endItem 2]
}

default {
return
}
}

if {[string equal $operation "copy"]} {
set options [Widget::options $path.$startItem]
eval $path insert $idx [list $startItem#auto] $options
} else {
$path move $parent $startItem $index
}
}


proc Tree::_auto_scroll { path x y } {
Widget::getVariable $path data

set xmax   [winfo width  $path]
set ymax   [winfo height $path]
set scroll {}
if {$y <= 6} {
if {[lindex [$path.c yview] 0] > 0} {
set scroll [list yview -1]
DropSite::setcursor sb_up_arrow
}
} elseif {$y >= $ymax-6} {
if {[lindex [$path.c yview] 1] < 1} {
set scroll [list yview 1]
DropSite::setcursor sb_down_arrow
}
} elseif {$x <= 6} {
if {[lindex [$path.c xview] 0] > 0} {
set scroll [list xview -1]
DropSite::setcursor sb_left_arrow
}
} elseif {$x >= $xmax-6} {
if {[lindex [$path.c xview] 1] < 1} {
set scroll [list xview 1]
DropSite::setcursor sb_right_arrow
}
}

if {[string length $data(dnd,afterid)]
&& ![string equal $data(dnd,scroll) $scroll]} {
after cancel $data(dnd,afterid)
set data(dnd,afterid) ""
}

set data(dnd,scroll) $scroll
if {[string length $scroll] && ![string length $data(dnd,afterid)]} {
set data(dnd,afterid) [after 200 [list Tree::_scroll $path $scroll]]
}
return $data(dnd,afterid)
}


proc Tree::_scroll { path cmd dir } {
Widget::getVariable $path data

if {($dir == -1 && [lindex [$path.c $cmd] 0] > 0)
|| ($dir == 1  && [lindex [$path.c $cmd] 1] < 1)} {
$path.c $cmd scroll $dir units
set data(dnd,afterid) [after 100 [list Tree::_scroll $path $cmd $dir]]
} else {
set data(dnd,afterid) ""
DropSite::setcursor dot
}
}


proc Tree::_keynav {which path} {

set nodes {}
foreach nodeItem [$path.c find withtag node] {
set node [Tree::_get_node_name $path $nodeItem 2]
if {[Widget::cget $path.$node -selectable]} {
lappend nodes $node
}
}

set node [_get_current_node $path]

switch -exact -- $which {
"up" {
if {![string length $node]} { return }

set index [lsearch -exact $nodes $node]
incr index -1
if {$index >= 0} {
$path selection set [lindex $nodes $index]
_set_current_node $path [lindex $nodes $index]
$path see [lindex $nodes $index]
return
}
}

"down" {
if {![string length $node]} {
$path selection set [lindex $nodes 0]
_set_current_node $path [lindex $nodes 0]
$path see [lindex $nodes 0]
return
}

set index [lsearch -exact $nodes $node]
incr index
if {$index < [llength $nodes]} {
$path selection set [lindex $nodes $index]
_set_current_node $path [lindex $nodes $index]
$path see [lindex $nodes $index]
return
}
}

"right" {
if {![string length $node]} { return }

if {[Widget::getoption $path.$node -open]} {
if { [llength [$path nodes $node]] } {
set index [lsearch -exact $nodes $node]
incr index
if {$index < [llength $nodes]} {
$path selection set [lindex $nodes $index]
_set_current_node $path [lindex $nodes $index]
$path see [lindex $nodes $index]
return
}
}
} else {
$path itemconfigure $node -open 1
if {[llength [set cmd [Widget::getoption $path -opencmd]]]} {
uplevel \#0 $cmd [list $node]
}
return
}
}

"left" {
if {![string length $node]} { return }

if {[Widget::getoption $path.$node -open]} {
$path itemconfigure $node -open 0
if {[llength [set cmd [Widget::getoption $path -closecmd]]]} {
uplevel \#0 $cmd [list $node]
}
return
} else {
set parent [$path parent $node]
if {[string equal $parent "root"]} {
set parent $node
} else {
while {![$path itemcget $parent -selectable]} {
set parent [$path parent $parent]
if {[string equal $parent "root"]} {
set parent $node
break
}
}
}
$path selection set $parent
_set_current_node $path $parent
$path see $parent
return
}
}

"space" {
if {[string length $node]} {
Tree::toggle $path $node
}
}
}
}


proc Tree::_get_current_node {win} {
if {[info exists selectTree::selectCursor($win)]} {
set result $selectTree::selectCursor($win)
} elseif {[llength [set selList [$win selection get]]]} {
set result [lindex $selList 0]
} else {
set result ""
}
return $result
}


proc Tree::_set_current_node {win node} {
if {[info exists selectTree::selectCursor($win)]} {
set selectTree::selectCursor($win) $node
}
return
}


proc Tree::_get_node_name {path {item current} {tagindex end-1}} {
return [string range [lindex [$path.c gettags $item] $tagindex] 2 end]
}

proc Tree::_get_node_padx {path node} {
set padx [Widget::getoption $path.$node -padx]
if {$padx < 0} { set padx [Widget::getoption $path -padx] }
return $padx
}

proc Tree::_get_node_deltax {path node} {
set deltax [Widget::getoption $path.$node -deltax]
if {$deltax < 0} { set deltax [Widget::getoption $path -deltax] }
return $deltax
}


proc Tree::_get_node_tags {path node {tags ""}} {
eval [linsert $tags 0 lappend list TreeItemSentinal]
if {[Widget::getoption $path.$node -helptext] == ""} { return $list }

switch -- [Widget::getoption $path.$node -helptype] {
balloon {
lappend list BwHelpBalloon
}
variable {
lappend list BwHelpVariable
}
}
return $list
}

proc Tree::_set_help { path node } {
Widget::getVariable $path help

set item $path.$node
set opts [list -helptype -helptext -helpvar]
foreach {cty ctx cv} [eval [linsert $opts 0 Widget::hasChangedX $item]] break
set text [Widget::getoption $item -helptext]

if { (![info exists help($node)] && $text != "") || $cty || $ctx || $cv } {
set help($node) 1
set type [Widget::getoption $item -helptype]
switch $type {
balloon {
DynamicHelp::register $path.c balloon n:$node $text
DynamicHelp::register $path.c balloon i:$node $text
DynamicHelp::register $path.c balloon b:$node $text
}
variable {
set var [Widget::getoption $item -helpvar]
DynamicHelp::register $path.c variable n:$node $var $text
DynamicHelp::register $path.c variable i:$node $var $text
DynamicHelp::register $path.c variable b:$node $var $text
}
}
}
}

proc Tree::_mouse_select { path cmd args } {
eval [linsert $args 0 selection $path $cmd]
switch -- $cmd {
"add" - "clear" - "remove" - "set" - "toggle" {
event generate $path <<TreeSelect>>
}
}
}


proc Tree::_node_name { path node } {
set map [list & _ | _ ^ _ ! _]
return  [string map $map $node]
}


proc Tree::_get_option { path node option {default ""} } {
return [Widget::getOption $option $default $path.$node $path]
}


proc Tree::_destroy { path } {
Widget::getVariable $path data

if {[string length $data(upd,afterid)]} {
after cancel $data(upd,afterid)
}

if {[string length $data(dnd,afterid)]} {
after cancel $data(dnd,afterid)
}

_subdelete $path [lrange $data(root) 1 end]
Widget::destroy $path
}


namespace eval OptionTree {
Widget::define OptionTree optiontree Tree

namespace eval Node {
Widget::declare OptionTree::Node {
{-type              Enum      "none"  1
{checkbutton none radiobutton}}
{-command            String    ""      0}
{-variable           String    ""      0}

{-on                 Boolean   "0"     0}
{-value              String    ""      0}
{-onvalue            String    ""      0}
{-offvalue           String    ""      0}

{-state              Enum      "normal" 0 {disabled normal}}
{-disabledforeground Color     "SystemDisabledText" 0}
}
}

Widget::declare OptionTree {
{-command             String       ""   0}
{-toggleselect        Boolean      1    1}

{-radioimage          String       ""   1}
{-radioselectimage    String       ""   1}

{-checkimage          String       ""   1}
{-checkselectimage    String       ""   1}
}

bind OptionTree <Destroy> [list OptionTree::_destroy %W]
}


proc OptionTree::create { path args } {
set opath $path#opttree

array set maps [list Tree {} .c {} OptionTree {}]
array set maps [Widget::splitArgs $args Tree OptionTree]

eval [list Tree::create $path -bg white -showlines 0] $maps(Tree)
eval [list $path.c configure] $maps(.c)

Widget::initFromODB OptionTree $opath $maps(OptionTree)

if {![string length [Widget::getoption $opath -radioimage]]} {
Widget::setoption $opath -radioimage [BWidget::Icon radio-off]
}

if {![string length [Widget::getoption $opath -radioselectimage]]} {
Widget::setoption $opath -radioselectimage [BWidget::Icon radio-on]
}

if {![string length [Widget::getoption $opath -checkimage]]} {
Widget::setoption $opath -checkimage [BWidget::Icon check-off]
}

if {![string length [Widget::getoption $opath -checkselectimage]]} {
Widget::setoption $opath -checkselectimage [BWidget::Icon check-on]
}

set opts [list]

set image  [Widget::getoption $opath -checkimage]
set width  [image width $image]
set height [image height $image]
lappend opts -padx [expr {$width + 4}]
lappend opts -deltax $width -deltay [expr {$height + 4}]

eval [list Tree::configure $path] $opts $maps(Tree)

bindtags $path [list $path OptionTree Tree [winfo toplevel $path] all]

set toggle [Widget::getoption $opath -toggleselect]

$path bindText  <Button-1> [list OptionTree::_select $path $toggle]
$path bindText  <Double-1> [list OptionTree::_select $path 1]
$path bindImage <Button-1> [list OptionTree::_select $path 1]

proc ::$path { cmd args }  "return \[OptionTree::_path_command [list $path] \$cmd \$args\]"

return $path
}


proc OptionTree::cget { path option } {
if {[string match "*#opttree" $path]} {
set opath $path
} else {
set opath $path#opttree
}

if {[Widget::optionExists Tree $option]} {
return [Tree::cget $path $option]
} else {
return [Widget::cget $opath $option]
}
}


proc OptionTree::clear { path } {
eval [list OptionTree::delete $path] [Tree::nodes $path root]
}


proc OptionTree::configure { path args } {
set opath $path#opttree

if {![llength $args]} {
set res [Tree::configure $path]
eval lappend res [Widget::configure $opath $args]
return [lsort $res]
}

if {[llength $args] == 1} {
if {[Widget::optionExists Tree $args]} {
return [Tree::configure $path $args]
} else {
return [Widget::configure $opath $args]
}
}

array set maps [list Tree {} .c {} OptionTree {}]
array set maps [Widget::splitArgs $args Tree OptionTree]

if {[llength $maps(Tree)] || [llength $maps(.c)]} {
eval [list Tree::configure $path] $maps(Tree) $maps(.c)
}

if {[llength $maps(OptionTree)]} {
Widget::configure $opath $maps(OptionTree)
}
}


proc OptionTree::delete { path args } {
Widget::getVariable $path traces
Widget::getVariable $path variables

foreach node $args {
eval [list OptionTree::delete $path] [$path nodes $node]

Widget::destroy $path.$node#opttree 0

if {![info exists variables($node)]} { continue }

set varName $variables($node)
set command [list OptionTree::_redraw_node $path $node 0]
uplevel #0 [list trace remove variable $varName write $command]

if {[set idx [lsearch -exact $traces($varName) $node]] > -1} {
set traces($varName) [lreplace $traces($varName) $idx $idx]
}
}

eval [list Tree::delete $path] $args
}


proc OptionTree::insert { path index parent node args } {
array set maps [Widget::splitArgs $args OptionTree::Node Tree::Node]

set deltax [Widget::getoption $path -deltax]
if {[string equal $parent "root"]} {
set deltax 0
} else {
set dx [Widget::getoption $path.$parent -deltax]
set dc [Widget::getoption $path.$parent -drawcross]
if {$dx == 0 && $dc ne "never"} {
Tree::itemconfigure $path $parent -deltax 10
}
}

set args [concat -deltax $deltax $maps(Tree::Node)]
set node [eval [list Tree::insert $path $index $parent $node] $args]

set onode $path.$node#opttree
Widget::init OptionTree::Node $onode $maps(OptionTree::Node)

set type [Widget::getoption $onode -type]
array set tmp $maps(Tree::Node)
if {[string equal $type "none"] && ![info exists tmp(-padx)]
&& ![string length [Tree::itemcget $path $node -image]]} {
Tree::itemconfigure $path $node -padx 4
}

OptionTree::_set_variable $path $node
OptionTree::_redraw_node  $path $node 0

return $node
}


proc OptionTree::itemcget { path node option } {
set onode $path.$node#opttree

if {[Widget::optionExists OptionTree::Node $option]} {
return [Widget::getoption $onode $option]
} else {
return [Tree::itemcget $path $node $option]
}
}


proc OptionTree::itemconfigure { path node args } {
set onode $path.$node#opttree

if {![llength $args]} {
set res [Tree::itemconfigure $path $node]
eval lappend res [Widget::configure $onode $args]
return [lsort $res]
}

if {[llength $args] == 1} {
if {[Widget::optionExists Tree::Node $args]} {
return [Tree::itemconfigure $path $node $args]
} else {
return [Widget::configure $onode $args]
}
}

array set maps [Widget::splitArgs $args OptionTree::Node Tree::Node]

if {[info exists maps(Tree::Node)]} {
eval [list Tree::itemconfigure $path $node] $maps(Tree::Node)
}

set oldVarName [Widget::getoption $onode -variable]

if {[info exists maps(OptionTree::Node)]} {
Widget::configure $onode $maps(OptionTree::Node)
}

set redraw 0

if {[Widget::hasChanged $onode -variable varName]} {
Widget::getVariable $path traces
if {[string length $oldVarName]} {
set idx [lsearch -exact $traces($oldVarName) $node]
set traces($oldVarName) [lreplace $traces($oldVarName) $idx $idx]

set command [list OptionTree::_redraw_node $path $node 0]
uplevel #0 [list trace remove variable $oldVarName write $command]
}

OptionTree::_set_variable $path $node

set redraw 1
}

if {[Widget::anyChangedX $onode -on -value -onvalue -offvalue -state]} {
set redraw 1
}

if {$redraw} { _redraw_node $path $node 1 }
}


proc OptionTree::toggle { path node {force 0} } {
set onode $path.$node#opttree

if {$force || [Widget::getoption $onode -state] ne "disabled"} {
if {[Widget::getoption $onode -on]} {
OptionTree::itemconfigure $path $node -on 0
} else {
OptionTree::itemconfigure $path $node -on 1
}

event generate $path <<TreeModify>>
}
}


proc OptionTree::_path_command { path cmd larg } {
if {[string length [info commands ::OptionTree::$cmd]]} {
return [eval [linsert $larg 0 OptionTree::$cmd $path]]
} else {
return [eval [linsert $larg 0 Tree::$cmd $path]]
}
}


proc OptionTree::_select { path toggle node } {
set opath $path#opttree
set onode $path.$node#opttree

$path selection set $node

if {[Widget::getoption $onode -state] ne "disabled" && $toggle} {
OptionTree::toggle $path $node
set cmd [Widget::cgetOption -command "" $onode $opath]
OptionTree::_eval_command $path $node $cmd
}

event generate $path <<TreeSelect>>
}


proc OptionTree::_eval_command { path node command } {
if {[string length $command]} {
set onode   $path.$node#opttree
set parent  [Tree::parent $path $node]
set varName [Widget::getoption $onode -variable]
set map     [list %W $path %p $parent %n $node %v $varName]

uplevel #0 [string map $map $command]
}
}


proc OptionTree::_set_variable { path node } {
Widget::getVariable $path traces
Widget::getVariable $path variables

set onode $path.$node#opttree

set varName [Widget::getoption $onode -variable]
if {![string length $varName]} { return }

set variables($node) $varName
lappend traces($varName) $node

set command [list OptionTree::_redraw_node $path $node 0]
uplevel #0 [list trace add variable $varName write $command]
}


proc OptionTree::_redraw_node { path node force args } {
set opath $path#opttree
set onode $path.$node#opttree

set varName [Widget::getoption $onode -variable]

set opts [list]

if {[Widget::getoption $onode -state] eq "disabled"} {
lappend opts -fill [Widget::getoption $onode -disabledforeground]
}

switch -- [Widget::getoption $onode -type] {
"checkbutton" {
set on [Widget::getoption $onode -on]

if {[string length $varName]} {
upvar #0 $varName var

set onvalue  [Widget::getoption $onode -onvalue]
set offvalue [Widget::getoption $onode -offvalue]

if {$force || ![info exists var]} {
if {$onvalue  eq ""} { set onvalue  1 }
if {$offvalue eq ""} { set offvalue 0 }
if {$on} {
set var $onvalue
} else {
set var $offvalue
}
} else {
if {$offvalue eq "" && [string is false -strict $var]} {
set on 0
} elseif {$onvalue eq "" && [string is true -strict $var]} {
set on 1
} elseif {$var == $onvalue} {
set on 1
} else {
set on 0
}
}
}

if {$on} {
set image [Widget::getoption $opath -checkselectimage]
} else {
set image [Widget::getoption $opath -checkimage]
}

Widget::setoption $onode -on $on
lappend opts -image $image
}

"radiobutton" {
set on 1
set image [Widget::getoption $opath -radioselectimage]

if {[string length $varName]} {
upvar #0 $varName var

set value [Widget::getoption $onode -value]

if {$force} { set var $value }

if {[info exists var] && $var != $value} {
set on 0
set image [Widget::getoption $opath -radioimage]
}
}

Widget::setoption $onode -on $on
lappend opts -image $image
}
}

eval [list Tree::itemconfigure $path $node] $opts
}


proc OptionTree::_destroy { path } {
Widget::getVariable $path traces

OptionTree::delete $path root

foreach varName [array names traces] {
foreach node $traces($varName) {
set command [list OptionTree::_redraw_node $path $node 0]
uplevel #0 [list trace remove variable $varName write $command]
}
}

Widget::destroy $path#opttree
}


namespace eval ListBox {
Widget::define ListBox listbox DragSite DropSite DynamicHelp

namespace eval Item {
Widget::declare ListBox::Item {
{-indent     Int        0   0 "%d >= 0"}
{-text       String     ""  0}
{-font       String     ""  0}
{-foreground Color2     ""  0}
{-image      String     ""  0}
{-window     String     ""  0}
{-data       String     ""  0}

{-fg         Synonym    -foreground}
{-fill       Synonym    -foreground}
}
}

DynamicHelp::include ListBox::Item balloon

Widget::tkinclude ListBox canvas .c  remove {
-insertwidth -insertbackground -insertborderwidth -insertofftime
-insertontime -selectborderwidth -closeenough -confine -scrollregion
-xscrollincrement -yscrollincrement -width -height -bg -background
-fg -foreground -selectbackground -selectforeground
} initialize {
-relief sunken -borderwidth 2 -takefocus 1
-highlightthickness 0 -width 200
}

DragSite::include ListBox "LISTBOX_ITEM" 1
DropSite::include ListBox {
LISTBOX_ITEM {copy {} move {}}
}

Widget::declare ListBox {
{-deltax           Int        10                        0 "%d >= 0"}
{-deltay           Int        15                        0 "%d >= 0"}
{-padx             Int        20                        0 "%d >= 0"}
{-foreground       Color      "SystemButtonText"        0 listbox}
{-background       Color      "SystemWindow"            0 listbox}
{-selectbackground Color      "SystemHighlight"         0 listbox}
{-selectforeground Color      "SystemHighlightText"     0 listbox}
{-font             String     "TkTextFont"              0 listbox}
{-width            TkResource ""                        0 listbox}
{-height           TkResource ""                        0 listbox}
{-redraw           Boolean    1                         0}
{-multicolumn      Boolean    0                         0}
{-dropovermode     Flag       "wpi"                     0 "wpi"}
{-selectmode       Enum       none                      1
{none single multiple}}
{-dropcmd          String     "ListBox::_drag_and_drop" 0}
{-autofocus        Boolean    1                         1}
{-selectfill       Boolean    0                         1}

{-sortargs         String     ""                        0}
{-sortinsert       Boolean    0                         0}

{-fg               Synonym    -foreground}
{-bg               Synonym    -background}
}

bind ListBox <FocusIn>   [list after idle {BWidget::refocus %W %W.c}]
bind ListBox <Destroy>   [list ListBox::_destroy %W]
bind ListBox <Configure> [list ListBox::_resize  %W]
bind ListBoxFocus <1>    [list focus %W]
bind ListBox <Key-Up>    [list ListBox::_keyboard_navigation %W -1]
bind ListBox <Key-Down>  [list ListBox::_keyboard_navigation %W  1]

BWidget::bindMouseWheel ListBoxCanvas

variable _edit
}


proc ListBox::create { path args } {
Widget::initArgs ListBox $args maps

frame $path -class ListBox -bd 0 -highlightthickness 0 -relief flat  -takefocus 0

if {[package vsatisfies $::tk_version 8.4]} {
$path configure -padx 0 -pady 0
}

Widget::initFromODB ListBox $path $maps(ListBox)

Widget::getVariable $path data

set data(nrows) -1

set data(items)    {}
set data(anchor)   ""
set data(selitems) {}

set data(upd,level)   0
set data(upd,afterid) ""
set data(upd,level)   0
set data(upd,delete)  {}

set data(dnd,scroll)   ""
set data(dnd,afterid)  ""
set data(dnd,item)     ""

eval [list canvas $path.c] $maps(.c) -xscrollincrement 8  -background [Widget::getoption $path -background]
pack $path.c -expand yes -fill both

DragSite::setdrag $path $path.c ListBox::_init_drag_cmd  [Widget::cget $path -dragendcmd] 1
DropSite::setdrop $path $path.c ListBox::_over_cmd ListBox::_drop_cmd 1

Widget::create ListBox $path

set w  [Widget::cget $path -width]
set h  [Widget::cget $path -height]
set dy [Widget::cget $path -deltay]
$path.c configure -width [expr {$w*8}] -height [expr {$h*$dy}]  -yscrollincrement $dy

set bindtags [bindtags $path.c]
set bindtags [linsert $bindtags 1 $path ListBoxCanvas]

if {[Widget::cget $path -autofocus]} {
lappend bindtags ListBoxFocus
}
bindtags $path.c $bindtags

bind $path.c <Key-Up>   {ListBox::_keyboard_navigation [winfo parent %W] -1}
bind $path.c <Key-Down> {ListBox::_keyboard_navigation [winfo parent %W] 1}

if {![string equal [Widget::getoption $path -selectmode] "none"]} {
set cmd ListBox::_multiple_select
$path bindText <Button-1>          [list $cmd $path none]
$path bindText <Shift-Button-1>    [list $cmd $path shift]
$path bindText <Control-Button-1>  [list $cmd $path control]

$path bindImage <Button-1>         [list $cmd $path none]
$path bindImage <Shift-Button-1>   [list $cmd $path shift]
$path bindImage <Control-Button-1> [list $cmd $path control]
}

return $path
}


proc ListBox::cget { path option } {
return [Widget::cget $path $option]
}


proc ListBox::configure { path args } {
set res [Widget::configure $path $args]

set chdy [Widget::hasChanged $path -deltay dy]

set ch1 [expr {$chdy
|| [Widget::hasChanged $path -padx val]
|| [Widget::hasChanged $path -font font]
|| [Widget::hasChanged $path -multicolumn val]
|| [Widget::hasChanged $path -foreground fg]}]

set ch2 [expr {[Widget::hasChanged $path -selectbackground val] |
[Widget::hasChanged $path -selectforeground val]}]

if {[Widget::hasChanged $path -height h]} {
$path.c configure -height [expr {$h*$dy}]
}

if {[Widget::hasChanged $path -width w]} {
$path.c configure -width [expr {$w*8}]
}

if {[Widget::hasChanged $path -background bg]} {
$path.c configure -background $bg
$path.c itemconfigure box -fill $bg
}

if {$chdy} {
$path.c configure -yscrollincrement $dy
}

if {$ch1} {
_redraw_idle $path 2
} elseif {$ch2} {
_redraw_idle $path 1
}

if {[Widget::hasChanged $path -redraw bool] && $bool} {
Widget::getVariable $path data
set lvl $data(upd,level)
set data(upd,level) 0
_redraw_idle $path $lvl
}

set force [Widget::hasChanged $path -dragendcmd dragend]
DragSite::setdrag $path $path.c ListBox::_init_drag_cmd $dragend $force
DropSite::setdrop $path $path.c ListBox::_over_cmd ListBox::_drop_cmd

return $res
}


proc ListBox::activate { path index } {

}


proc ListBox::insert { path index item args } {
Widget::getVariable $path data

set item [Widget::nextIndex $path $item]

if {[info exists data(item,$item)]} {
return -code error "item \"$item\" already exists"
}

Widget::init ListBox::Item $path.$item $args

if {[string equal $index "end"]} {
lappend data(items) $item
} else {
set data(items) [linsert $data(items) $index $item]
}

set data(item,$item) 0
set data(upd,create,$item) $item

if {[Widget::getoption $path -sortinsert]} {
ListBox::_sort_idle $path
} else {
ListBox::_redraw_idle $path 2
}

return $item
}

proc ListBox::multipleinsert { path index args } {
Widget::getVariable $path data


if {[llength $args] == 1} {
set args [lindex $args 0]
}

set count 0
foreach {item iargs} $args {
if { [lsearch -exact $data(items) $item] != -1 } {
return -code error "item \"$item\" already exists"
}

if {$count==0} {
Widget::init ListBox::Item $path.$item $iargs
set firstpath $path.$item
} else {
Widget::copyinit ListBox::Item $firstpath $path.$item $iargs
}

set data(items) [linsert $data(items) $index $item]
set data(upd,create,$item) $item

incr count
}

_redraw_idle $path 2
return $item
}


proc ListBox::itemcget { path item option } {
return [Widget::cget $path.$item $option]
}


proc ListBox::itemconfigure { path item args } {
Widget::getVariable $path data

if {![info exists data(item,$item)]} {
return -code error "item \"$item\" does not exist"
}

set oldind [Widget::getoption $path.$item -indent]

set res   [Widget::configure $path.$item $args]
set chind [Widget::hasChanged $path.$item -indent indent]
set chw   [Widget::hasChanged $path.$item -window win]
set chi   [Widget::hasChanged $path.$item -image  img]
set cht   [Widget::hasChanged $path.$item -text txt]
set chf   [Widget::hasChanged $path.$item -font fnt]
set chfg  [Widget::hasChanged $path.$item -foreground fg]
set idn   [lindex $data(item,$item) 0]

_set_help $path $item

if {![string length $idn]} {
_redraw_idle $path 2
return $res
}

set oldb   [$path.c bbox $idn]
set coords [$path.c coords $idn]
set padx   [Widget::getoption $path -padx]
set x0     [expr {[lindex $coords 0]-$padx-$oldind+$indent}]
set y0     [lindex $coords 1]

if {$chw || $chi} {
set idi  [$path.c find withtag i:$item]
set type [lindex [$path.c gettags $idi] 0]
if { [string length $win] } {
if { [string equal $type "win"] } {
$path.c itemconfigure $idi -window $win
} else {
$path.c delete $idi
$path.c create window $x0 $y0 -window $win -anchor w  -tags [list win i:$item]
}
} elseif { [string length $img] } {
if { [string equal $type "img"] } {
$path.c itemconfigure $idi -image $img
} else {
$path.c delete $idi
$path.c create image $x0 $y0 -image $img -anchor w  -tags [list img i:$item]
}
} else {
$path.c delete $idi
}
}

if {$cht || $chf || $chfg} {
set fnt [_getoption $path $item -font]
set fg  [_getoption $path $item -foreground]
$path.c itemconfigure $idn -text $txt -font $fnt -fill $fg
_redraw_idle $path 1
}

if {$chind} {
$path.c coords $idn [expr {$x0+$padx}] $y0
$path.c coords i:$item $x0 $y0
_redraw_idle $path 1
}

if {[Widget::getoption $path -multicolumn] && ($cht || $chf || $chind)} {
set bbox [$path.c bbox $idn]
if {[lindex $bbox 2] > [lindex $oldb 2]} {
_redraw_idle $path 2
}
}

return $res
}


proc ListBox::bindText { path event script } {
if {[string length $script]} {
set map    [list %W $path]
set script [string map $map $script]
append script " \[ListBox::_get_current [list $path]\]"
}
$path.c bind "click" $event $script
}


proc ListBox::bindImage { path event script } {
if {[string length $script]} {
set map    [list %W $path]
set script [string map $map $script]
append script " \[ListBox::_get_current [list $path]\]"
}
$path.c bind "img" $event $script
}


proc ListBox::delete { path args } {
Widget::getVariable $path data

foreach litems $args {
foreach item $litems {
if {[set idx [lsearch -exact $data(items) $item]] != -1} {
set data(items) [lreplace $data(items) $idx $idx]
Widget::destroy $path.$item 0
unset data(item,$item)
if {[info exists data(upd,create,$item)]} {
unset data(upd,create,$item)
} else {
lappend data(upd,delete) $item
}
}
}
}

set sel $data(selitems)
set data(selitems) {}
eval [list ListBox::selection $path set] $sel
_redraw_idle $path 2

return
}


proc ListBox::clear { path } {
eval [list ListBox::delete $path] [ListBox::items $path]
}


proc ListBox::move { path item index } {
Widget::getVariable $path data

if {![info exists data(item,$item)]} {
return -code error "item \"$item\" does not exist"
}

set idx [lsearch -exact $data(items) $item]
set data(items) [linsert [lreplace $data(items) $idx $idx] $index $item]

_redraw_idle $path 2
}


proc ListBox::reorder { path neworder } {
Widget::getVariable $path data

set data(items) [BWidget::lreorder $data(items) $neworder]
_redraw_idle $path 2
}


proc ListBox::selection { path cmd args } {
Widget::getVariable $path data

switch -- $cmd {
"add" {
foreach item $args {
if { [lsearch -exact $data(selitems) $item] == -1 } {
if { [lsearch -exact $data(items) $item] != -1 } {
lappend data(selitems) $item
}
}
}
}

"clear" {
set data(selitems) {}
}

"get" {
return $data(selitems)
}

"includes" {
return [expr {[lsearch -exact $data(selitems) $args] != -1}]
}

"range" {
foreach {item1 item2} $args {break}

if {![info exists data(item,$item1)]} {
return -code error "item \"$item1\" does not exist"
}

if {![info exists data(item,$item2)]} {
return -code error "item \"$item2\" does not exist"
}

set index1  [ListBox::index $path $item1]
set index2  [ListBox::index $path $item2]
set indexes [list $index1 $index2]
if {$index1 > $index2} {
set indexes [list $index2 $index1]
}

set data(selitems) [eval [list ListBox::items $path] $indexes]
}

"remove" {
foreach item $args {
if {[set idx [lsearch -exact $data(selitems) $item]] != -1} {
set data(selitems) [lreplace $data(selitems) $idx $idx]
}
}
}

"set" {
set data(selitems) {}
foreach item $args {
if { [lsearch -exact $data(selitems) $item] == -1 } {
if { [lsearch -exact $data(items) $item] != -1 } {
lappend data(selitems) $item
}
}
}
}

"toggle" {
foreach item $args {
if {[set idx [lsearch -exact $data(selitems) $item]] != -1} {
set data(selitems) [lreplace $data(selitems) $idx $idx]
} else {
lappend data(selitems) $item
}
}
}

default {
return
}
}

_redraw_idle $path 1
}


proc ListBox::exists { path item } {
Widget::getVariable $path data
return [info exists data(item,$item)]
}


proc ListBox::index { path item } {
Widget::getVariable $path data

switch -glob -- $item {
"active" {
return [ListBox::selection $path get]
}

"end" {
return [llength $data(items)]
}

"@*" {
return [ListBox::find $path $item]
}

default {
return [lsearch -exact $data(items) $item]
}
}
}


proc ListBox::find { path findInfo {confine ""} } {
Widget::getVariable $path data

if {[regexp -- {^@([0-9]+),([0-9]+)$} $findInfo match x y]} {
set x [$path.c canvasx $x]
set y [$path.c canvasy $y]
} elseif {[regexp -- {^[0-9]+$} $findInfo lineNumber]} {
set dy [Widget::cget $path -deltay]
set y  [expr {$dy*($lineNumber+0.5)}]
set confine ""
} else {
return -code error "invalid find spec \"$findInfo\""
}

set found 0
set xi    0
foreach xs $data(xlist) {
if {$x <= $xs} {
foreach id [$path.c find overlapping $xi $y $xs $y] {
set ltags [$path.c gettags $id]
set item  [lindex $ltags 0]
if { [string equal $item "item"] ||
[string equal $item "img"]  ||
[string equal $item "win"] } {
set item [string range [lindex $ltags 1] 2 end]
set found 1
break
}
}
break
}
set  xi  $xs
}

if {$found} {
if {[string equal $confine "confine"]} {
set xi [expr {[lindex [$path.c coords n:$item] 0]-[Widget::getoption $path -padx]}]
set xs [lindex [$path.c bbox n:$item] 2]
if {$x >= $xi && $x <= $xs} {
return $item
}
} else {
return $item
}
}
return ""
}


proc ListBox::item { path first {last ""} } {
Widget::getVariable $path data

if { ![string length $last] } {
return [lindex $data(items) $first]
} else {
return [lrange $data(items) $first $last]
}
}


proc ListBox::items { path {first ""} {last ""}} {
Widget::getVariable $path data
if {![string length $first]} { return $data(items) }
if {![string length $last]}  { return [lindex $data(items) $first] }
return [lrange $data(items) $first $last]
}


proc ListBox::see { path item } {
Widget::getVariable $path data

if {[Widget::getoption $path -redraw] && $data(upd,afterid) != ""} {
after cancel $data(upd,afterid)
_redraw_listbox $path
}
set idn [$path.c find withtag n:$item]
if {[string length $idn]} {
ListBox::_see $path $idn right
ListBox::_see $path $idn left
}
}


proc ListBox::edit { path item text {verifycmd ""} {clickres 0} {select 1}} {
variable _edit
Widget::getVariable $path data

if { [Widget::getoption $path -redraw] && $data(upd,afterid) != "" } {
after cancel $data(upd,afterid)
_redraw_listbox $path
}
set idn [$path.c find withtag n:$item]
if { $idn != "" } {
ListBox::_see $path $idn right
ListBox::_see $path $idn left

set oldfg  [$path.c itemcget $idn -fill]
set sbg    [Widget::cget $path -selectbackground]
set coords [$path.c coords $idn]
set x      [lindex $coords 0]
set y      [lindex $coords 1]
set ht     [$path.c cget -highlightthickness]
set bd     [expr {[$path.c cget -borderwidth] + $ht}]
set w      [expr {[winfo width $path] - 2 * $bd}]
set wmax   [expr {[$path.c canvasx $w] - $x}]

$path.c itemconfigure $idn    -fill [Widget::cget $path -background]
$path.c itemconfigure s:$item -fill {} -outline {}

set _edit(text) $text
set _edit(wait) 0

set frame  [frame $path.edit  -relief flat -borderwidth 0 -highlightthickness 0  -background [Widget::cget $path -background]]

set ent    [entry $frame.edit  -width              0      -relief             solid  -borderwidth        1      -highlightthickness 0      -foreground         [_getoption $path $item -foreground]  -background         [Widget::cget $path -background]  -selectforeground   [Widget::cget $path -selectforeground]  -selectbackground   $sbg   -font               [_getoption $path $item -font]  -textvariable       ListBox::_edit(text)]
pack $ent -ipadx 8 -anchor w

set idw [$path.c create window $x $y -window $frame -anchor w]
trace variable ListBox::_edit(text) w  [list ListBox::_update_edit_size $path $ent $idw $wmax]
tkwait visibility $ent
grab  $frame
BWidget::focus set $ent
_update_edit_size $path $ent $idw $wmax
update

if {$select} {
$ent selection range 0 end
$ent icursor end
$ent xview end
}

bindtags $ent [list $ent Entry]
bind $ent <Escape> {set ListBox::_edit(wait) 0}
bind $ent <Return> {set ListBox::_edit(wait) 1}

if {$clickres == 0 || $clickres == 1} {
bind $frame <Button>  [list set ListBox::_edit(wait) $clickres]
}

set ok 0
while {!$ok} {
tkwait variable ListBox::_edit(wait)
if { !$_edit(wait) || [llength $verifycmd]==0 ||
[uplevel \#0 $verifycmd [list $_edit(text)]] } {
set ok 1
}
}

trace vdelete ListBox::_edit(text) w  [list ListBox::_update_edit_size $path $ent $idw $wmax]
grab release $frame
BWidget::focus release $ent
destroy $frame
$path.c delete $idw
$path.c itemconfigure $idn    -fill $oldfg
$path.c itemconfigure s:$item -fill $sbg -outline $sbg

if {$_edit(wait)} {
return $_edit(text)
}
}
}


proc ListBox::xview { path args } {
return [eval [linsert $args 0 $path.c xview]]
}


proc ListBox::yview { path args } {
return [eval [linsert $args 0 $path.c yview]]
}


proc ListBox::getcanvas { path } {
return $path.c
}


proc ListBox::curselection { path } {
return [$path selection get]
}


proc ListBox::sort { path } {
Widget::getVariable $path data

foreach item $data(items) {
lappend list [list [Widget::getoption $path.$item -text] $item]
}

set data(items) [list]
foreach pair [eval lsort [Widget::getoption $path -sortargs] [list $list]] {
lappend data(items) [lindex $pair 1]
}

if {[info exists data(sort,afterid)]} {
unset data(sort,afterid)
}

_redraw_idle $path 2
}


proc ListBox::_sort_idle { path } {
Widget::getVariable $path data

if {![info exists data(sort,afterid)]} {
set data(sort,afterid) [after idle [list ListBox::sort $path]]
}
}


proc ListBox::_update_edit_size { path entry idw wmax args } {
set entw [winfo reqwidth $entry]
if { $entw >= $wmax } {
$path.c itemconfigure $idw -width $wmax
} else {
$path.c itemconfigure $idw -width 0
}
}


proc ListBox::_getoption { path item option } {
set value [Widget::getoption $path.$item $option]
if {![string length $value]} {
set value [Widget::getoption $path $option]
}
return $value
}


proc ListBox::_destroy { path } {
Widget::getVariable $path data

if {$data(upd,afterid) != ""} {
after cancel $data(upd,afterid)
}

if {$data(dnd,afterid) != ""} {
after cancel $data(dnd,afterid)
}

foreach item $data(items) {
Widget::destroy $path.$item 0
}

Widget::destroy $path
}


proc ListBox::_see { path idn side } {
set bbox [$path.c bbox $idn]
set scrl [$path.c cget -scrollregion]

set ymax [lindex $scrl 3]
set dy   [$path.c cget -yscrollincrement]
set yv   [$path.c yview]
set yv0  [expr {round([lindex $yv 0]*$ymax/$dy)}]
set yv1  [expr {round([lindex $yv 1]*$ymax/$dy)}]
set y    [expr {int([lindex [$path.c coords $idn] 1]/$dy)}]
if { $y < $yv0 } {
$path.c yview scroll [expr {$y-$yv0}] units
} elseif { $y >= $yv1 } {
$path.c yview scroll [expr {$y-$yv1+1}] units
}

set xmax [lindex $scrl 2]
set dx   [$path.c cget -xscrollincrement]
set xv   [$path.c xview]
if { [string equal $side "right"] } {
set xv1 [expr {round([lindex $xv 1]*$xmax/$dx)}]
set x1  [expr {int([lindex $bbox 2]/$dx)}]
if { $x1 >= $xv1 } {
$path.c xview scroll [expr {$x1-$xv1+1}] units
}
} else {
set xv0 [expr {round([lindex $xv 0]*$xmax/$dx)}]
set x0  [expr {int([lindex $bbox 0]/$dx)}]
if { $x0 < $xv0 } {
$path.c xview scroll [expr {$x0-$xv0}] units
}
}
}


proc ListBox::_update_scrollregion { path } {
set bd   [$path.c cget -borderwidth]
set ht   [$path.c cget -highlightthickness]
set bd   [expr {2*($bd + $ht)}]
set w    [expr {[winfo width  $path] - $bd}]
set h    [expr {[winfo height $path] - $bd}]
set xinc [$path.c cget -xscrollincrement]
set yinc [$path.c cget -yscrollincrement]
set bbox [$path.c bbox item win img]
if { [llength $bbox] } {
set xs [lindex $bbox 2]
set ys [lindex $bbox 3]

if { $w < $xs } {
set w [expr {int($xs)}]
if { [set r [expr {$w % $xinc}]] } {
set w [expr {$w+$xinc-$r}]
}
}
if { $h < $ys } {
set h [expr {int($ys)}]
if { [set r [expr {$h % $yinc}]] } {
set h [expr {$h+$yinc-$r}]
}
}
}

$path.c configure -scrollregion [list 0 0 $w $h]
}


proc ListBox::_update_select_fill { path } {
Widget::getVariable $path data

set width [winfo width $path]

foreach item $data(items) {
set bbox [$path.c bbox [lindex $data(item,$item) 0]]
set bbox [list 0 [lindex $bbox 1] $width [lindex $bbox 3]]
$path.c coords [lindex $data(item,$item) 2] $bbox
}

_redraw_selection $path
}


proc ListBox::_draw_item {path item x0 x1 y bg selfill multi ww} {
set indent  [Widget::getoption $path.$item -indent]
set i [$path.c create text [expr {$x1+$indent}] $y  -text   [Widget::getoption $path.$item -text]  -fill   [_getoption        $path $item -foreground]  -font   [_getoption        $path $item -font]  -anchor w  -tags   [list item n:$item click]]

lappend citems $i

if { [set win [Widget::getoption $path.$item -window]] != "" } {
set i [$path.c create window [expr {$x0+$indent}] $y  -window $win -anchor w -tags [list win i:$item]]
lappend citems $i
} elseif { [set img [Widget::getoption $path.$item -image]] != "" } {
set i [$path.c create image [expr {$x0+$indent}] $y  -image $img -anchor w -tags [list img i:$item]]
lappend citems $i
} else {
lappend citems ""
}


if {$selfill && !$multi} {
set bbox  [$path.c bbox n:$item]
set bbox  [list 0 [lindex $bbox 1] $ww [lindex $bbox 3]]
set tags  [list box b:$item click]
set i [$path.c create rect $bbox -fill $bg -width 0 -tags $tags]
$path.c lower $i
lappend citems $i
} else {
lappend citems ""
}

Widget::getVariable $path data
set data(item,$item) $citems

_set_help $path $item
}


proc ListBox::_redraw_items { path } {
Widget::getVariable $path data

set cursor [$path.c cget -cursor]
$path.c configure -cursor watch
update idletasks ; # make sure watch cursor is reflected

set dx    [Widget::getoption $path -deltax]
set dy    [Widget::cget $path -deltay]
set padx  [Widget::getoption $path -padx]
set y0    [expr {$dy/2}]
set x0    4
set x1    [expr {$x0+$padx}]
set drawn [list]
set nitems 0
set data(xlist) [list]

if {[Widget::getoption $path -multicolumn]} {
set nrows $data(nrows)
} else {
set nrows [llength $data(items)]
}

foreach item $data(upd,delete) {
$path.c delete i:$item n:$item s:$item b:$item
}

set bg      [Widget::cget $path -background]
set selfill [Widget::cget $path -selectfill]
set multi   [Widget::cget $path -multicolumn]
set ww      [winfo width $path]
foreach item $data(items) {
if {[info exists data(upd,create,$item)]} {
_draw_item $path $item $x0 $x1 $y0 $bg $selfill $multi $ww
set nitem  [lindex $data(item,$item) 0]
set iitem  [lindex $data(item,$item) 1]
set bitem  [lindex $data(item,$item) 2]
unset data(upd,create,$item)
} else {
set nitem  [lindex $data(item,$item) 0]
set iitem  [lindex $data(item,$item) 1]
set bitem  [lindex $data(item,$item) 2]
set indent [Widget::getoption $path.$item -indent]
$path.c coords $nitem [list [expr {$x1+$indent}] $y0]
if {[string length $iitem]} {
$path.c coords $iitem [list [expr {$x0+$indent}] $y0]
}

$path.c itemconfigure $nitem  -font [ListBox::_getoption $path $item -font]  -fill [ListBox::_getoption $path $item -foreground]
}

incr y0 $dy
incr nitems
if {$selfill} {
lappend drawn $bitem
} else {
lappend drawn $nitem
}

if {$nitems == $nrows} {
set y0     [expr {$dy/2}]
set bbox   [eval [linsert $drawn 0 $path.c bbox]]
set drawn  [list]
set x0     [expr {[lindex $bbox 2]+$dx}]
set x1     [expr {$x0+$padx}]
set nitems 0
lappend data(xlist) [lindex $bbox 2]
}
}

if {$nitems && $nitems < $nrows} {
set bbox  [eval [linsert $drawn 0 $path.c bbox]]
lappend data(xlist) [lindex $bbox 2]
}

set data(upd,delete) {}
$path.c configure -cursor $cursor
}


proc ListBox::_redraw_selection { path } {
Widget::getVariable $path data

set selbg   [Widget::cget $path -selectbackground]
set selfg   [Widget::cget $path -selectforeground]
set selfill [Widget::getoption $path -selectfill]
set multi   [Widget::getoption $path -multicolumn]
foreach id [$path.c find withtag sel] {
set item [string range [lindex [$path.c gettags $id] 1] 2 end]
$path.c itemconfigure [lindex $data(item,$item) 0]  -fill [_getoption $path $item -foreground]
}
$path.c delete sel
if {$selfill && !$multi} {
set width [winfo width $path]
}
foreach item $data(selitems) {
set nitem [lindex $data(item,$item) 0]
set bbox [$path.c bbox $nitem]

if {[llength $bbox]} {
if {$selfill && !$multi} {
set bbox [list 0 [lindex $bbox 1] $width [lindex $bbox 3]]
}
set tags [list sel s:$item click]
set id [$path.c create rectangle $bbox  -fill $selbg -outline $selbg -tags $tags]
$path.c itemconfigure $nitem -fill $selfg
$path.c lower $id
$path.c lower b:$item
}
}
}


proc ListBox::_redraw_listbox { path } {
Widget::getVariable $path data

if {[Widget::getoption $path -redraw]} {
if {$data(upd,level) == 2} {
_redraw_items $path
}

_redraw_selection $path
_update_scrollregion $path

if {[Widget::cget $path -selectfill]} {
_update_select_fill $path
}

set data(upd,level)   0
set data(upd,afterid) ""
}
}


proc ListBox::_redraw_idle { path level } {
Widget::getVariable $path data

if {$data(nrows) != -1} {
if {[Widget::getoption $path -redraw] && $data(upd,afterid) == ""} {
set data(upd,afterid)  [after idle [list ListBox::_redraw_listbox $path]]
}
}
if {$level > $data(upd,level)} {
set data(upd,level) $level
}
}


proc ListBox::_resize { path } {
Widget::getVariable $path data

if {[Widget::getoption $path -multicolumn]} {
set bd    [$path.c cget -borderwidth]
set ht    [$path.c cget -highlightthickness]
set bd    [expr {$bd + $ht}]
set h     [expr {[winfo height $path] - 2*$bd}]
set nrows [expr {$h/[$path.c cget -yscrollincrement]}]
if {$nrows == 0} {
set nrows 1
}

if {$nrows != $data(nrows)} {
set data(nrows) $nrows
_redraw_idle $path 2
} else {
_update_scrollregion $path
}
} elseif {$data(nrows) == -1} {
set data(nrows) 0
ListBox::_redraw_listbox $path
if {[Widget::cget $path -selectfill]} {
_update_select_fill $path
}
} else {
if {[Widget::cget $path -selectfill]} {
_update_select_fill $path
}

_update_scrollregion $path
}
}


proc ListBox::_init_drag_cmd { path X Y top } {
set path [winfo parent $path]
set ltags [$path.c gettags current]
set item  [lindex $ltags 0]
if {[string equal $item "item"]
|| [string equal $item "img"]
|| [string equal $item "win"]} {
set item [string range [lindex $ltags 1] 2 end]
if {[llength [set cmd [Widget::getoption $path -draginitcmd]]]} {
return [uplevel \#0 $cmd [list $path $item $top]]
}
if { [set type [Widget::getoption $path -dragtype]] == "" } {
set type "LISTBOX_ITEM"
}
if { [set img [Widget::getoption $path.$item -image]] != "" } {
pack [label $top.l -image $img -padx 0 -pady 0]
}
return [list $type {copy move link} $item]
}
return {}
}


proc ListBox::_drop_cmd { path source X Y op type dnddata } {
set path [winfo parent $path]
Widget::getVariable $path data

if { [string length $data(dnd,afterid)] } {
after cancel $data(dnd,afterid)
set data(dnd,afterid) ""
}
$path.c delete drop
set data(dnd,scroll) ""
if { [llength $data(dnd,item)] || ![llength $data(items)] } {
if {[llength [set cmd [Widget::getoption $path -dropcmd]]]} {
return [uplevel \#0 $cmd [list $path $source $data(dnd,item) $op $type $dnddata]]
}
}
return 0
}


proc ListBox::_over_cmd { path source event X Y op type dnddata } {
set path [winfo parent $path]
Widget::getVariable $path data

if { [string equal $event "leave"] } {
$path.c delete drop
if { [string length $data(dnd,afterid)] } {
after cancel $data(dnd,afterid)
set data(dnd,afterid) ""
}
set data(dnd,scroll) ""
return 0
}

if { [string equal $event "enter"] } {
set mode [Widget::getoption $path -dropovermode]
set data(dnd,mode) 0
foreach c {w p i} {
set data(dnd,mode) [expr {($data(dnd,mode) << 1) | ([string first $c $mode] != -1)}]
}
}

set x [expr {$X-[winfo rootx $path]}]
set y [expr {$Y-[winfo rooty $path]}]
$path.c delete drop
set data(dnd,item) ""

if { $data(dnd,mode) != 4 && [_auto_scroll $path $x $y] != "" } {
return 2
}

if { $data(dnd,mode) & 4 } {
set target [list widget]
set vmode  4
} else {
set target [list ""]
set vmode  0
}
if { ($data(dnd,mode) & 2) && ![llength $data(items)] } {
lappend target "" 0
set vmode [expr {$vmode | 2}]
}

if { ($data(dnd,mode) & 3) && [llength $data(items)]} {
set len  [llength $data(items)]
set xc   [$path.c canvasx $x]
set yc   [$path.c canvasy $y]
set dy   [$path.c cget -yscrollincrement]
set line [expr {int($yc/$dy)}]
set yi   [expr {$line*$dy}]
set ys   [expr {$yi+$dy}]
set xi   0
set pos  $line
if { [Widget::getoption $path -multicolumn] } {
set nrows $data(nrows)
} else {
set nrows $len
}
if { $line < $nrows } {
foreach xs $data(xlist) {
if { $xc <= $xs } {
break
}
set  xi  $xs
incr pos $nrows
}
if { $pos < $len } {
set item [lindex $data(items) $pos]
set xi   [expr {[lindex [$path.c coords n:$item] 0]-[Widget::getoption $path -padx]-1}]
if { $data(dnd,mode) & 1 } {
lappend target $item
set vmode [expr {$vmode | 1}]
} else {
lappend target ""
}

if { $data(dnd,mode) & 2 } {
if { $yc >= $yi+$dy/2 } {
incr pos
set yl $ys
} else {
set yl $yi
}
lappend target $pos
set vmode [expr {$vmode | 2}]
} else {
lappend target ""
}
} else {
lappend target "" ""
}
} else {
lappend target "" ""
}

if { ($vmode & 3) == 3 } {
if { $yc-$yi <= 3 || $ys-$yc <= 3 } {
lappend target "position"
} else {
lappend target "item"
}
}
}

if {$vmode && [llength [set cmd [Widget::getoption $path -dropovercmd]]]} {
set res   [uplevel \#0 $cmd [list $source $target $op $type $dnddata]]
set code  [lindex $res 0]
set vmode 0
if {$code & 1} {
switch -exact -- [lindex $res 1] {
item     {set vmode 1}
position {set vmode 2}
widget   {set vmode 4}
}
}
} else {
if { ($vmode & 3) == 3 } {
if { [string equal [lindex $target 3] "position"] } {
set vmode [expr {$vmode & ~1}]
} else {
set vmode [expr {$vmode & ~2}]
}
}

if { $data(dnd,mode) == 4 || $data(dnd,mode) == 0 } {
set code 1
} else {
set code 3
}
}

if {[llength $data(items)]} {
if { $vmode & 1 } {
set data(dnd,item) [list "item" [lindex $target 1]]
if {[Widget::getoption $path -selectfill]} { incr xs -8 }
$path.c create rectangle $xi $yi $xs $ys -tags drop
} elseif { $vmode & 2 } {
set data(dnd,item) [concat "position" [lindex $target 2]]
$path.c create line $xi $yl $xs $yl -tags drop
} elseif { $vmode & 4 } {
set data(dnd,item) [list "widget"]
} else {
set code [expr {$code & 2}]
}
}

if { $code & 1 } {
DropSite::setcursor based_arrow_down
} else {
DropSite::setcursor dot
}
return $code
}


proc ListBox::_auto_scroll { path x y } {
Widget::getVariable $path data

set xmax   [winfo width  $path]
set ymax   [winfo height $path]
set scroll {}
if { $y <= 6 } {
if { [lindex [$path.c yview] 0] > 0 } {
set scroll [list yview -1]
DropSite::setcursor sb_up_arrow
}
} elseif { $y >= $ymax-6 } {
if { [lindex [$path.c yview] 1] < 1 } {
set scroll [list yview 1]
DropSite::setcursor sb_down_arrow
}
} elseif { $x <= 6 } {
if { [lindex [$path.c xview] 0] > 0 } {
set scroll [list xview -1]
DropSite::setcursor sb_left_arrow
}
} elseif { $x >= $xmax-6 } {
if { [lindex [$path.c xview] 1] < 1 } {
set scroll [list xview 1]
DropSite::setcursor sb_right_arrow
}
}

if { [string length $data(dnd,afterid)] && ![string equal $data(dnd,scroll) $scroll] } {
after cancel $data(dnd,afterid)
set data(dnd,afterid) ""
}

set data(dnd,scroll) $scroll
if { [llength $scroll] && ![string length $data(dnd,afterid)] } {
set data(dnd,afterid) [after 200 [list ListBox::_scroll $path $scroll]]
}
return $data(dnd,afterid)

}

proc ListBox::_multiple_select { path mode item } {
Widget::getVariable $path data

if {![info exists data(item,$data(anchor))]} { set data(anchor) $item }

if {[string equal [Widget::getoption $path -selectmode] "single"]} {
set mode none
}

switch -exact -- $mode {
"none" {
_mouse_select $path set $item
set data(anchor) $item
}

"control" {
_mouse_select $path toggle $item
set data(anchor) $item
}

"shift" {
_mouse_select $path range $data(anchor) $item
}
}
}


proc ListBox::_scroll { path cmd dir } {
Widget::getVariable $path data

if { ($dir == -1 && [lindex [$path.c $cmd] 0] > 0) ||
($dir == 1  && [lindex [$path.c $cmd] 1] < 1) } {
$path $cmd scroll $dir units
set data(dnd,afterid)  [after 100 [list ListBox::_scroll $path $cmd $dir]]
} else {
set data(dnd,afterid) ""
DropSite::setcursor dot
}
}

proc ListBox::_set_help { path node } {
Widget::getVariable $path help

set item $path.$node
set opts [list -helptype -helptext -helpvar]
foreach {cty ctx cv} [eval [linsert $opts 0 Widget::hasChangedX $item]] break
set text [Widget::getoption $item -helptext]

if { (![info exists help($node)] && $text != "") || $cty || $ctx || $cv } {
set help($node) 1
set type [Widget::getoption $item -helptype]
switch $type {
balloon {
DynamicHelp::register $path.c balloon n:$node $text
DynamicHelp::register $path.c balloon i:$node $text
DynamicHelp::register $path.c balloon b:$node $text
}
variable {
set var [Widget::getoption $item -helpvar]
DynamicHelp::register $path.c variable n:$node $var $text
DynamicHelp::register $path.c variable i:$node $var $text
DynamicHelp::register $path.c variable b:$node $var $text
}
}
}
}

proc ListBox::_mouse_select { path cmd args } {
eval [linsert $args 0 selection $path $cmd]
switch -- $cmd {
"add" - "clear" - "remove" - "set" - "toggle" - "range" {
event generate $path <<ListboxSelect>>
}
}
}


proc ListBox::_get_current { path } {
set t [$path.c gettags current]
return [string range [lindex $t 1] 2 end]
}


proc ListBox::_drag_and_drop { path from endItem operation type startItem } {
if {[winfo parent $from] != $path} { return }

set place [lindex $endItem 0]
set i     [lindex $endItem 1]

switch -- $place {
"position" {
set idx $i
}

"item" {
set idx [$path index $i]
}

default {
return
}
}

if {$idx > [$path index $startItem]} { incr idx -1 }

if {[string equal $operation "copy"]} {
set options [Widget::options $path.$startItem]
eval [linsert $options 0 $path insert $idx $startItem\#auto]
} else {
$path move $startItem $idx
}
}


proc ListBox::_keyboard_navigation { path dir } {
Widget::getVariable $path data

set sel [$path index [lindex [$path selection get] end]]
if {$dir > 0} {
incr sel
if {$sel >= [llength $data(items)]} { return }
} else {
incr sel -1
if {$sel < 0} { return }
}
set item [lindex $data(items) $sel]
ListBox::see $path $item
_mouse_select $path set $item
}


namespace eval Separator {
Widget::define Separator separator

Widget::declare Separator {
{-background Color      "SystemButtonFace" 0}
{-cursor     String     ""         0}
{-relief     Enum       groove     0 {ridge groove}}
{-orient     Enum       horizontal 1 {horizontal vertical}}
{-bg         Synonym    -background}
}
Widget::addmap Separator "" :cmd { -background {} -cursor {} }

bind Separator <Destroy> [list Widget::destroy %W]
}


proc Separator::create { path args } {
Widget::initArgs Separator $args maps

eval [list frame $path -class Separator] $maps(:cmd)

Widget::initFromODB Separator $path $maps(Separator)

if {[string equal [Widget::cget $path -orient] "horizontal"]} {
$path configure -borderwidth 1 -height 2
} else {
$path configure -borderwidth 1 -width 2
}

if {[string equal [Widget::cget $path -relief] "groove"]} {
$path configure -relief sunken
} else {
$path configure -relief raised
}

return [Widget::create Separator $path]
}


proc Separator::configure { path args } {
set res [Widget::configure $path $args]

if { [Widget::hasChanged $path -relief relief] } {
if { $relief == "groove" } {
$path:cmd configure -relief sunken
} else {
$path:cmd configure -relief raised
}
}

return $res
}


proc Separator::cget { path option } {
return [Widget::cget $path $option]
}


namespace eval TTKButton {
Widget::define TTKButton button DynamicHelp

Widget::tkinclude TTKButton ttk::button :cmd  remove { -class }

Widget::declare TTKButton {
{-name                 String     ""      0 }
{-repeatdelay          Int        0       0 "%d >= 0" }
{-repeatinterval       Int        0       0 "%d >= 0" }
}

if 0 {
Widget::declare Button {
{-name                 String     ""      0 }
{-text                 String     ""      0 }
{-textvariable         String     ""      0 }
{-underline            Int        -1      0 "%d >= -1" }
{-armcommand           String     ""      0 }
{-disarmcommand        String     ""      0 }
{-command              String     ""      0 }
{-state                TkResource ""      0 button }
{-repeatdelay          Int        0       0 "%d >= 0" }
{-repeatinterval       Int        0       0 "%d >= 0" }
{-relief               Enum       raised  0
{raised sunken flat ridge solid groove link}}
{-image                String     ""      0 }
{-activeimage          String     ""      0 }
{-pressedimage         String     ""      0 }
{-disabledimage        String     ""      0 }
}

Widget::syncoptions Button "" :cmd { -text {} -underline {} }
}

DynamicHelp::include TTKButton balloon

variable _current ""
variable _pressed ""

}


proc TTKButton::create { path args } {
foreach {opt val} $args {
if {[Widget::optionExists TTKButton $opt]} {
lappend opts $opt $val
}
}

Widget::initArgs TTKButton $opts maps

eval [list ttk::button $path] $maps(:cmd)

Widget::initFromODB TTKButton $path $maps(TTKButton)

set var [$path cget -textvariable]
if {![string length $var]} {
set desc [BWidget::getname [Widget::getoption $path -name]]
if {[llength $desc]} {
set text  [lindex $desc 0]
set under [lindex $desc 1]
$path configure -text $text -underline $under
} else {
set text  [$path cget -text]
set under [$path cget -underline]
}
} else {
set text  ""
set under -1
$path configure -underline $under
}

set top [winfo toplevel $path]
bindtags $path [list $path TButton TTKButton $top all]

DynamicHelp::sethelp $path $path 1

return [Widget::create TTKButton $path]
}


proc TTKButton::configure { path args } {
set oldunder [$path:cmd cget -underline]
if {$oldunder != -1} {
set text      [$path:cmd cget -text]
set oldaccel1 [string tolower [string index $text $oldunder]]
set oldaccel2 [string toupper $oldaccel1]
} else {
set oldaccel1 ""
set oldaccel2 ""
}
set res [Widget::configure $path $args]

if {[Widget::anyChangedX $path -textvariable -name -text -underline]} {
set var   [Widget::cget $path -textvariable]
set text  [Widget::cget $path -text]
set under [Widget::cget $path -underline]

if {![string length $var]} {
set desc [BWidget::getname [Widget::cget $path -name]]
if {[llength $desc]} {
set text  [lindex $desc 0]
set under [lindex $desc 1]
}
} else {
set under -1
set text  ""
}
set top [winfo toplevel $path]
if {![string equal $oldaccel1 ""]} {
bind $top <Alt-$oldaccel1> {}
bind $top <Alt-$oldaccel2> {}
}
set accel1 [string tolower [string index $text $under]]
set accel2 [string toupper $accel1]
if {![string equal $accel1 ""]} {
bind $top <Alt-$accel1> [list TTKButton::invoke $path]
bind $top <Alt-$accel2> [list TTKButton::invoke $path]
}
$path:cmd configure -text $text -underline $under -textvariable $var
}

DynamicHelp::sethelp $path $path

return $res
}


proc TTKButton::cget { path option } {
Widget::cget $path $option
}


proc TTKButton::state { path args } {
return [uplevel #0 [list $path:cmd state] $args]
}


proc TTKButton::instate { path args } {
return [uplevel #0 [list $path:cmd instate] $args]
}


proc TTKButton::invoke { path } {
return [uplevel #0 [list $path:cmd invoke]]
}


proc TTKButton::_enter { path } {
variable _current
variable _pressed

set _current $path
if {![string equal [Widget::cget $path -state] "disabled"]} {
$path:cmd configure -state active
if {[string equal $_pressed $path]} {
$path:cmd configure -relief sunken
} elseif {[string equal [Widget::cget $path -relief] "link"]} {
$path:cmd configure -relief raised
}

set image [Widget::cget $path -activeimage]
if {[string equal $_pressed $path]} {
set pressedimage [Widget::cget $path -pressedimage]
if {![string equal $pressedimage ""]} { set image $pressedimage }
}
if {![string equal $image ""]} { $path:cmd configure -image $image }
}
}


proc TTKButton::_leave { path } {
variable _current
variable _pressed

set _current ""
if {[string equal [Widget::cget $path -state] "disabled"]} {
set dimg [Widget::cget $path -disabledimage]
if {![string equal $dimg ""]} { $path:cmd configure -state normal }
} else {
set relief [Widget::cget $path -relief]
if {[string equal $_pressed $path]} {
if {[string equal $relief "link"]} {
set relief raised
}
} elseif {[string equal $relief "link"]} {
set relief flat
}

$path:cmd configure  -relief $relief  -state  [Widget::cget $path -state]  -image  [Widget::cget $path -image]
}
}


proc TTKButton::_press { path } {
variable _pressed

if {![string equal [Widget::cget $path -state] "disabled"]} {
set _pressed $path
$path:cmd configure -relief sunken

set img [Widget::cget $path -pressedimage]
if {![string equal $img ""]} { $path:cmd configure -image $img }

set cmd [Widget::getoption $path -armcommand]
if {![string equal $cmd ""]} {
uplevel \#0 $cmd
set repeatdelay [Widget::getoption $path -repeatdelay]
set repeatint [Widget::getoption $path -repeatinterval]
if {$repeatdelay > 0} {
after $repeatdelay [list TTKButton::_repeat $path]
} elseif {$repeatint > 0} {
after $repeatint [list TTKButton::_repeat $path]
}
}
}
}


proc TTKButton::_release { path } {
variable _current
variable _pressed

if {[string equal $_pressed $path]} {
set pressed $_pressed
set _pressed ""
set relief [Widget::getoption $path -relief]
after cancel [list TTKButton::_repeat $path]

if {[string equal $relief "link"]} {
set relief raised
}

set image [Widget::cget $path -image]
if {[string equal $pressed $path]} {
set activeimage [Widget::cget $path -activeimage]
if {![string equal $activeimage ""]} { set image $activeimage }
}

$path:cmd configure -relief $relief -image $image

set cmd [Widget::getoption $path -disarmcommand]
if {![string equal $cmd ""]} {
uplevel \#0 $cmd
}

if {[string equal $_current $path] &&
![string equal [Widget::cget $path -state] "disabled"] &&  [set cmd [Widget::getoption $path -command]] != ""} {
uplevel \#0 $cmd
}
}
}


proc TTKButton::_repeat { path } {
variable _current
variable _pressed

if {$_current == $path && $_pressed == $path &&
![string equal [Widget::cget $path -state] "disabled"] &&
[set cmd [Widget::getoption $path -armcommand]] != ""} {
uplevel \#0 $cmd
}
if { $_pressed == $path &&
([set delay [Widget::getoption $path -repeatinterval]] >0 ||
[set delay [Widget::getoption $path -repeatdelay]] > 0) } {
after $delay [list TTKButton::_repeat $path]
}
}


namespace eval Button {
if {[BWidget::using ttk]} {
Widget::define Button button TTKButton DynamicHelp
} else {
Widget::define Button button DynamicHelp
}

set remove [list -command -relief -text -textvariable  -underline -image -state]
if {[info tclversion] > 8.3} {
lappend remove -repeatdelay -repeatinterval
}

Widget::tkinclude Button button :cmd remove $remove

Widget::declare Button {
{-name                 String     ""      0 }
{-text                 String     ""      0 }
{-textvariable         String     ""      0 }
{-underline            Int        -1      0 "%d >= -1" }
{-armcommand           String     ""      0 }
{-disarmcommand        String     ""      0 }
{-command              String     ""      0 }
{-state                TkResource ""      0 button }
{-repeatdelay          Int        0       0 "%d >= 0" }
{-repeatinterval       Int        0       0 "%d >= 0" }
{-relief               Enum       raised  0
{raised sunken flat ridge solid groove link}}
{-image                String     ""      0 }
{-activeimage          String     ""      0 }
{-pressedimage         String     ""      0 }
{-disabledimage        String     ""      0 }
}

Widget::addmap Button "" :cmd { -text {} -underline {} }

DynamicHelp::include Button balloon

variable _current ""
variable _pressed ""

bind BwButton <Enter>           {Button::_enter %W}
bind BwButton <Leave>           {Button::_leave %W}
bind BwButton <ButtonPress-1>   {Button::_press %W}
bind BwButton <ButtonRelease-1> {Button::_release %W}
bind BwButton <Key-space>       {Button::invoke %W; break}
bind BwButton <Return>          {Button::invoke %W; break}
bind BwButton <Destroy>         {Widget::destroy %W}
}


proc Button::create { path args } {
if {[BWidget::using ttk]} {
return [eval [list TTKButton::create $path] $args]
}

Widget::initArgs Button $args maps

eval [list button $path] $maps(:cmd)

Widget::initFromODB Button $path $maps(Button)

set var [$path cget -textvariable]
if {![string length $var]} {
set desc [BWidget::getname [Widget::getoption $path -name]]
if {[llength $desc]} {
set text  [lindex $desc 0]
set under [lindex $desc 1]
$path configure -text $text -underline $under
} else {
set text  [$path cget -text]
set under [$path cget -underline]
}
} else {
set text  ""
set under -1
$path configure -underline $under
}

set relief [Widget::getoption $path -relief]
if {[string equal $relief "link"]} { set relief flat }

set opts [list]
lappend opts -text $text -underline $under -textvariable $var
lappend opts -relief $relief -state [Widget::cget $path -state]
lappend opts -image [Widget::cget $path -image]

eval [list $path configure] $opts

set top [winfo toplevel $path]
bindtags $path [list $path BwButton $top all]

set accel1 [string tolower [string index $text $under]]
set accel2 [string toupper $accel1]
if {[string length $accel1]} {
bind $top <Alt-$accel1> [list Button::invoke $path]
bind $top <Alt-$accel2> [list Button::invoke $path]
}

DynamicHelp::sethelp $path $path 1

return [Widget::create Button $path]
}


proc Button::configure { path args } {
set oldunder [$path:cmd cget -underline]
if {$oldunder != -1} {
set text      [$path:cmd cget -text]
set oldaccel1 [string tolower [string index $text $oldunder]]
set oldaccel2 [string toupper $oldaccel1]
} else {
set oldaccel1 ""
set oldaccel2 ""
}
set res [Widget::configure $path $args]

if {[Widget::anyChangedX $path -relief -state]} {
set state  [Widget::cget $path -state]
set relief [Widget::cget $path -relief]
if {[string equal $relief "link"]} {
if {[string equal $state "active"]} {
set relief "raised"
} else {
set relief "flat"
}
}

$path:cmd configure -relief $relief

set dimg [Widget::cget $path -disabledimage]
if {[string equal $state "disabled"] && ![string equal $dimg ""]} {
$path:cmd configure -image $dimg
} else {
$path:cmd configure  -state      $state  -image      [Widget::cget $path -image]  -background [Widget::cget $path -background]  -foreground [Widget::cget $path -foreground]
}
}

if {[Widget::hasChanged $path -image image]} {
$path:cmd configure -image $image
}

if {[Widget::anyChangedX $path -textvariable -name -text -underline]} {
set var   [Widget::cget $path -textvariable]
set text  [Widget::cget $path -text]
set under [Widget::cget $path -underline]

if {![string length $var]} {
set desc [BWidget::getname [Widget::cget $path -name]]
if {[llength $desc]} {
set text  [lindex $desc 0]
set under [lindex $desc 1]
}
} else {
set under -1
set text  ""
}
set top [winfo toplevel $path]
if {![string equal $oldaccel1 ""]} {
bind $top <Alt-$oldaccel1> {}
bind $top <Alt-$oldaccel2> {}
}
set accel1 [string tolower [string index $text $under]]
set accel2 [string toupper $accel1]
if {![string equal $accel1 ""]} {
bind $top <Alt-$accel1> [list Button::invoke $path]
bind $top <Alt-$accel2> [list Button::invoke $path]
}
$path:cmd configure -text $text -underline $under -textvariable $var
}

DynamicHelp::sethelp $path $path

return $res
}


proc Button::cget { path option } {
Widget::cget $path $option
}


proc Button::invoke { path } {
if {[string equal [Widget::cget $path -state] "disabled"]} { return }

$path:cmd configure -state active -relief sunken
update idletasks

set cmd [Widget::getoption $path -armcommand]
if {![string equal $cmd ""]} {
uplevel \#0 $cmd
}
after 100
set relief [Widget::getoption $path -relief]
if {[string equal $relief "link"]} {
set relief flat
}
$path:cmd configure  -state  [Widget::getoption $path -state]  -relief $relief
set cmd [Widget::getoption $path -disarmcommand]
if {![string equal $cmd ""]} {
uplevel \#0 $cmd
}
set cmd [Widget::getoption $path -command]
if {![string equal $cmd ""]} {
uplevel \#0 $cmd
}
}


proc Button::_enter { path } {
variable _current
variable _pressed

set _current $path
if {![string equal [Widget::cget $path -state] "disabled"]} {
$path:cmd configure -state active
if {[string equal $_pressed $path]} {
$path:cmd configure -relief sunken
} elseif {[string equal [Widget::cget $path -relief] "link"]} {
$path:cmd configure -relief raised
}

set image [Widget::cget $path -activeimage]
if {[string equal $_pressed $path]} {
set pressedimage [Widget::cget $path -pressedimage]
if {![string equal $pressedimage ""]} { set image $pressedimage }
}
if {![string equal $image ""]} { $path:cmd configure -image $image }
}
}


proc Button::_leave { path } {
variable _current
variable _pressed

set _current ""
if {[string equal [Widget::cget $path -state] "disabled"]} {
set dimg [Widget::cget $path -disabledimage]
if {![string equal $dimg ""]} { $path:cmd configure -state normal }
} else {
set relief [Widget::cget $path -relief]
if {[string equal $_pressed $path]} {
if {[string equal $relief "link"]} {
set relief raised
}
} elseif {[string equal $relief "link"]} {
set relief flat
}

$path:cmd configure  -relief $relief  -state  [Widget::cget $path -state]  -image  [Widget::cget $path -image]
}
}


proc Button::_press { path } {
variable _pressed

if {![string equal [Widget::cget $path -state] "disabled"]} {
set _pressed $path
$path:cmd configure -relief sunken

set img [Widget::cget $path -pressedimage]
if {![string equal $img ""]} { $path:cmd configure -image $img }

set cmd [Widget::getoption $path -armcommand]
if {![string equal $cmd ""]} {
uplevel \#0 $cmd
set repeatdelay [Widget::getoption $path -repeatdelay]
set repeatint [Widget::getoption $path -repeatinterval]
if {$repeatdelay > 0} {
after $repeatdelay "Button::_repeat $path"
} elseif {$repeatint > 0} {
after $repeatint "Button::_repeat $path"
}
}
}
}


proc Button::_release { path } {
variable _current
variable _pressed

if {[string equal $_pressed $path]} {
set pressed $_pressed
set _pressed ""
set relief [Widget::getoption $path -relief]
after cancel "Button::_repeat $path"

if {[string equal $relief "link"]} {
set relief raised
}

set image [Widget::cget $path -image]
if {[string equal $pressed $path]} {
set activeimage [Widget::cget $path -activeimage]
if {![string equal $activeimage ""]} { set image $activeimage }
}

$path:cmd configure -relief $relief -image $image

set cmd [Widget::getoption $path -disarmcommand]
if {![string equal $cmd ""]} {
uplevel \#0 $cmd
}

if {[string equal $_current $path] &&
![string equal [Widget::cget $path -state] "disabled"] &&  [set cmd [Widget::getoption $path -command]] != ""} {
uplevel \#0 $cmd
}
}
}


proc Button::_repeat { path } {
variable _current
variable _pressed

if {$_current == $path && $_pressed == $path &&
![string equal [Widget::cget $path -state] "disabled"] &&
[set cmd [Widget::getoption $path -armcommand]] != ""} {
uplevel \#0 $cmd
}
if { $_pressed == $path &&
([set delay [Widget::getoption $path -repeatinterval]] >0 ||
[set delay [Widget::getoption $path -repeatdelay]] > 0) } {
after $delay "Button::_repeat $path"
}
}


namespace eval ButtonBox {
Widget::define ButtonBox buttonbox Button

namespace eval Button {
Widget::declare ButtonBox::Button {
{-tags              String    ""            0}
{-hide              Boolean   0             0}
{-value             String    ""            0}
{-spacing           Int       -1            0 "%d >= -1"}
}
}

if {[BWidget::using ttk]} {
Widget::tkinclude ButtonBox ttk::frame :cmd  remove { -class -colormap -container -padx -pady -visual }
} else {
Widget::tkinclude ButtonBox frame :cmd  remove { -class -colormap -container -padx -pady -visual }
}

Widget::declare ButtonBox {
{-orient      Enum       horizontal 0 {horizontal vertical}}
{-state       Enum       "normal"   0 {disabled normal}}
{-homogeneous Boolean    1          0}
{-spacing     Int        10         0 "%d >= 0"}
{-padx        Int        1          0}
{-pady        Int        1          0}
{-default     String     -1         0}
{-rows        Int        "0"        0}
{-columns     Int        "0"        0}
}

bind ButtonBox <Map>     [list ButtonBox::_realize %W]
bind ButtonBox <Destroy> [list ButtonBox::_destroy %W]
}


proc ButtonBox::create { path args } {
Widget::initArgs ButtonBox $args maps

if {[BWidget::using ttk]} {
eval [list ttk::frame $path -class ButtonBox] $maps(:cmd)
} else {
eval [list frame $path -class ButtonBox] $maps(:cmd)
}

Widget::initFromODB ButtonBox $path $maps(ButtonBox)

if {![BWidget::using ttk]
&& [info tclversion] >= 8.4} { $path configure -padx 0 -pady 0 }

Widget::getVariable $path data

set data(max)      0
set data(nbuttons) 0
set data(realized) 0
set data(buttons)  [list]
set data(widgets)  [list]
set data(default)  [Widget::getoption $path -default]

return [Widget::create ButtonBox $path]
}


proc ButtonBox::configure { path args } {
Widget::getVariable $path data

set res [Widget::configure $path $args]

if {[Widget::hasChanged $path -default val]} {
_select_default $path
}

if {[Widget::hasChanged $path -state val]} {
foreach i $data(buttons) {
$path.b$i configure -state $val
}
}

set opts [list -rows -columns -orient -homogeneous]
if {[eval [list Widget::anyChangedX $path] $opts]} { _redraw $path }

return $res
}


proc ButtonBox::cget { path option } {
return [Widget::cget $path $option]
}


proc ButtonBox::add { path args } {
return [eval insert $path end $args]
}


proc ButtonBox::insert { path idx args } {
Widget::getVariable $path data
Widget::getVariable $path tags

set but $path.b$data(nbuttons)

set class Button
if {[BWidget::using ttk]} { set class TTKButton }
array set maps [Widget::splitArgs $args $class ButtonBox::Button]

Widget::init ButtonBox::Button $but#bbox $maps(ButtonBox::Button)

set spacing [Widget::getOption -spacing -1 $but#bbox $path]

if {[string equal $idx "end"] && $data(nbuttons)} {
set data(spacing,$data(nbuttons)) [list left $spacing]
lappend data(widgets) $but
lappend data(buttons) $data(nbuttons)
} else {
set data(spacing,$data(nbuttons)) [list right $spacing]
set data(widgets) [linsert $data(widgets) $idx $but]
set data(buttons) [linsert $data(buttons) $idx $data(nbuttons)]
}

set opts [list]
if {![BWidget::using ttk]} {
lappend opts -padx [Widget::getoption $path -padx]
lappend opts -pady [Widget::getoption $path -pady]
}

eval [list Button::create $but] $opts $maps(:cmd) $maps($class)

foreach tag [Widget::getoption $but#bbox -tags] {
lappend tags($tag) $but
if {![info exists tags($tag,state)]} { set tags($tag,state) 1 }
}

_redraw_idle $path

_select_default $path

incr data(nbuttons)

return $but
}


proc ButtonBox::delete { path index } {
Widget::getVariable $path data
Widget::getVariable $path tags

set button $path.b$i
set widget $button#bbox

set i [lindex $data(buttons) $index]
set data(buttons) [lreplace $data(buttons) $index $index]
set data(widgets) [lreplace $data(widgets) $index $index]

foreach tag [Widget::getoption $widget -tags] {
set tags($tag) [BWidget::lremove $tags($tag) $button]
if {![llength $tags($tag)]} {
unset tags($tag) tags($tag,state)
}
}

Widget::destroy $widget 0

destroy $button

_redraw_idle $path
}


proc ButtonBox::buttons { path {first ""} {last ""} } {
Widget::getVariable $path data
if {![string length $first]} { return $data(widgets) }
if {![string length $last]}  { return [lindex $data(widgets) $first] }
return [lrange $data(widgets) $first $last]
}


proc ButtonBox::itemconfigure { path index args } {
Widget::getVariable $path data

set idx    [index $path $index]
set button $path.b$idx

set class Button
if {[BWidget::using ttk]} { set class TTKButton }

if {![llength $args]} {
set res [${class}::configure $button]
eval lappend res [Widget::configure $button#bbox [list]]
return [lsort $res]
}

if {[llength $args] == 1} {
if {[Widget::optionExists Button $args]} {
return [${class}::configure $button $args]
} else {
return [Widget::configure $button#bbox $args]
}
}

array set maps [Widget::splitArgs $args $class ButtonBox::Button]

if {[info exists maps(ButtonBox::Button)]} {
set oldtags [Widget::getoption $button#bbox -tags]

Widget::configure $button#bbox $maps(ButtonBox::Button)

if {[Widget::hasChanged $button#bbox -tags newtags]} {
Widget::getVariable $path tags

foreach tag $oldtags {
set tags($tag) [BWidget::lremove $tags($tag) $button]
if {![llength $tags($tag)]} {
unset tags($tag) tags($tag,state)
}
}

foreach tag $newtags {
lappend tags($tag) $button
if {![info exists tags($tag,state)]} { set tags($tag,state) 1 }
}
}

set redraw 0

if {[Widget::hasChanged $button#bbox -spacing spacing]} {
set redraw 1
set data(spacing,$idx) [lreplace $data(spacing,$idx) 1 1 $spacing]
}

if {[Widget::hasChanged $button#bbox -hide hide]} {
set redraw 1
}

if {$redraw} { _redraw_idle $path }
}

if {[llength $maps(:cmd)] || [llength $maps($class)]} {
eval [list ${class}::configure $button] $maps(:cmd) $maps($class)
}
}


proc ButtonBox::itemcget { path index option } {
set button $path.b[index $path $index]
if {[Widget::optionExists Button $option]} {
return [Button::cget $button $option]
} else {
return [Widget::cget $button#bbox $option]
}
}


proc ButtonBox::setfocus { path index } {
set but $path.b[index $path $index]
if {[winfo exists $but]} { focus $but }
}


proc ButtonBox::invoke { path index } {
set but $path.b[index $path $index]
if {[winfo exists $but]} { $but invoke }
}


proc ButtonBox::index { path index } {
Widget::getVariable $path data

set n [expr {$data(nbuttons) - 1}]

if {[string is integer -strict $index]} {
set res $index
if {$index > $n} { set res $n }
return $res
}

if {[string equal $index "default"]} {
set res [Widget::getoption $path -default]
} elseif {[string equal $index "end"] || [string equal $index "last"]} {
set res $n
} elseif {[set res [lsearch -exact $data(widgets) $index]] > -1} {
} else {
foreach i $data(buttons) {
set w $path.b$i
lappend text  [$w cget -text]
lappend names [$w cget -name]
}
set len [llength $data(buttons)]
set res [lsearch -exact [concat $names $text] $index]
if {$res >= $len} { set res [expr {$res - $len}] }
}
return $res
}



proc ButtonBox::gettags { path } {
Widget::getVariable $path tags

set tags [list]

foreach tag [array names tags] {
if {![string match "*,state" $tag]} { lappend tags $tag }
}
return $tags
}



proc ButtonBox::setbuttonstate { path tag state } {
Widget::getVariable $path tags

if {![info exists tags($tag)]} { return }

set tags($tag,state) $state
foreach button $tags($tag) {
set expression 1
foreach buttontag [Widget::getoption $button#bbox -tags] {
lappend expression && $tags($buttontag,state)
}

if {[expr $expression]} {
set state normal
} else {
set state disabled
}

$button configure -state $state
}
}


proc ButtonBox::getbuttonstate { path tag } {
Widget::getVariable $path tags

if {![info exists tags($tag)]} {
return -code error "unknown tag \"$tag\""
}

return $tags($tag,state)
}


proc ButtonBox::_select_default { path } {
Widget::getVariable $path data

set default [Widget::getoption $path -default]
set data(default) [ButtonBox::index $path $default]

foreach i $data(buttons) {
set button $path.b$i
if {$i == $data(default)} {
if {[BWidget::using ttk]} {
$button state focus
} else {
$button configure -default active
}
} else {
if {[BWidget::using ttk]} {
$button state !focus
} else {
$button configure -default normal
}
}
incr i
}
}


proc ButtonBox::_redraw_idle { path } {
Widget::getVariable $path data

if {![info exists data(redraw)]} {
set data(redraw) 1
after idle [list ButtonBox::_redraw $path]
}
}


proc ButtonBox::_redraw { path } {
Widget::getVariable $path data
Widget::getVariable $path buttons

set data(redraw) 1


set rows [Widget::getoption $path -rows]
set cols [Widget::getoption $path -columns]

set idx     0
set rowidx  0
set colidx  0
set idxs [list]
foreach i $data(buttons) {
set dir     [lindex $data(spacing,$i) 0]
set spacing [lindex $data(spacing,$i) 1]
set but $path.b$i
if {[string equal [Widget::getoption $path -orient] "horizontal"]} {
if {![Widget::getoption $but#bbox -hide]} {
grid $but -column $idx -row $rowidx -sticky nsew
} else {
grid remove $but
}

if {[Widget::getoption $path -homogeneous]} {
set req [winfo reqwidth $but]
if { $req > $data(max) } {
grid columnconfigure $path [expr {2*$i}] -minsize $req
set data(max) $req
}
grid columnconfigure $path $idx -minsize $data(max) -weight 1
} else {
grid columnconfigure $path $idx -weight 0
}

set col [expr {$idx - 1}]
if {[string equal $dir "right"]} { set col [expr {$idx + 1}] }
if {$col > 0 && [lsearch -exact $idxs $col] < 0} {
lappend idxs $col
grid columnconfigure $path $col -minsize $spacing
}

incr colidx

if {$cols > 0 && $colidx >= $cols} {
set idx -2
incr rowidx
set colidx 0
}
} else {
if {![Widget::getoption $but#bbox -hide]} {
grid $but -column $colidx -row $idx -sticky nsew
} else {
grid remove $but
}

grid rowconfigure $path $idx -weight 0

set row [expr {$idx - 1}]
if {[string equal $dir "right"]} { set row [expr {$idx + 1}] }
if {$row > 0 && [lsearch -exact $idxs $row] < 0} {
lappend idxs $row
grid rowconfigure $path $row -minsize $spacing
}

incr rowidx

if {$rows > 0 && $rowidx >= $rows} {
set idx -2
incr colidx
set rowidx 0
}
}
incr idx 2
}

unset data(redraw)
}


proc ButtonBox::_realize { path } {
Widget::getVariable $path data

if {!$data(realized)} {
set data(realized) 1
ButtonBox::_redraw $path
}
}


proc ButtonBox::_destroy { path } {
Widget::getVariable $path data

foreach i $data(buttons) {
set button $path.b$i
Widget::destroy $button#bbox 0
}

Widget::destroy $path
}


namespace eval Dialog {
Widget::define Dialog dialog ButtonBox

Widget::bwinclude Dialog ButtonBox .bbox  remove {
-orient -background
} initialize {
-spacing 10 -padx 10
}

Widget::declare Dialog {
{-background    Color    "SystemButtonFace" 0}
{-title         String   ""      0}
{-geometry      String   ""      0}
{-modal         Enum     local   0 {none local global}}
{-bitmap        String   ""      1}
{-image         String   ""      1}
{-separator     Boolean  0       1}
{-cancel        Int      -1      0 "%d >= -1"}
{-parent        String   ""      0}
{-side          Enum     bottom  1 {bottom left top right}}
{-anchor        Enum     c       1 {n e w s c}}
{-class         String   Dialog  1}
{-transient     Boolean  1       1}
{-place         Enum     center  1 {none center left right above below}}
{-placerelative Boolean  1       1}

{-bg            Synonym  -background}
}

if {![BWidget::using ttk]} {
Widget::addmap Dialog "" :cmd   {-background {}}
Widget::addmap Dialog "" .frame {-background {}}
}

bind Dialog <Destroy> [list Dialog::_destroy %W]
}


proc Dialog::create { path args } {
Widget::initArgs Dialog $args maps

array set _args $maps(Dialog)
set class "Dialog"
if {[info exists _args(-class)]} { set class $_args(-class) }

if {[string equal $::tcl_platform(platform) "unix"]} {
set re raised
set bd 1
} else {
set re flat
set bd 0
}
toplevel $path -relief $re -borderwidth $bd -class $class  -background $::BWidget::colors(SystemButtonFace)
wm protocol $path WM_DELETE_WINDOW [list Dialog::enddialog $path -1 1]

Widget::initFromODB Dialog $path $maps(Dialog)

bindtags $path [list $path $class all]
wm overrideredirect $path 1
wm title $path [Widget::cget $path -title]

set parent [Widget::getoption $path -parent]
if {![winfo exists $parent]} {
set parent [winfo parent $path]
if {$parent ne "."} { Widget::setoption $path -parent $parent }
}

if {[Widget::getoption $path -transient]} {
wm transient $path [winfo toplevel $parent]
}
wm withdraw $path

set side [Widget::cget $path -side]
if {[string equal $side "left"] || [string equal $side "right"]} {
set orient vertical
} else {
set orient horizontal
}

eval [list ButtonBox::create $path.bbox] $maps(.bbox) -orient $orient
set frame [frame $path.frame -relief flat -borderwidth 0]

set opts [list]

if {![BWidget::using ttk]} {
set bg [$path cget -background]
lappend opts -background $bg
$path configure -background $bg
$frame configure -background $bg
}

if {[set bitmap [Widget::getoption $path -image]] != ""} {
eval [list label $path.label -image $bitmap] $opts
} elseif {[set bitmap [Widget::getoption $path -bitmap]] != ""} {
eval [list label $path.label -bitmap $bitmap] $opts
}
if {[Widget::getoption $path -separator]} {
eval [list Separator::create $path.sep -orient $orient] $opts
}

Widget::getVariable $path data
set data(nbut)     0
set data(realized) 0

bind $path <Return> [list Dialog::ok $path]
bind $path <Escape> [list Dialog::cancel $path]

return [Widget::create Dialog $path]
}


proc Dialog::configure { path args } {
set res [Widget::configure $path $args]

if { [Widget::hasChanged $path -title title] } {
wm title $path $title
}
if { [Widget::hasChanged $path -background bg] } {
if { [winfo exists $path.label] } {
$path.label configure -background $bg
}
if { [winfo exists $path.sep] } {
Separator::configure $path.sep -background $bg
}
}
return $res
}


proc Dialog::cget { path option } {
return [Widget::cget $path $option]
}


proc Dialog::getframe { path } {
return $path.frame
}


proc Dialog::add { path args } {
Widget::getVariable $path data

set idx $data(nbut)
set cmd [list ButtonBox::add $path.bbox  -command [list Dialog::enddialog $path $idx]]
set res [eval $cmd -value $idx $args]
incr data(nbut)
return $res
}


proc Dialog::itemconfigure { path index args } {
return [eval [list ButtonBox::itemconfigure $path.bbox $index] $args]
}


proc Dialog::itemcget { path index option } {
return [ButtonBox::itemcget $path.bbox $index $option]
}


proc Dialog::invoke { path index } {
ButtonBox::invoke $path.bbox $index
}


proc Dialog::setfocus { path index } {
ButtonBox::setfocus $path.bbox $index
}


proc Dialog::enddialog { path result {destroy 0} } {
Widget::getVariable $path data

if {$result ne -1} {
if {[ButtonBox::index $path.bbox $result] > -1} {
set result [ButtonBox::itemcget $path.bbox $result -value]
}
}

set data(result) $result

event generate $path <<DialogEnd>>

if {$destroy} {
destroy $path
}

return $result
}


proc Dialog::draw { path {focus ""} {overrideredirect 0} {geometry ""} } {
Widget::getVariable $path data

set parent [Widget::getoption $path -parent]
if {!$data(realized)} {
set data(realized) 1
if {[llength [winfo children $path.bbox]]} {
set side [Widget::getoption $path -side]
if {[string equal $side "left"] || [string equal $side "right"]} {
set pad  -padx
set fill y
} else {
set pad  -pady
set fill x
}

pack $path.bbox -side $side  -anchor [Widget::getoption $path -anchor] -padx 1m -pady {5 10}

if {[winfo exists $path.sep]} {
pack $path.sep -side $side -fill $fill $pad 2m
}
}

if {[winfo exists $path.label]} {
pack $path.label -side left -anchor n -padx {10 5} -pady 3m
}

pack $path.frame -padx 1m -pady 1m -fill both -expand yes
}

if {![string length $geometry]} {
set geometry [Widget::getoption $path -geometry]
}

set width    0
set height   0
set place    [Widget::getoption $path -place]
set usePlace [expr ![string equal $place "none"]]
if {[string length $geometry]} {
set split [split $geometry x+-]

if {[llength $split] > 2} {
set usePlace 0
} else {
BWidget::lassign $split width height
}
}

wm geometry $path $geometry

if {$usePlace} {
set relative [Widget::getoption $path -placerelative]
if {$relative && [winfo exists $parent]} {
BWidget::place $path $width $height $place $parent
} else {
BWidget::place $path $width $height $place
}
}

update idletasks
wm overrideredirect $path $overrideredirect
wm deiconify $path

if {![winfo exists $parent] ||  ([wm state [winfo toplevel $parent]] != "withdrawn")} {
tkwait visibility $path
}

BWidget::focus set $path
if {[winfo exists $focus]} {
focus -force $focus
} else {
ButtonBox::setfocus $path.bbox default
}

if {[set grab [Widget::cget $path -modal]] != "none"} {
BWidget::grab $grab $path
set res [Dialog::wait $path]
withdraw $path
return $res
}

return
}


proc Dialog::wait { path } {
Widget::getVariable $path data

if {[info exists data(result)]} { unset data($result) }

tkwait variable [Widget::widgetVar $path data(result)]
if {[info exists data(result)]} {
set res $data(result)
unset data(result)
} else {
set res -1
}

return $res
}


proc Dialog::withdraw { path } {
BWidget::grab release $path
BWidget::focus release $path
if {[winfo exists $path]} {
wm withdraw $path
}
}


proc Dialog::ok { path } {
ButtonBox::invoke $path.bbox default
}


proc Dialog::cancel { path } {
ButtonBox::invoke $path.bbox [Widget::getoption $path -cancel]
}


proc Dialog::_destroy { path } {
BWidget::grab  release $path
BWidget::focus release $path
Widget::destroy $path
}


namespace eval ScrolledWindow {
Widget::define ScrolledWindow scrollw

Widget::tkinclude ScrolledWindow frame :cmd  remove { -class -colormap -visual }

Widget::declare ScrolledWindow {
{-class       String     "ScrolledWindow" 1}
{-scrollbar   Enum	 both 0 {none both vertical horizontal}}
{-auto	      Enum	 both 0 {none both vertical horizontal}}
{-sides	      Enum	 se   0 {ne en nw wn se es sw ws}}
{-size	      Int	 0    1 "%d >= 0"}
{-ipad	      Int	 1    1 "%d >= 0"}
{-managed     Boolean	 1    1}
}

bind ScrolledWindow <Map>     [list ScrolledWindow::_realize %W]
bind ScrolledWindow <Destroy> [list ScrolledWindow::_destroy %W]
}


proc ScrolledWindow::create { path args } {
Widget::initArgs ScrolledWindow $args maps

array set _args $args
set class ScrolledWindow
if {[info exists _args(-class)]} { set class $_args(-class) }

eval [list frame $path -class $class] $maps(:cmd)

Widget::initFromODB ScrolledWindow $path $args

Widget::getVariable $path data

if {![string equal $class "ScrolledWindow"]} {
set top [winfo toplevel $path]
bindtags $path [list $path $class ScrolledWindow $top all]
}

set bg [$path cget -background]

set useTtk 0
if {[BWidget::using ttk] && ![BWidget::using aqua]} {
set useTtk 1
ttk::scrollbar $path.vscroll
ttk::scrollbar $path.hscroll -orient horizontal
} else {
scrollbar $path.hscroll  -highlightthickness 0 -takefocus 0  -orient	 horiz	 -relief	 sunken	 -bg	 $bg
scrollbar $path.vscroll  -highlightthickness 0 -takefocus 0  -orient	 vert	 -relief	 sunken	 -bg	 $bg
}

set data(vmin)     -1
set data(vmax)     -1
set data(hmin)     -1
set data(hmax)     -1

set data(afterId)  ""
set data(realized) 0

_setData $path  [Widget::cget $path -scrollbar]  [Widget::cget $path -auto]  [Widget::cget $path -sides]

if {[Widget::cget $path -managed]} {
set data(hsb,packed) $data(hsb,present)
set data(vsb,packed) $data(vsb,present)
} else {
set data(hsb,packed) 0
set data(vsb,packed) 0
}

if {!$useTtk} {
set sbsize [Widget::cget $path -size]

if {$sbsize} {
$path.vscroll configure -width $sbsize
$path.hscroll configure -width $sbsize
}
}

set data(ipad) [Widget::cget $path -ipad]

if {$data(hsb,packed)} {
grid $path.hscroll -column 1 -row $data(hsb,row)  -sticky ew -ipady $data(ipad)
}
if {$data(vsb,packed)} {
grid $path.vscroll -column $data(vsb,column) -row 1  -sticky ns -ipadx $data(ipad)
}

grid columnconfigure $path 1 -weight 1
grid rowconfigure	 $path 1 -weight 1

return [Widget::create ScrolledWindow $path]
}


proc ScrolledWindow::getframe { path } {
return $path
}


proc ScrolledWindow::setwidget { path widget } {
Widget::getVariable $path data

if {[info exists data(widget)] && [winfo exists $data(widget)]
&& ![string equal $data(widget) $widget]} {
grid remove $data(widget)
$data(widget) configure -xscrollcommand "" -yscrollcommand ""
}

set data(widget) $widget
grid $widget -in $path -row 1 -column 1 -sticky news

$path.hscroll configure -command [list $widget xview]
$path.vscroll configure -command [list $widget yview]
$widget configure  -xscrollcommand [list ScrolledWindow::_set_hscroll $path]  -yscrollcommand [list ScrolledWindow::_set_vscroll $path]
}


proc ScrolledWindow::getwidget { path } {
Widget::getVariable $path data
if {[info exists data(widget)]} { return $data(widget) }
}


proc ScrolledWindow::configure { path args } {
Widget::getVariable $path data

set res [Widget::configure $path $args]

if {[Widget::hasChanged $path -background bg]} {
catch { $path.hscroll configure -background $bg }
catch { $path.vscroll configure -background $bg }
}

if {[Widget::hasChanged $path -scrollbar scrollbar]
|| [Widget::hasChanged $path -auto  auto]
|| [Widget::hasChanged $path -sides sides]} {
_setData $path $scrollbar $auto $sides

BWidget::lassign [$path.hscroll get] vmin vmax
set data(hsb,packed) [expr {$data(hsb,present) &&  (!$data(hsb,auto) || ($vmin != 0 || $vmax != 1))}]

BWidget::lassign [$path.vscroll get] vmin vmax
set data(vsb,packed) [expr {$data(vsb,present) &&  (!$data(vsb,auto) || ($vmin != 0 || $vmax != 1))}]

set data(ipad) [Widget::cget $path -ipad]

if {$data(hsb,packed)} {
grid $path.hscroll -column 1 -row $data(hsb,row)  -sticky ew -ipady $data(ipad)
}
if {$data(vsb,packed)} {
grid $path.vscroll -column $data(vsb,column) -row 1  -sticky ns -ipadx $data(ipad)
}
}
return $res
}


proc ScrolledWindow::cget { path option } {
return [Widget::cget $path $option]
}


proc ScrolledWindow::_set_hscroll { path vmin vmax } {
Widget::getVariable $path data

$path.hscroll set $vmin $vmax

set data(hmin) $vmin
set data(hmax) $vmax

_redraw_after $path
}


proc ScrolledWindow::_set_vscroll { path vmin vmax } {
Widget::getVariable $path data

$path.vscroll set $vmin $vmax

set data(vmin) $vmin
set data(vmax) $vmax

_redraw_after $path
}


proc ScrolledWindow::_setData {path scrollbar auto sides} {
Widget::getVariable $path data

set sb    [lsearch -exact {none horizontal vertical both} $scrollbar]
set auto  [lsearch -exact {none horizontal vertical both} $auto]

set data(hsb,present)  [expr {($sb & 1) != 0}]
set data(hsb,auto)	   [expr {($auto & 1) != 0}]
set data(hsb,row)	   [expr {[string match *n* $sides] ? 0 : 2}]

set data(vsb,present)  [expr {($sb & 2) != 0}]
set data(vsb,auto)	   [expr {($auto & 2) != 0}]
set data(vsb,column)   [expr {[string match *w* $sides] ? 0 : 2}]
}


proc ScrolledWindow::_redraw_after { path } {
Widget::getVariable $path data
after cancel $data(afterId)
set data(afterId) [after 5 [list ScrolledWindow::_redraw $path]]
}


proc ScrolledWindow::_redraw { path } {
if {![Widget::exists $path]} { return }

Widget::getVariable $path data

if {!$data(realized)} { return }

if {$data(hsb,present) && $data(hsb,auto)} {
if {$data(hsb,packed) && $data(hmin) == 0 && $data(hmax) == 1} {
set data(hsb,packed) 0
grid remove $path.hscroll
} elseif {!$data(hsb,packed) && ($data(hmin)!=0 || $data(hmax)!=1)} {
set data(hsb,packed) 1
grid $path.hscroll -column 1 -row $data(hsb,row)  -sticky ew -ipady $data(ipad)
}
}

if {$data(vsb,present) && $data(vsb,auto)} {
if {$data(vsb,packed) && $data(vmin) == 0 && $data(vmax) == 1} {
set data(vsb,packed) 0
grid remove $path.vscroll
} elseif {!$data(vsb,packed) && ($data(vmin)!=0 || $data(vmax)!=1) } {
set data(vsb,packed) 1
grid $path.vscroll -column $data(vsb,column) -row 1  -sticky ns -ipadx $data(ipad)
}
}
}


proc ScrolledWindow::_realize { path } {
Widget::getVariable $path data
set data(realized) 1
}


proc ScrolledWindow::_destroy { path } {
Widget::getVariable $path data
after cancel $data(afterId)
Widget::destroy $path
}


if {0} {

IconLibrary icons

icons load -find 1 -directory $kdedir -extension png -findgroups  [list {actions act} {apps app} {devices dev}
{filesystems file} {mimetypes mime}]
}


package require Tcl 8.4

namespace eval IconLibrary {
Widget::define IconLibrary icons

Widget::declare IconLibrary {
{-file          String    "tkIcons"                 0}
{-icons         String    ""                        0}
{-sizes         String    ""                        0}
{-groups        String    ""                        0}
{-create        Boolean   0                         0}
{-directory     String    ""                        0}

{-find          Boolean   0                         0}
{-extension     String    "gif"                     0}
{-findsizes     String    "16 22"                   0}
{-findgroups    String    "act app dev file mime"   0}
}

namespace eval Icon {
Widget::declare IconLibrary::Icon {
{-size      String    ""                        1}
{-type      String    ""                        1}
{-file      String    ""                        1}
{-data      String    ""                        1}
{-image     String    ""                        1}
{-imageargs String    ""                        1}
{-filegroup String    ""                        1}
{-workgroup String    ""                        1}
}
}

namespace eval NamesArgs {
Widget::declare IconLibrary::NamesArgs {
{-icons         String    ""                        0}
{-sizes         String    ""                        0}
{-groups        String    ""                        0}
}
}

variable  sizeMap
array set sizeMap {
16x16   16
22x22   22
32x32   32
48x48   48
64x64   64
128x128 128
}

variable  groupMapArray
array set groupMapArray {
apps            app
actions         act
devices         dev
mimetypes       mime
filesystems     file
}

variable groupMap

foreach name [array names groupMapArray] {
lappend groupMap [list $name $groupMapArray($name)]
}
}


proc IconLibrary::create { library args } {
Widget::init IconLibrary $library $args

Widget::getVariable $library data

set data(icons) [list]

if {[llength $args]} { eval [list IconLibrary::load $library] $args }

return [Widget::create IconLibrary $library 0]
}


proc IconLibrary::load { library args } {
Widget::getVariable $library data

Widget::init IconLibrary $library $args

set file      [Widget::getoption $library -file]
set create    [Widget::getoption $library -create]
set iconlist  [Widget::getoption $library -icons]
set sizelist  [Widget::getoption $library -sizes]
set grouplist [Widget::getoption $library -groups]
set directory [Widget::getoption $library -directory]

set filename $file
if {![string length $directory]} {
set directory [file dirname $file]
} elseif {[string length $file]} {
set filename [file join $directory $file]
}

if {[Widget::getoption $library -find]} {
if {![string length $directory]} {
return -code error "cannot find images without -directory"
}

set ext        [Widget::getoption $library -extension]
set findsizes  [Widget::getoption $library -findsizes]
set findgroups [Widget::getoption $library -findgroups]

foreach size $findsizes {
set size  [IconLibrary::_get_size $size]

set sizedir [file join $directory $size]
if {![file exists $sizedir]} { continue }

foreach group $findgroups {
set filegroup [lindex $group 0]
set workgroup [lindex $group 1]
if {[llength $group] == 1} { set workgroup $filegroup }

set groupdir [file join $sizedir $filegroup]
if {![file exists $groupdir]} { continue }

foreach imagefile [glob -nocomplain -dir $groupdir *.$ext] {
set image [file root [file tail $imagefile]]
set image $workgroup$image$size
lappend data(icons) $image

set icon $library#$image
set exists [expr {[Widget::exists $icon]
&& [string length [Widget::getoption $icon -image]]}]

Widget::init IconLibrary::Icon $icon  [list -size $size -type file -file $imagefile  -filegroup $filegroup -workgroup $workgroup  -data "" -image ""]

if {$exists && !$create} {
IconLibrary::image $library $image
}
}
}
}

if {![file exists $filename]} {
if {$create} { _create_icons $library $data(icons) }
set data(icons) [lsort -unique $data(icons)]
return $data(icons)
}
}

if {![file isfile $filename] || ![file readable $filename]} {
return -code error "couldn't open \"$filename\": no such file"
}

set iLen [llength $iconlist]
set sLen [llength $sizelist]
set gLen [llength $grouplist]

set fp [open $filename]

while {[gets $fp line] != -1} {
if {[string equal [string index $line 0] "#"]} { continue }

set list [split $line :]
if {[llength $list] < 5} { continue }

BWidget::lassign $list image workgroup filegroup size type imagedata
set size [IconLibrary::_get_size_int $size]

if {($gLen && [lsearch -exact $grouplist $workgroup] < 0)
|| ($sLen && [lsearch -exact $sizelist $size] < 0)
|| ($iLen && [lsearch -exact $iconlist $image] < 0)} { continue }

set file ""
if {[string equal $type "file"]} {
if {![string length $imagedata]} { continue }

if {[string is integer $size]} { set size ${size}x${size} }
set file [file join $directory $size $filegroup $imagedata]
set images($image,file) $file
}

lappend data(icons) $image

set icon $library#$image
set exists [expr {[Widget::exists $icon]
&& [string length [Widget::getoption $icon -image]]}]

Widget::init IconLibrary::Icon $icon  [list -size $size -type $type -file $file -data $imagedata  -filegroup $filegroup -workgroup $workgroup -image ""]

if {$exists && !$create} {
IconLibrary::image $library $image
}
}

close $fp

if {$create} { _create_icons $library $icons }

set data(icons) [lsort -unique $data(icons)]
}


proc IconLibrary::cget { library option } {
return [Widget::cget $library $option]
}


proc IconLibrary::configure { library args } {
return [Widget::configure $library $args]
}


proc IconLibrary::itemcget { library image option } {
if {![IconLibrary::exists $library $image]} {
return -code error "no such icon '$image'"
}

set path    $library#$image
set image   [Widget::getoption $path -image]
set created [string length $image]
if {$created && ($option eq "-file" || $option eq "-data")} {
return [$image cget $option]
}
return [Widget::cget $path $option]
}


proc IconLibrary::itemconfigure { library image args } {
if {![IconLibrary::exists $library $image]} {
return -code error "no such icon '$image'"
}

set path    $library#$image
set image   [Widget::getoption $path -image]
set created [string length $image]

if {![llength $args]} {
set return [list]
foreach list [Widget::configure $path $args] {
set option [lindex $list 0]
if {$created && ($option eq "-file" || $option eq "-data")} {
lappend return [$image configure $option]
} else {
lappend return $list
}
}
return $return
} elseif {[llength $args] == 1} {
set option [lindex $args 0]
if {$created && ($option eq "-file" || $option eq "-data")} {
return [$image configure $option]
} else {
return [Widget::configure $path $option]
}
}

set imageOpts  [list]
set widgetOpts [list]
foreach [list option value] $args {
if {$created && ($option eq "-file" || $option eq "-data")} {
lappend imageOpts $option $value
} else {
lappend widgetOpts $option $value
}
}

if {[llength $imageOpts]} {
eval [list $image configure] $imageOpts
}

if {[llength $widgetOpts]} {
Widget::configure $path $widgetOpts
}
}


proc IconLibrary::exists { library image } {
return [Widget::exists $library#$image]
}


proc IconLibrary::icons { library {pattern ""} } {
Widget::getVariable $library data
if {![string length $pattern]} { return $data(icons) }
return [lsearch -glob -all -inline $data(icons) $pattern]
}


proc IconLibrary::add { library image args } {
Widget::getVariable $library data

if {[IconLibrary::exists $library $image]} {
return -code error "icon \"$image\" already exists"
}

array set _args $args

set create 0
if {[info exists _args(-create)]} {
if {$_args(-create)} { set create 1 }
unset _args(-create)
}

Widget::init IconLibrary::Icon $library#$image [array get _args]
lappend data(icons) $image

if {$create} { IconLibrary::image $library $image }

return $image
}


proc IconLibrary::image { library image } {
Widget::getVariable $library images

if {![IconLibrary::exists $library $image]} {
return -code error "no such icon '$image'"
}

set path $library#$image

if {[string equal [Widget::getoption $path -type] "icon"]} {
set icon  $image
set image [Widget::getoption $path -data]
set path  $library#$image
if {![IconLibrary::exists $library $image]} {
return -code error "no such icon '$image' while loading '$icon'"
}
}

if {![string length [Widget::getoption $path -image]]} {
set img ::Icons::${library}::$image

set data [Widget::getoption $path -data]
set file [Widget::getoption $path -file]
set args [Widget::getoption $path -imageargs]

if {[string length $data]} {
lappend args -data $data
} elseif {[string length $file]} {
lappend args -file $file
}

eval [list ::image create photo $img] $args

Widget::setoption $path -image $img -file "" -data ""
}

return [Widget::getoption $path -image]
}


proc IconLibrary::delete { library args } {
Widget::getVariable $library data

set images [list]
foreach icon $args {
set image [Widget::getoption $library#$icon -image]
if {[string length $image]} { lappend images $image }
Widget::destroy $library#$icon 0
}

if {[llength $images]} { eval ::image delete $images }

set data(icons) [eval [list BWidget::lremove $data(icons)] $args]

return
}


proc IconLibrary::clear { library } {
Widget::getVariable $library data
eval [list IconLibrary::delete $library] $data(icons)
}


proc IconLibrary::destroy { library } {
IconLibrary::clear $library
Widget::destroy $library
}


proc IconLibrary::_get_size { size } {
if {[string is integer -strict $size]} { return ${size}x${size} }
return $size
}


proc IconLibrary::_get_size_int { size } {
variable sizeMap
if {[info exists sizeMap($size)]} { return $sizeMap($size) }
if {[scan $size "%dx%d" w h] == 2 && $w == $h} { return $w }
return $size
}


proc IconLibrary::_create_icons { library icons } {
foreach icon $icons {
IconLibrary::image $library $icon
}
}

namespace eval ChooseDirectory {
Widget::define ChooseDirectory choosedir Dialog ScrolledWindow  Tree IconLibrary

Widget::bwinclude ChooseDirectory Dialog :cmd

Widget::declare ChooseDirectory {
{-name          String   ""        1}
{-message       String   "Please choose a directory, then select OK." 0}
{-folders       String   ""        0}
{-newfoldertext String   "Make New Folder" 0}
{-oktext        String   ""        0}
{-canceltext    String   ""        0}
{-initialdir    String   ""        0}
}

bind ChooseDirectory <Destroy> [list ChooseDirectory::_destroy %W]
}


proc ChooseDirectory::create { path args } {
variable dialogs

BWidget::LoadBWidgetIconLibrary

set dialog $path#choosedir

array set maps [Widget::splitArgs $args Dialog ChooseDirectory]

Widget::initFromODB ChooseDirectory $dialog $maps(ChooseDirectory)

Widget::getVariable $dialog nodes
set nodes(count) 0

eval [list Dialog::create $path -class ChooseDirectory  -anchor e -default 1 -cancel 2 -modal local -spacing 5 -homogeneous 0  -title "Browse for Folder"] $maps(:cmd) $maps(Dialog)
wm minsize  $path 340 300
wm protocol $path WM_DELETE_WINDOW [list $path cancel]

Widget::getVariable $path folder

set frame [Dialog::getframe $path]

grid rowconfigure    $frame 3 -weight 1
grid columnconfigure $frame 0 -weight 1

Label $frame.message -anchor w -autowrap 1 -justify left  -text [Widget::getoption $dialog -message]
grid  $frame.message -row 0 -column 0 -sticky new -pady 5

if {[BWidget::using ttk]} {
ttk::entry $frame.e -textvariable [Widget::widgetVar $path folder]
} else {
entry $frame.e -textvariable [Widget::widgetVar $path folder]
}
grid  $frame.e -row 2 -column 0 -sticky ew -pady 2 -padx 1
bind $frame.e <Key> [list ChooseDirectory::_update_ok_button $path]

ScrolledWindow $frame.sw
grid $frame.sw -row 3 -column 0 -sticky news

set tree $frame.tree
Tree $tree -width 35  -opencmd  [list ChooseDirectory::_open_directory $path $tree]  -closecmd [list ChooseDirectory::_close_directory $path $tree]

$frame.sw setwidget $tree

bind $tree <<TreeSelect>>  [list ChooseDirectory::_selection_change $path $tree]

set text [Widget::getoption $dialog -newfoldertext]
Dialog::add $path -text " $text " -spacing 20 -state disabled  -command [list ChooseDirectory::_create_directory $path $tree]

set text [Widget::getoption $dialog -oktext]
if {$text eq ""} {
Dialog::add $path -name ok -width 12  -command [list ChooseDirectory::_validate_directory $path]
} else {
Dialog::add $path -text $text -width 12  -command [list ChooseDirectory::_validate_directory $path]
}

set text [Widget::getoption $dialog -canceltext]
if {$text eq ""} {
Dialog::add $path -name cancel -width 12
} else {
Dialog::add $path -text $text -width 12
}

set initdir [Widget::getoption $dialog -initialdir]
if {$initdir eq ""} {
set cwd [pwd]
} else {
set cwd $initdir
}
set cwd [file normalize $cwd]

set folders [Widget::getoption $dialog -folders]
if {![llength $folders]} {
set desktop   [file normalize [file join ~ Desktop]]
set documents [file normalize [file join ~ Documents]]
if {[info exists ::env(HOME)]} {
set desktopText Desktop

if {$::tcl_platform(platform) eq "windows"} {
set documentsText "My Documents"
} else {
set documentsText "Documents"
}

set desktop   [file join $::env(HOME) $desktopText]
set documents [file join $::env(HOME) $documentsText]

if {$::tcl_platform(platform) ne "windows"} {
lappend folders [list [file normalize ~] "Home"]
}
}

if {[file exists $desktop]} {
lappend folders [list [file normalize $desktop] $desktopText]
}

if {[file exists $documents]} {
lappend folders [list [file normalize $documents] $documentsText]
}

if {$::tcl_platform(platform) eq "windows"} {
foreach volume [file volumes] {
set volume [string toupper $volume]
if {[string match "?:/" $volume]} {
lappend volumes $volume
lappend folders [list $volume [string range $volume 0 1]]
}
}

set volume [lindex [file split $cwd] 0]
if {[lsearch -exact $volumes $volume] < 0} {
lappend folders [list $volume $volume]
}
} else {
lappend folders [list / /]
}
}

foreach list $folders {
set dir   [lindex $list 0]
set text  [lindex $list 1]
set image [lindex $list 2]

if {![string length $image]} { set image [BWidget::Icon folder16] }

set nodes(root,$dir) [incr nodes(count)]
$tree insert end root $nodes(root,$dir) -text $text -image $image  -data $dir -drawcross allways
}

set name [Widget::getoption $dialog -name]
if {[info exists dialogs($name)]} { set cwd $dialogs($name) }

if {[file exists $cwd]} {
set dirpath [list]
foreach sub [file split $cwd] {
if {![llength $dirpath]} {
set node $nodes(root,$sub)
set rootNode $node

lappend dirpath $sub
$tree itemconfigure $node -open 1
} else {
set parent $node
lappend dirpath $sub
set subpath [eval file join $dirpath]

if {![info exists nodes($rootNode,$subpath)]} {
set nodes($rootNode,$subpath) [incr nodes(count)]
$tree insert end $parent $nodes($rootNode,$subpath)  -open 1 -image [BWidget::Icon folder16] -text $sub  -data $subpath
}
set node $nodes($rootNode,$subpath)
}

ChooseDirectory::_open_directory $path $tree $node
}

_select_directory $path $tree $node
} elseif {$initdir ne ""} {
set folder [file nativename [file normalize $initdir]]
}

$frame.e selection range 0 end

set result [Dialog::draw $path $frame.e]

set dir $folder

destroy $path

if {$result == 2} { return }

if {[string length $name]} { set dialogs($name) $dir }

return $dir
}


proc ChooseDirectory::_select_directory { path tree node } {
$tree see $node
$tree selection set $node
ChooseDirectory::_selection_change $path $tree
}


proc ChooseDirectory::_selection_change { path tree } {
Widget::getVariable $path folder

set node   [$tree selection get]
set folder [file nativename [$tree itemcget $node -data]]

if {[file writable $folder]} {
ButtonBox::itemconfigure $path.bbox 0 -state normal
} else {
ButtonBox::itemconfigure $path.bbox 0 -state disabled
}
}


proc ChooseDirectory::_open_directory { path tree node } {
Widget::getVariable $path#choosedir nodes

set parent   [$tree parent $node]
set rootNode $node
while {$parent ne "root"} {
set rootNode $parent
set parent   [$tree parent $parent]
}

set sort -ascii
if {$::tcl_platform(platform) eq "windows"} { set sort -dict }

set rootdir [$tree itemcget $node -data]

set dirs [glob -nocomplain -type d -dir $rootdir *]
eval lappend dirs [glob -nocomplain -type {d hidden} -dir $rootdir *]

set found 0
foreach dir [lsort $sort $dirs] {
set tail [file tail $dir]
if {$tail eq "." || $tail eq ".."} { continue }

set found 1
if {![info exists nodes($rootNode,$dir)]} {
set nodes($rootNode,$dir) [incr nodes(count)]
$tree insert end $node $nodes($rootNode,$dir)  -drawcross allways -image [BWidget::Icon folder16]  -text [file tail $dir] -data $dir
}
}

set opts [list -open 1 -image [BWidget::Icon folderopen16]]

if {!$found} { lappend opts -drawcross never }
eval [list $tree itemconfigure $node] $opts
}


proc ChooseDirectory::_close_directory { path tree node } {
$tree itemconfigure $node -image [BWidget::Icon folder16]
}


proc ChooseDirectory::_next_directory { root text } {
set i 1
set dir [file join $root $text]
while {[file exists $dir]} {
set dir [file join $root "$text ([incr i])"]
}
return $dir
}


proc ChooseDirectory::_create_directory { path tree } {
Widget::getVariable $path folder
Widget::getVariable $path#choosedir nodes

set sel [lindex [$tree selection get] 0]
$tree itemconfigure $sel -open 1

set text [_next_directory $folder "New Folder"]
set i [$tree insert end $sel new#auto -text [file tail $text]  -image [BWidget::Icon folder16]]

$tree edit $i [file tail $text]  [list ChooseDirectory::_verify_new_directory $path $tree $i] 1

set dir [file join $folder [$tree itemcget $i -text]]

set parent   [$tree parent $sel]
set rootNode $sel
while {$parent ne "root"} {
set rootNode $parent
set parent   [$tree parent $parent]
}

set nodes($rootNode,$dir) [incr nodes(count)]
set node $nodes($rootNode,$dir)

$tree delete $i
$tree insert end $sel $node -text [file tail $dir] -data $dir  -image [BWidget::Icon folder16]

_select_directory $path $tree $node

file mkdir $dir
}


proc ChooseDirectory::_verify_new_directory { path tree node newtext } {
Widget::getVariable $path folder

set txt [$tree itemcget $node -text]
if {![string length $newtext]} { set newtext $txt }

set dir [file join $folder $newtext]

if {[regexp {[/\\:\*\?\"<>|]} $newtext]} {
set title  "Error Renaming File or Folder"
set msg "A directory name cannot contain any of the following characters:\n\t\\ / : * ? \" < > |"
tk_messageBox -parent $path -icon error -title $title -message $msg
return 0
}

if {[file exists $dir]} {
set title  "Error Renaming File or Folder"
set    msg "Cannot rename $txt: A file with the name you specified "
append msg "already exists. Specify a different file name."
tk_messageBox -parent $path -icon error -title $title -message $msg
return 0
}

$tree itemconfigure $node -text $newtext
return 1
}


proc ChooseDirectory::_update_ok_button { path {really 0} } {
if {[Widget::exists $path]} {
if {!$really} {
after idle [concat [info level 0] 1]
} else {
Widget::getVariable $path folder
if {[string trim $folder] eq ""} {
ButtonBox::itemconfigure $path.bbox 1 -state disabled
} else {
ButtonBox::itemconfigure $path.bbox 1 -state normal
}
}
}
}


proc ChooseDirectory::_validate_directory { path } {
Widget::getVariable $path folder

set dir $folder
if {[file pathtype $dir] eq "relative"} {
set dir [file join [pwd] $dir]
}
set dirs [file split $dir]
if {$::tcl_platform(platform) eq "windows"} {
set drive [lindex $dirs 0]
if {[string match {[a-zA-Z]:/} $drive]} {
set dirs [lrange $dirs 1 end]
}
}

foreach dir $dirs {
if {[regexp {[:\*\?\"<>|]} $dir]} {
set title  "Error in Folder Name"
set msg "A directory name cannot contain any of the following characters:\n\t\\ / : * ? \" < > |"
tk_messageBox -parent $path -icon error -title $title -message $msg
return
}
}

set folder [file normalize $folder]

$path enddialog 1
}


proc ChooseDirectory::_destroy { path } {
Widget::destroy $path#choosedir
Widget::destroy $path
}


namespace eval ChooseFile {
if {[BWidget::using ttk]} {
Widget::define ChooseFile choosefile Dialog ScrolledWindow  ListBox IconLibrary
} else {
Widget::define ChooseFile choosefile Dialog ScrolledWindow  ComboBox ListBox IconLibrary
}

Widget::bwinclude ChooseFile Dialog :cmd

Widget::declare ChooseFile {
{-name             String   ""         1}
{-type             Enum     "open"     0 {open save}}
{-folders          String   ""         0}
{-restrictdir      Boolean  0          0}
{-defaultextension String   ""         0}
{-filetypes        String   ""         0}
{-initialdir       String   ""         0}
{-initialfile      String   ""         0}
{-multiple         Boolean  0          0}
{-message          String   ""         0}
{-title            String   ""         0}
}

bind ChooseFile <Map>     [list ChooseFile::_map %W]
bind ChooseFile <Destroy> [list ChooseFile::_destroy %W]
}


proc ChooseFile::create { path args } {
variable dialogs

BWidget::LoadBWidgetIconLibrary

set dialog $path#choosefile

array set maps [Widget::splitArgs $args Dialog ChooseFile]

Widget::initFromODB ChooseFile $dialog $maps(ChooseFile)

Widget::getVariable $dialog data

set data(histidx)  0
set data(history)  [list]
set data(realized) 0

set n [expr {20 / [set x [font measure TkTextFont " "]]}]
if {$x * $n < 20} { incr n }
set data(comboSpaces) $n
set data(listboxPadx) [expr {$n * $x}]

set type [Widget::getoption $dialog -type]

array set _args $args
if {![info exists _args(-title)]} {
if {$type eq "open"} {
set title "Open"
} elseif {$type eq "save"} {
set title "Save As"
}
} else {
set title $_args(-title)
}

Widget::setoption $dialog -title $title

eval [list Dialog::create $path -class ChooseFile -geometry 400x250  -modal local -title $title] $maps(:cmd) $maps(Dialog)
wm minsize  $path 400 250
wm protocol $path WM_DELETE_WINDOW [list ChooseFile::enddialog $path 0]
bind $path <Escape> [list ChooseFile::enddialog $path 0]

set frame [Dialog::getframe $path]

grid rowconfigure    $frame 2 -weight 1
grid columnconfigure $frame 1 -weight 1

set pady 2
set message [Widget::getoption $dialog -message]

if {[string length $message]} {
set pady 0
Label $frame.message -anchor w -autowrap 1 -justify left -text $message
grid  $frame.message -row 0 -column 1 -sticky new -pady {0 5}
}

set f [frame $frame.top -height 26]
grid $f -row 1 -column 1 -sticky ew -padx 5 -pady $pady

label $f.l -text "Look in:"
pack  $f.l -side left

set data(FolderCombo) $f.cb

if {[BWidget::using ttk]} {
set comboBoxCmd   ttk::combobox
set comboBoxEvent <<ComboboxSelected>>
set opts [list -style Toolbutton]
set bwidth ""

$comboBoxCmd $data(FolderCombo) -state readonly  -textvariable [Widget::widgetVar $dialog data(dirtail)]

set popdown ::tile::combobox::PopdownShell
if {![string length [info commands $popdown]]} {
set popdown ::ttk::combobox::PopdownShell
}
set shell [$popdown $data(FolderCombo)]
set listbox $shell.l
destroy $listbox $shell.sb

bind $shell <Unmap> [list after idle [list focus $frame.listbox]]

ScrolledWindow $shell.sw
grid $shell.sw -row 0 -column 0 -sticky news

ListBox $listbox -borderwidth 2 -relief flat -deltay 18  -highlightthickness 0 -selectmode single -selectfill 1  -yscrollcommand [list $shell.sb set] -padx $data(listboxPadx)
$shell.sw setwidget $listbox

$listbox bindText  <1>  [list ChooseFile::_select_folder $path $data(FolderCombo)]
$listbox bindImage <1>  [list ChooseFile::_select_folder $path $data(FolderCombo)]

$listbox bindText  <Enter> [list $listbox selection set]
$listbox bindImage <Enter> [list $listbox selection set]

set data(FolderListBox) $listbox
} else {
set comboBoxCmd   ComboBox
set comboBoxEvent <<ComboBoxSelected>>
set opts [list -relief link]
set bwidth 12

$comboBoxCmd $data(FolderCombo) -editable 0 -usebwlistbox 1  -hottrack 1 -textvariable [Widget::widgetVar $dialog data(dirtail)]

set data(FolderListBox) [$data(FolderCombo) getlistbox]
$data(FolderListBox) configure -deltay 18 -padx $data(listboxPadx)

bind $data(FolderCombo) <<ComboBoxSelected>>  [list ChooseFile::_select_folder $path $data(FolderCombo)]
}
pack $data(FolderCombo) -side left -padx 5 -expand 1 -fill both

set data(FolderIconLabel) [label $path.icon -bg white]

ButtonBox $f.bbox -spacing 1
pack $f.bbox -side left

eval [list $f.bbox add -image [BWidget::Icon actback16]  -command [list ChooseFile::_back $path]  -helptext "Go To Last Folder Visited"] $opts

eval [list $f.bbox add -image [BWidget::Icon actup16]  -command [list ChooseFile::_up $path]  -helptext "Up One Level"] $opts

eval [list $f.bbox add -image [BWidget::Icon foldernew16]  -command [list ChooseFile::_create_directory $path]  -helptext "Create New Folder"] $opts

if 0 {
menu $path.viewPopup -tearoff 0
$path.viewPopup add radiobutton -label "List"
$path.viewPopup add radiobutton -label "Details"

if {[BWidget::using ttk]} {
ttk::menubutton $f.view -menu $path.viewPopup
} else {
menubutton $f.view -menu $path.viewPopup
}
$f.view configure -image [BWidget::Icon viewmulticolumn16]
pack $f.view -side left
} ; # if 0

ScrolledWindow $frame.sw
grid $frame.sw -row 2 -column 1 -sticky news -padx 5 -pady {2 5}

set selectmode single
if {[Widget::getoption $dialog -type] eq "open"
&& [Widget::getoption $dialog -multiple]} { set selectmode multiple }

ListBox $frame.listbox -deltay 18 -multicolumn 1 -selectmode $selectmode
$frame.sw setwidget $frame.listbox

bind $frame.listbox <<ListboxSelect>>  [list ChooseFile::_update_selection $path]

$frame.listbox bindText  <Double-1> [list ChooseFile::_double_click $path]
$frame.listbox bindImage <Double-1> [list ChooseFile::_double_click $path]

set f [frame $frame.bottom]
grid $f -row 3 -column 1 -sticky ew -padx 5

grid columnconfigure $f 1 -weight 1

label $f.fileNameL -text "File name:"
grid  $f.fileNameL -row 0 -column 0 -pady 2

set data(FileEntry) $f.fileNameCB

if {[BWidget::using ttk]} {
ttk::entry $data(FileEntry)  -textvariable [Widget::widgetVar $dialog data(filetail)]
} else {
entry $data(FileEntry)  -textvariable [Widget::widgetVar $dialog data(filetail)]
}
grid $data(FileEntry) -row 0 -column 1 -padx 20 -pady 2 -sticky ew

bind $data(FileEntry) <Return> [list ChooseFile::enddialog $path 1]

focus $data(FileEntry)

Button $f.ok -text [string totitle $type] -width $bwidth  -command [list ChooseFile::enddialog $path 1]
grid $f.ok -row 0 -column 2 -pady 2 -sticky ew

label $f.fileTypeL -text "Files of type:"
grid  $f.fileTypeL -row 1 -column 0 -pady 2

$comboBoxCmd $f.fileTypeCB -state readonly  -textvariable [Widget::widgetVar $dialog data(filetype)]
grid $f.fileTypeCB -row 1 -column 1 -pady 2 -padx 20 -sticky ew

bind $f.fileTypeCB $comboBoxEvent [list ChooseFile::_select_filetype $path]

Button $f.cancel -text "Cancel" -width $bwidth  -command [list ChooseFile::enddialog $path 0]
grid $f.cancel -row 1 -column 2 -pady 2 -sticky ew

set name       [Widget::getoption $dialog -name]
set initialdir [Widget::getoption $dialog -initialdir]

if {![string length $initialdir]} {
if {[info exists dialogs($name)]} {
set initialdir [lindex $dialogs($name) 0]
} else {
set initialdir [pwd]
}
}

set initialfile [Widget::getoption $dialog -initialfile]
if {![string length $initialfile]} {
if {[info exists dialogs($name)]} {
set initialfile [lindex $dialogs($name) 1]
}
}

if {[string length $initialfile]} {
set initialdir [file dirname $initialfile]
}

Widget::setoption $dialog -initialdir  [file normalize $initialdir]
Widget::setoption $dialog -initialfile [file normalize $initialfile]

set filetypes [Widget::getoption $dialog -filetypes]
if {![llength $filetypes]} {
set filetypes {{"All Files" *}}
}

foreach typelist $filetypes {
set txt [lindex $typelist 0]
foreach ext [lindex $typelist 1] {
if {[string index $ext 0] ne "."} { set ext .$ext }
set ext [file extension $ext]
if {![info exists exts($txt)]} { lappend exts(list) $txt }
lappend exts($txt) *$ext
}
}

set first   1
set default [Widget::getoption $dialog -defaultextension]
foreach txt $exts(list) {
set text "$txt ([join [lsort $exts($txt)] ,])"
lappend values $text

foreach ext $exts($txt) {
set ext [file extension $ext]
lappend data(filetype,$text) [string tolower $ext]
if {$::tcl_platform(platform) ne "windows" && $ext ne ".*"} {
lappend data(filetype,$text) [string toupper $ext]
}
}

if {![info exists data(filetype)]} {
if {[string length $default]} {
foreach ext $exts($txt) {
if {$ext eq "*$default"} {
set data(filetype) $text
}
}
} else {
if {$first} {
set first 0
set data(filetype) $text
}
}
}
}
$f.fileTypeCB configure -values $values

set result [Dialog::draw $path]

set file ""
if {$result} { set file $data(file) }

destroy $path

return $file
}


proc ChooseFile::enddialog { path result } {
set dialog $path#choosefile
Widget::getVariable $dialog data

if {$result} {
if {![info exists data(filetail)]} { return }

set type [Widget::getoption $dialog -type]
if {$type eq "save"} {
set file [file join $data(directory) $data(filetail)]

set ext [Widget::getoption $dialog -defaultextension]
if {![string length [file extension $file]]} {
set filetype [lindex $data(filetype,$data(filetype)) 0]
if {$filetype ne ".*"} {
set ext [string range $filetype 1 end]
}
append file .$ext
}

if {[file exists $file]} {
set title   [Widget::getoption $dialog -title]
set message "$file already exists.\nDo you want to replace it?"
set res [MessageDlg $path.__replaceFile -type yesno  -icon warning -title $title -message $message]
if {$res eq "no"} {
focus $data(FileEntry)
return
}
}

set data(file) $file
} elseif {$type eq "open"} {
if {![string match {"*"} $data(filetail)]} {
set file [file join $data(directory) $data(filetail)]

if {![file exists $file]} {
set tail    [file tail $file]
set title   [Widget::getoption $dialog -title]
set message "$tail\nFile not found.\nPlease verify the correct file name was given."
set res [MessageDlg $path.__replaceFile -type ok  -icon warning -title $title -message $message]
focus $data(FileEntry)
return
}

if {[Widget::getoption $dialog -multiple]} {
set data(file) [list $file]
} else {
set data(file) $file
}
} else {
foreach tail $data(filetail) {
set file [file join $data(directory) $tail]

if {![file exists $file]} {
set title   [Widget::getoption $dialog -title]
set message "$tail\nFile not found.\nPlease verify the correct file name was given."
set res [MessageDlg $path.__replaceFile -type ok  -icon warning -title $title -message $message]
focus $data(FileEntry)
return
}

lappend files $file
}

set data(file) $files
}
}
}

set [Widget::widgetVar $path data(result)] $result
}


proc ChooseFile::getlistbox { path } {
return [Dialog::getframe $path].listbox
}


proc ChooseFile::_update_folders { path } {
set dialog $path#choosefile

Widget::getVariable $dialog data

$data(FolderListBox) clear

set folders  [Widget::getoption $dialog -folders]
set restrict [Widget::getoption $dialog -restrictdir]
if {!$restrict && ![llength $folders]} {
set desktop     [file normalize [file join ~ Desktop]]
set myDocuments [file normalize [file join ~ Documents]]
if {[info exists ::env(HOME)]} {
set desktopText Desktop

if {$::tcl_platform(platform) eq "windows"} {
set myDocumentsText "My Documents"
} else {
set myDocumentsText "Documents"
}

set desktop     [file join $::env(HOME) $desktopText]
set myDocuments [file join $::env(HOME) $myDocumentsText]
}

if {$::tcl_platform(platform) ne "windows" && [file exists ~]} {
lappend folders [list [file normalize ~] "Home"]
}

if {[file exists $desktop]} {
lappend folders [list $desktop "Desktop"]
}

if {[file exists $myDocuments]} {
lappend folders [list $myDocuments $myDocumentsText]
}

foreach volume [file volumes] {
if {![string match "*vfs" [lindex [file system $volume] 0]]} {
lappend folders [list $volume $volume]
}
}
}

if {!$restrict} {
set i 0
foreach list $folders {
set dir   [file normalize [lindex $list 0]]
set text  [lindex $list 1]
set image [lindex $list 2]

if {![string length $image]} { set image [BWidget::Icon folder16] }

$data(FolderListBox) insert end #auto -text $text  -data $dir -image $image
lappend values $text

set folderdirs($dir) $i
incr i
}
}

set i       0
set idx     end
set dirlist [list]
foreach x [file split $data(directory)] {
lappend dirlist $x
if {[info exists folderdirs($x)]} {
set idx $folderdirs($x)
} else {
set dir [file normalize [eval file join $dirlist]]
$data(FolderListBox) insert $idx #auto -text $x  -data $dir -indent [expr {$i * 20}]  -image [BWidget::Icon folder16]
lappend values $x
}

incr i

if {[string is integer $idx]} { incr idx }
}

if {[BWidget::using ttk]} {
$data(FolderCombo) configure -values $values
}
}


proc ChooseFile::_update_selection { path {item ""} } {
Widget::getVariable $path#choosefile data

set listbox [ChooseFile::getlistbox $path]
if {[string length $item]} {
set sel [list $item]
$listbox selection set $item
} else {
set sel [$listbox selection get]
}

set files [list]
foreach item $sel {
if {![$listbox exists $item]} { continue }

set file [$listbox itemcget $item -data]

if {[file isfile $file]} {
if {[llength $sel] == 1} {
set files [file tail $file]
} else {
lappend files \"[file tail $file]\"
}
}
}

set data(filetail) [join $files " "]
}


proc ChooseFile::_double_click { path item } {
Widget::getVariable $path#choosefile data

set listbox [ChooseFile::getlistbox $path]

set file [$listbox itemcget $item -data]

if {[file isfile $file]} {
set data(file)     [file normalize $file]
set data(filetail) [file tail $data(file)]
ChooseFile::enddialog $path 1
} else {
ChooseFile::_select_directory $path $file
}
}


proc ChooseFile::_select_directory { path directory {appendHistory 1} } {
set dialog $path#choosefile

Widget::getVariable $dialog data

set directory  [file normalize $directory]
set initialdir [Widget::getoption $dialog -initialdir]

[Dialog::getframe $path].top.bbox.b1 configure -state normal
if {[Widget::getoption $dialog -restrictdir]} {
if {$directory eq $initialdir} {
[Dialog::getframe $path].top.bbox.b1 configure -state disabled
}

if {![string match $initialdir* $directory]} {
set directory $initialdir
}
}

if {[file dirname $directory] eq $directory} {
[Dialog::getframe $path].top.bbox.b1 configure -state disabled
}

set data(directory) $directory
set data(dirtail)   [file tail $data(directory)]
if {![string length $data(dirtail)]} { set data(dirtail) $directory }

if {$appendHistory} {
lappend data(history) $data(directory)
set data(histidx) [expr {[llength $data(history)] - 1}]
}

if {$data(histidx) == 0} {
[Dialog::getframe $path].top.bbox.b0 configure -state disabled
} else {
[Dialog::getframe $path].top.bbox.b0 configure -state normal
}

set n $data(comboSpaces)
set data(dirtail) [string repeat " " $n]$data(dirtail)
if {![BWidget::using ttk]} {
$data(FolderCombo).e selection clear
}

ChooseFile::_update_folders $path

place forget $data(FolderIconLabel)
foreach item [$data(FolderListBox) items] {
if {$directory eq [$data(FolderListBox) itemcget $item -data]} {
$data(FolderIconLabel) configure  -image [$data(FolderListBox) itemcget $item -image]
set y [expr {[winfo height $data(FolderCombo)] / 2}]
place $data(FolderIconLabel) -x 4 -y $y -anchor w  -in $data(FolderCombo)
break
}
}

set listbox [ChooseFile::getlistbox $path]

$listbox clear

set sort -ascii
if {$::tcl_platform(platform) eq "windows"} { set sort -dict }

set dirs [glob -nocomplain -dir $directory -type d *]
eval lappend dirs [glob -nocomplain -dir $directory -type {d hidden} *]

foreach dir [lsort $sort $dirs] {
set tail [file tail $dir]
if {$tail eq "." || $tail eq ".."} { continue }
$listbox insert end #auto -text [file tail $dir] -data $dir  -image [BWidget::Icon folder16]
}

set windows [expr {$::tcl_platform(platform) eq "windows"}]
set files [list]

if {$data(filetype,$data(filetype)) eq ".*"} {
set patt *
} else {
set patt "*\{[join $data(filetype,$data(filetype)) ,]\}"
}

eval lappend files [glob -nocomplain -dir $directory -type f $patt]
eval lappend files [glob -nocomplain -dir $directory -type {f hidden} $patt]

set initialfile [Widget::getoption $dialog -initialfile]
foreach file [lsort $sort $files] {
set tail [file tail $file]
if {$windows && [file extension $tail] eq ".lnk"} {
set tail [file root $tail]
}
set i [$listbox insert end #auto -text $tail  -data $file -image [BWidget::Icon mimeunknown16]]
if {!$data(realized) && $file eq $initialfile} {
$listbox selection set $i
}
}
}


proc ChooseFile::_select_folder { path combo {item ""} } {
Widget::getVariable $path#choosefile data

set listbox $data(FolderListBox)
if {![string length $item]} { set item [$listbox selection get] }
ChooseFile::_select_directory $path [$listbox itemcget $item -data]

if {[BWidget::using ttk]} {
set unpost ::tile::combobox::Unpost
if {![string length [info commands $unpost]]} {
set unpost ::ttk::combobox::Unpost
}
$unpost $data(FolderCombo)
}

focus [ChooseFile::getlistbox $path]
}


proc ChooseFile::_select_filetype { path } {
Widget::getVariable $path#choosefile data
ChooseFile::_select_directory $path $data(directory)
}


proc ChooseFile::_back { path } {
Widget::getVariable $path#choosefile data
incr data(histidx) -1
ChooseFile::_select_directory $path [lindex $data(history) $data(histidx)] 0
}


proc ChooseFile::_up { path } {
Widget::getVariable $path#choosefile data
ChooseFile::_select_directory $path [file dirname $data(directory)]
}


proc ChooseFile::_next_directory { root text } {
set i 1
set dir [file join $root $text]
while {[file exists $dir]} {
set dir [file join $root "$text ([incr i])"]
}
return $dir
}


proc ChooseFile::_create_directory { path } {
Widget::getVariable $path#choosefile data

set listbox [ChooseFile::getlistbox $path]

set i    [$listbox insert end #auto -image [BWidget::Icon folder16]]
set text [_next_directory $data(directory) "New Folder"]

while {1} {
set result [$listbox edit $i [file tail $text]  [list ChooseFile::_verify_directory $path $listbox $i]]

if {![string length $result]} {
set dir $text
break
}

set txt [$listbox itemcget $i -text]
set dir [file join $data(directory) [$listbox itemcget $i -text]]

if {[file exists $dir]} {
set title  "Error Renaming File or Folder"
set    msg "Cannot rename [file tail $text]: A file with the name "
append msg "you specified already exists. Specify a different "
append msg "file name."
MessageDlg $path.__error -type ok -icon error  -title $title -message $msg
continue
}

break
}

ChooseFile::_update_selection $path $i

file mkdir $dir
}


proc ChooseFile::_verify_directory { path listbox node newtext } {
$listbox itemconfigure $node -text $newtext
return 1
}


proc ChooseFile::_map { path } {
Widget::getVariable $path#choosefile data

update idletasks
ChooseFile::_select_directory $path  [Widget::getoption $path#choosefile -initialdir]

set data(realized) 1
}


proc ChooseFile::_destroy { path } {
Widget::destroy $path#choosefile
Widget::destroy $path
}


namespace eval MessageDlg {
Widget::define MessageDlg messagedlg Dialog

if {[BWidget::using ttk]} {
Widget::tkinclude MessageDlg ttk::label .frame.msg  rename {
-text -message
} initialize {
-anchor w -justify left
}
} else {
Widget::tkinclude MessageDlg label .frame.msg  remove {
-cursor -highlightthickness -relief -borderwidth -bd
-takefocus -textvariable
} rename {
-text -message
} initialize {
-anchor w -justify left
}
}

Widget::bwinclude MessageDlg Dialog :cmd  remove {
-modal -image -bitmap -side -anchor -separator
-homogeneous -padx -pady -spacing
}

Widget::declare MessageDlg {
{-name       String     ""     0}
{-icon       Enum       "info" 0 {none error info question warning}}
{-type       Enum       "user" 0
{abortretryignore ok okcancel retrycancel yesno yesnocancel user}}
{-buttons     String    ""     0}
{-buttonwidth String    0      0}
{-usenative   Boolean   1      0}
}

Widget::addmap MessageDlg "" tkMBox {
-parent {} -message {} -default {} -title {}
}
}


proc MessageDlg::create { path args } {
variable dialogs

array set _args $args

if {[info exists _args(-name)] && [info exists dialogs($_args(-name))]} {
return $dialogs($_args(-name))
}

BWidget::LoadBWidgetIconLibrary

set dialog "$path#Message"

Widget::initArgs MessageDlg $args maps
Widget::initFromODB MessageDlg $dialog $maps(MessageDlg)

set type   [Widget::getoption $dialog -type]
set icon   [Widget::getoption $dialog -icon]
set width  [Widget::getoption $dialog -buttonwidth]
set native [Widget::getoption $dialog -usenative]

set user  0
set defb  -1
set canb  -1
switch -- $type {
abortretryignore {set lbut {abort retry ignore}; set defb 0}
ok               {set lbut {ok}; set defb 0 }
okcancel         {set lbut {ok cancel}; set defb 0; set canb 1}
retrycancel      {set lbut {retry cancel}; set defb 0; set canb 1}
yesno            {set lbut {yes no}; set defb 0; set canb 1}
yesnocancel      {set lbut {yes no cancel}; set defb 0; set canb 2}
user             {
set user   1
set native 0
set lbut [Widget::cget $dialog -buttons]
}
}

array set dialogArgs $maps(:cmd)

if {!$user && ![info exists dialogArgs(-default)]} {
lappend maps(:cmd)   -default [lindex $lbut $defb]
lappend maps(tkMBox) -default [lindex $lbut $defb]
}

if {![info exists dialogArgs(-cancel)]} {
lappend maps(:cmd) -cancel $canb
}

if {![info exists dialogArgs(-title)]} {
set frame [frame $path -class MessageDlg]
set title [option get $frame "${icon}Title" MessageDlg]
destroy $frame
if {![string length $title]} {
set title "Message"
}
lappend maps(:cmd) -title $title
lappend maps(tkMBox) -title $title
}

set name [Widget::getoption $dialog -name]
if {[string length $name]} { set native 0 }

if {!$native} {
if {!$user && !$width} { set width 12 }

set image ""
if {![string equal $icon "none"]} {
set image [BWidget::Icon dialog$icon]
}

eval [list Dialog::create $path] $maps(:cmd)  [list -image $image -modal local -side bottom -anchor c]
wm protocol  $path WM_DELETE_WINDOW {bell}
wm resizable $path 0 0

bind $path <Key-Left>  [list MessageDlg::_key_traversal $path left]
bind $path <Key-Right> [list MessageDlg::_key_traversal $path right]

foreach but $lbut {
Dialog::add $path -text $but -name $but -width $width
}

set frame [Dialog::getframe $path]

if {[BWidget::using ttk]} {
eval [list ttk::label $frame.msg] $maps(.frame.msg) -wraplength 800
} else {
eval [list label $frame.msg] $maps(.frame.msg)  -relief flat -bd 0 -highlightthickness 0 -wraplength 800
}

pack $frame.msg -fill both -expand 1 -padx {5 10} -pady {5 0}

if {[string length $name]} {
set msg "Don't ask me again"
set varName [Widget::widgetVar $dialog dontAskAgain]
if {[BWidget::using ttk]} {
ttk::checkbutton $path.check -text $msg -variable $varName
} else {
checkbutton $path.check -text $msg -variable $varName
}

pack $path.check -anchor w -side bottom -pady {0 2}

bind $path.bbox <Map> [list pack configure $path.bbox -pady 5]
}

set res [Dialog::draw $path]
if {!$user} { set res [lindex $lbut $res] }

destroy $path
} else {
array set tkMBoxArgs $maps(tkMBox)

if {![string equal $icon "none"]} {
set tkMBoxArgs(-icon) $icon
}

if {[info exists tkMBoxArgs(-parent)]
&& ![winfo exists $tkMBoxArgs(-parent)]} {
unset tkMBoxArgs(-parent)
}

set tkMBoxArgs(-type) $type
set res [eval tk_messageBox [array get tkMBoxArgs]]
}

if {[string length $name]} {
upvar #0 $varName var
if {$var} { set dialogs($name) $res }
}

Widget::destroy $dialog

return $res
}


proc MessageDlg::_key_traversal { path dir } {
set but [focus -lastfor $path]
if {$but eq $path} {
set def [ButtonBox::index $path.bbox default]
set but [ButtonBox::index $path.bbox $def]
ButtonBox::configure $path.bbox -default -1
}

set idx [ButtonBox::index $path.bbox $but]
set max [ButtonBox::index $path.bbox end]

if {$dir eq "left"} { incr idx -1 }
if {$dir eq "right"} { incr idx 1 }

if {$idx < 0} { set idx $max }
if {$idx > $max} { set idx 0 }

focus [ButtonBox::buttons $path.bbox $idx]
}


namespace eval Text {
Widget::define Text text

Widget::tkinclude Text text :cmd  remove { -state -foreground -background }

Widget::declare Text {
{-state               Enum    "normal" 0 {disabled normal readonly}}
{-textvariable        String  "" 0}
{-background          Color   "SystemWindow" 0}
{-foreground          Color   "SystemWindowText" 0}
{-disabledbackground  Color   "SystemButtonFace" 0}
{-disabledforeground  Color   "SystemDisabledText" 0}
}
}


proc Text::create { path args } {
Widget::initArgs Text $args maps

eval [list text $path] $maps(:cmd)
Widget::initFromODB Text $path $maps(Text)

bind $path <Destroy> [list Text::_destroy $path]

Widget::getVariable $path data

set data(varName) ""

set state [Widget::getoption $path -state]

if {$state eq "disabled" || $state eq "readonly"} {
$path configure -insertwidth 0
}

if {$state eq "disabled"} {
$path configure  -foreground [Widget::getoption $path -disabledforeground]  -background [Widget::getoption $path -disabledbackground]
}

Widget::create Text $path

Text::_trace_variable $path

proc ::$path { cmd args }  "return \[Text::_path_command [list $path] \$cmd \$args\]"

return $path
}


proc Text::configure { path args } {
set oldstate [Widget::getoption $path -state]

set res [Widget::configure $path $args]

if {[Widget::anyChangedX $path -state -background -foreground]} {
set state [Widget::getoption $path -state]

if {$state ne "normal"} {
$path:cmd configure -insertwidth 0
} else {
$path:cmd configure -insertwidth 2
}

if {$state eq "disabled"} {
$path:cmd configure  -foreground [Widget::getoption $path -disabledforeground]  -background [Widget::getoption $path -disabledbackground]
} else {
$path:cmd configure  -foreground [Widget::cget $path -foreground]  -background [Widget::cget $path -background]
}
}

if {[Widget::hasChanged $path -textvariable textvar]} {
Text::_trace_variable $path
}

return $res
}


proc Text::cget { path option } {
if { [string equal "-text" $option] } {
return [$path:cmd get]
}
Widget::cget $path $option
}


proc Text::clear { path } {
$path:cmd delete 1.0 end
}


proc Text::insert { path args } {
if {[Widget::getoption $path -state] eq "normal"} {
eval [list $path:cmd insert] $args
Text::_trace_variable $path 1
}
}


proc Text::delete { path args } {
if {[Widget::getoption $path -state] eq "normal"} {
eval [list $path:cmd delete] $args
Text::_trace_variable $path 1
}
}


proc Text::Insert { path args } {
eval [list $path:cmd insert] $args
}


proc Text::Delete { path args } {
eval [list $path:cmd delete] $args
}


proc Text::_path_command { path cmd larg } {
if {[info commands ::Text::$cmd] ne ""} {
return [eval [linsert $larg 0 Text::$cmd $path]]
} else {
return [eval [linsert $larg 0 $path:cmd $cmd]]
}
}


proc Text::_trace_variable { path {doSet 0} } {
Widget::getVariable $path data

set varName [Widget::getoption $path -textvariable]

if {$data(varName) eq "" && $varName eq ""} { return }

set ops [list unset write]
set cmd [list Text::_handle_variable_trace $path]

uplevel #0 [list trace remove variable $data(varName) $ops $cmd]

set data(varName) $varName

if {$varName ne ""} {
upvar #0 $varName var

if {$doSet} {
set var [$path:cmd get 1.0 end-1c]
} else {
if {![info exists var]} { set var "" }

$path:cmd delete 1.0 end
$path:cmd insert end $var
}

uplevel #0 [list trace add variable $varName $ops $cmd]
}
}


proc Text::_handle_variable_trace { path name1 name2 op } {
if {$name2 ne ""} {
upvar #0 ${name1}($name2) var
} else {
upvar #0 $name1 var
}

if {$op eq "write"} {
$path:cmd delete 1.0 end
$path:cmd insert end $var
} else {
set var [$path:cmd get 1.0 end-1c]
}
}


proc Text::_destroy { path } {
Widget::getVariable $path data

set ops [list unset write]
set cmd [list Text::_handle_variable_trace $path]

uplevel #0 [list trace remove variable $data(varName) $ops $cmd]

Widget::destroy $path
}


namespace eval Wizard {
Widget::define Wizard wizard ButtonBox Separator

namespace eval Step {
Widget::declare Wizard::Step {
{-background      Color2     ""       0  }
{-backgroundimage String     ""       0  }
{-type            String     "step"   1  }
{-data            String     ""       0  }
{-title           String     ""       0  }
{-default         String     "next"   0  }

{-text1           String     ""       0  }
{-text2           String     ""       0  }
{-text3           String     ""       0  }
{-text4           String     ""       0  }
{-text5           String     ""       0  }

{-icon            String     ""       0  }
{-image           String     ""       0  }

{-bitmap          String     ""       0  }
{-iconbitmap      String     ""       0  }

{-createstep      Boolean2    ""      1  }
{-appendorder     Boolean    "1"      0  }

{-nexttext        String     ""       0  }
{-backtext        String     ""       0  }
{-helptext        String     ""       0  }
{-canceltext      String     ""       0  }
{-finishtext      String     ""       0  }
{-separatortext   String     ""       0  }

{-separator       Boolean2   ""       0  }

{-command         String     ""       0  }

{-createcommand   String     ""       0  }
{-raisecommand    String     ""       0  }
{-nextcommand     String     ""       0  }
{-backcommand     String     ""       0  }
{-helpcommand     String     ""       0  }
{-cancelcommand   String     ""       0  }
{-finishcommand   String     ""       0  }

{-compoundraise   Boolean    "1"      0  }
{-compoundcreate  Boolean    "1"      0  }

{-bg              Synonym    -background }
}
}

namespace eval Branch {
Widget::declare Wizard::Branch {
{-type            String     "branch" 1  }
{-command         String     ""       0  }
{-action          Enum       "merge"  0  {merge terminate} }
}
}

namespace eval Widget {
Widget::declare Wizard::Widget {
{-type            String     "widget" 1  }
{-step            String     ""       1  }
{-widget          String     ""       1  }
}
}

namespace eval layout {}

Widget::tkinclude Wizard frame :cmd  include    { -background -foreground -cursor }

Widget::declare Wizard {
{-type            Enum       "dialog" 1 {dialog frame} }
{-width           TkResource "0"      0 frame}
{-height          TkResource "0"      0 frame}
{-minwidth        Int        "475"    0 "%d >= 0"}
{-minheight       Int        "350"    0 "%d >= 0"}
{-relief          TkResource "flat"   0 frame}
{-borderwidth     TkResource "0"      0 frame}
{-background      Color      "SystemButtonFace" 0}
{-foreground      String     "black"  0      }
{-backgroundimage String     ""       0      }
{-title           String     "Wizard" 0      }
{-createstep      Boolean    "0"      0      }

{-showbuttons     Boolean    "1"      1      }
{-autobuttons     Boolean    "1"      0      }
{-helpbutton      Boolean    "0"      1      }
{-finishbutton    Boolean    "0"      1      }
{-resizable       String     "0 0"    0      }
{-separator       Boolean    "1"      1      }
{-parent          String     "."      1      }
{-transient       Boolean    "1"      1      }
{-place           Enum       "center" 1
{none center left right above below} }

{-icon            String     ""       0      }
{-image           String     ""       0      }

{-bitmap          String     ""       0      }
{-iconbitmap      String     ""       0      }

{-raisecommand    String     ""       0      }
{-createcommand   String     ""       0      }

{-buttonwidth     Int        "12"     0      }
{-nexttext        String     "Next >" 0      }
{-backtext        String     "< Back" 0      }
{-helptext        String     "Help"   0      }
{-canceltext      String     "Cancel" 0      }
{-finishtext      String     "Finish" 0      }
{-separatortext   String     ""       0      }

{-fg              Synonym    -foreground     }
{-bg              Synonym    -background     }
{-bd              Synonym    -borderwidth    }
}

image create photo Wizard::none

style layout ImageFrame {Label.label -sticky nesw}

Widget::addmap Wizard "" :cmd { -background {} -relief {} -borderwidth {} }

bind Wizard <Destroy> [list Wizard::_destroy %W]
}


proc Wizard::create { path args } {
Widget::initArgs Wizard $args maps

Widget::initFromODB Wizard $path $maps(Wizard)

Widget::getVariable $path data
Widget::getVariable $path branches

array set data {
steps   ""
buttons ""
order   ""
current ""
}

array set branches {
root    ""
}

set frame $path

set type [Widget::getoption $path -type]

if {[string equal $type "dialog"]} {
set top $path
eval [list toplevel $path -bg $::BWidget::colors(SystemButtonFace)]  $maps(:cmd) -class Wizard
wm withdraw   $path
update idletasks
wm protocol   $path WM_DELETE_WINDOW [list $path cancel 1]
if {[Widget::getoption $path -transient]} {
wm transient  $path [Widget::getoption $path -parent]
}
eval wm resizable $path [Widget::getoption $path -resizable]

set minwidth  [Widget::getoption $path -minwidth]
set minheight [Widget::getoption $path -minheight]
wm minsize $path $minwidth $minheight

set width  [Widget::cget $path -width]
set height [Widget::cget $path -height]
if {$width > 0 && $height > 0} {
wm geometry $top ${width}x${height}
}

bind $path <Escape>         [list $path cancel]
bind $path <<WizardFinish>> [list destroy $path]
bind $path <<WizardCancel>> [list destroy $path]
} else {
set top [winfo toplevel $path]
eval [list frame $path] $maps(:cmd) -class Wizard
}

wm title $top [Widget::getoption $path -title]

grid rowconfigure    $top 0 -weight 1
grid columnconfigure $top 0 -weight 1

frame $path.steps
grid  $path.steps -row 0 -column 0 -sticky news

grid rowconfigure    $path.steps 0 -weight 1
grid columnconfigure $path.steps 0 -weight 1

widget $path set steps -widget $path.steps

if {[Widget::getoption $path -separator]} {
frame $path.separator
grid  $path.separator -row 1 -column 0 -sticky ew -pady [list 5 0]

grid columnconfigure $path.separator 1 -weight 1

set text [Widget::getoption $path -separatortext]

if {[BWidget::using ttk]} {
ttk::label $path.separator.l -state disabled -text $text
} else {
label $path.separator.l -bd 0 -pady 0 -state disabled -text $text
}

grid  $path.separator.l -row 0 -column 0 -sticky w -padx 2

Separator $path.separator.s -orient horizontal
grid $path.separator.s -row 0 -column 1 -sticky ew  -padx [list 0 5] -pady 4

widget $path set separator      -widget $path.separator.s
widget $path set separatortext  -widget $path.separator.l
widget $path set separatorframe -widget $path.separator
}

if {[Widget::getoption $path -showbuttons]} {
ButtonBox $path.buttons -spacing 2 -homogeneous 1
grid $path.buttons -row 2 -column 0 -sticky e -padx 5 -pady {10 5}

widget $path set buttons -widget $path.buttons

Wizard::insert $path button end back -text "< Back"  -command [list $path back 1]  -width [Widget::getoption $path -buttonwidth]
Wizard::insert $path button end next -text "Next >"  -command [list $path next 1]
if {[Widget::getoption $path -finishbutton]} {
Wizard::insert $path button end finish -text "Finish"  -command [list $path finish 1]
}
Wizard::insert $path button end cancel -text "Cancel"  -command [list $path cancel 1] -spacing 10

if {[Widget::getoption $path -helpbutton]} {
Wizard::insert $path button 0 help -text "Help"  -command [list $path help 1] -spacing 10
}
}

return [Widget::create Wizard $path]
}


proc Wizard::configure { path args } {
set res [Widget::configure $path $args]

if {[Widget::hasChanged $path -title title]} {
wm title [winfo toplevel $path] $title
}

if {[Widget::hasChanged $path -resizable resize]} {
eval wm resizable [winfo toplevel $path] $resize
}

if {[Widget::getoption $path -separator]
&& [Widget::hasChanged $path -separatortext text]} {
set text [Wizard::getoption $path [Wizard::raise $path] -separatortext]
Wizard::itemconfigure $path separatortext -text $text
}

if {[Widget::anyChangedX $path -width -height -minwidth -minheight]} {
set type    [Widget::getoption $path -type]
set width   [Widget::cget $path -width]
set height  [Widget::cget $path -height]
set mwidth  [Widget::getoption $path -minwidth]
set mheight [Widget::getoption $path -minheight]

if {[string equal $type "dialog"]} {
wm minsize $path $mwidth $mheight

if {$width > 0 && $height > 0} {
wm geometry $top ${width}x${height}
}

} else {
$path:cmd configure -width $width -height $height
}
}

return $res
}


proc Wizard::cget { path option } {
return [Widget::cget $path $option]
}


proc Wizard::itemcget { path item option } {
Widget::getVariable $path items
Widget::getVariable $path steps
Widget::getVariable $path buttons
Widget::getVariable $path widgets

if {[Wizard::_is_step $path $item]} {
return [Widget::cget $items($item) $option]
}

if {[Wizard::_is_branch $path $item]} {
return [Widget::cget $items($item) $option]
}

if {[Wizard::_is_button $path $item]} {
return [$path.buttons itemcget $items($item) $option]
}

if {[Wizard::_is_widget $path $item]} {
return [eval [$path widget get $item] cget $option]
}

return -code error "item \"$item\" does not exist"
}


proc Wizard::itemconfigure { path item args } {
Widget::getVariable $path items
Widget::getVariable $path steps
Widget::getVariable $path buttons

if {[Wizard::_is_step $path $item]} {
set i $items($item)
set res [Widget::configure $i $args]

if {$item eq [Wizard::step $path current]} {
if {[Widget::hasChanged $i -title title]} {
set title [Wizard::getoption $path $item -title]
wm title [winfo toplevel $path] $title
}

if {[winfo exists $path.separator]} {
if {[Widget::getoption $path -separator]
&& [Widget::hasChanged $i -separator separator]} {
if {[Wizard::getoption $path $item -separator]} {
grid $path.separator.s
} else {
grid remove $path.separator.s
}
}

if {[Widget::getoption $path -separator]
&& [Widget::hasChanged $i -separatortext text]} {
set text [Wizard::getoption $path $item -separatortext]
Wizard::itemconfigure $path separatortext -text $text
}
}

set x [list -nexttext -backtext -canceltext -helptext -finishtext]
if {[eval [list Widget::anyChangedX $path] $x]} {
Wizard::adjustbuttons $path
}
}

return $res
}

if {[Wizard::_is_branch $path $item]} {
return [Widget::configure $items($item) $args]
}

if {[Wizard::_is_button $path $item]} {
return [eval $path.buttons itemconfigure [list $items($item)] $args]
}

if {[Wizard::_is_widget $path $item]} {
return [eval [Wizard::widget $path get $item] configure $args]
}

return -code error "item \"$item\" does not exist"
}


proc Wizard::show { path } {
wm deiconify [winfo toplevel $path]
}


proc Wizard::hide { path } {
wm withdraw [winfo toplevel $path]
}


proc Wizard::invoke { path button } {
Widget::getVariable $path buttons
if {![info exists buttons($button)]} {
return -code error "button \"$button\" does not exist"
}
[Wizard::widget $path get $button] invoke
}


proc Wizard::insert { path type idx args } {
switch -- $type {
"button" {
set node [lindex $args 0]
set node [Widget::nextIndex $path $node]
set args [lreplace $args 0 0 $node]
}

"step" - "branch" {
set node   [lindex $args 1]
set branch [lindex $args 0]
set node   [Widget::nextIndex $path $node]
set args   [lreplace $args 1 1 $node]

if {![Wizard::_is_branch $path $branch]} {
return -code error "branch \"$branch\" does not exist"
}
}

default {
set types [list button branch step]
set err [BWidget::badOptionString option $type $types]
return -code error $err
}
}

if {[Wizard::exists $path $node]} {
return -code error "item \"$node\" already exists"
}

eval _insert_$type $path $idx $args

return $node
}


proc Wizard::delete { path args } {
Widget::getVariable $path data
Widget::getVariable $path items
Widget::getVariable $path steps
Widget::getVariable $path buttons
Widget::getVariable $path widgets
Widget::getVariable $path branches

set step [Wizard::step $path current]
foreach item $args {
set item [Wizard::step $path $item]
if {![string length $item]} { continue }

if {[Wizard::_is_step $path $item]} {

set branch [Wizard::branch $path $item]
set x [lsearch -exact $branches($branch) $item]
set branches($branch) [lreplace $branches($branch) $x $x]

destroy $widgets($item)

Widget::destroy $items($item) 0

unset steps($item)
unset data($item,branch)
unset items($item)
unset widgets($item)

if {[info exists data($item,realized)]} {
unset data($item,realized)
}

if {$item eq $step} { set data(current) "" }
}

if {[Wizard::_is_branch $path $item]} {

set branch [Wizard::branch $path $item]
set x [lsearch -exact $branches($branch) $item]
set branches($branch) [lreplace $branches($branch) $x $x]

Widget::destroy $items($item) 0

unset branches($item)
unset data($item,branch)
unset items($item)
}

if {[info exists buttons($item)]} {

set x [$path.buttons index $widgets($item)]
$path.buttons delete $x

unset items($item)
unset buttons($item)
unset widgets($item)
}
}
}


proc Wizard::back { path {generateEvent 0} {executeCommand 1} } {
Widget::getVariable $path data
Widget::getVariable $path items

set step [Wizard::raise $path]

if {$executeCommand && [string length $step]} {
set cmd [Widget::getoption $items($step) -backcommand]
if {![_eval_command $path $cmd]} { return }
}

if {$step ne [Wizard::raise $path]} { return }

set idx [lsearch -exact $data(order) $step]
if {$idx < 0} {
set item [lindex $data(order) end]
} else {
set item [lindex $data(order) [expr {$idx - 1}]]
set data(order) [lreplace $data(order) $idx end]
}

Wizard::raise $path $item $generateEvent

if {$generateEvent} { event generate $path <<WizardBack>> }

return $item
}


proc Wizard::next { path {generateEvent 0} {executeCommand 1} } {
Widget::getVariable $path data
Widget::getVariable $path items

set step [Wizard::raise $path]

if {$executeCommand && [string length $step]} {
set cmd [Widget::getoption $items($step) -nextcommand]
if {![_eval_command $path $cmd]} { return }
}

if {$step ne [Wizard::raise $path]} { return }

set item [Wizard::step $path next]
if {![string length $item]} { return }

if {[Widget::getoption $items($item) -appendorder]} {
lappend data(order) $item
}

Wizard::raise $path $item $generateEvent

if {$generateEvent} { event generate $path <<WizardNext>> }

return $item
}


proc Wizard::cancel { path {generateEvent 0} {executeCommand 1} } {
Widget::getVariable $path items

set step [Wizard::raise $path]

if {$executeCommand && [string length $step]} {
set cmd [Widget::getoption $items($step) -cancelcommand]
if {![_eval_command $path $cmd]} { return }
}

if {$generateEvent} { event generate $path <<WizardCancel>> }
}


proc Wizard::finish { path {generateEvent 0} {executeCommand 1} } {
Widget::getVariable $path items

set step [Wizard::raise $path]

if {$executeCommand && [string length $step]} {
set cmd [Widget::getoption $items($step) -finishcommand]
if {![_eval_command $path $cmd]} { return }
}

if {$generateEvent} { event generate $path <<WizardFinish>> }
}


proc Wizard::help { path {generateEvent 0} {executeCommand 1} } {
Widget::getVariable $path items

set step [Wizard::raise $path]

if {$executeCommand && [string length $step]} {
set cmd [Widget::getoption $items($step) -helpcommand]
if {![_eval_command $path $cmd]} { return }
}

if {$generateEvent} { event generate $path <<WizardHelp>> }
}


proc Wizard::order { path args } {
Widget::getVariable $path data
if {[llength $args] > 1} {
set err [BWidget::wrongNumArgsString "$path order ?neworder?"]
return -code error $err
}
if {[llength $args]} { set data(order) [lindex $args 0] }
return $data(order)
}


proc Wizard::step { path node {start ""} {traverse 1} } {
Widget::getVariable $path data
Widget::getVariable $path items
Widget::getVariable $path branches

if {[string length $start] && ![info exists items($start)]} {
return -code error "item \"$start\" does not exist"
}

switch -- $node {
"current" {
set item [Wizard::raise $path]
}

"end" - "last" {
set item [Wizard::step $path next]
while {[string length $item]} {
set last $item
set item [Wizard::step $path next $item]
}
set item $last
}

"back" - "previous" {
if {![string length $start]} { set start [Wizard::raise $path] }

set idx [lsearch -exact $data(order) $start]
if {$idx < 0} {
set item [lindex $data(order) end]
} else {
incr idx -1
if {$idx < 0} { return }
set item [lindex $data(order) $idx]
}
}

"next" {
if {[string length $start]} {
set step $start
} else {
set step [Wizard::raise $path]
}

set branch [Wizard::branch $path $step]
if {$traverse && [Wizard::_is_branch $path $step]} {
if {[Wizard::traverse $path $step]} {
set branch $step
}
}

set idx [expr {[lsearch -exact $branches($branch) $step] + 1}]

if {$idx >= [llength $branches($branch)]} {
if {$branch eq "root"
|| [Widget::getoption $items($branch) -action]
eq "terminate"} {
return
}

set item [Wizard::step $path next $branch 0]
} else {
set item [lindex $branches($branch) $idx]

if {[Wizard::_is_branch $path $item]} {
if {$traverse} {
set item [Wizard::step $path next $item]
}
} else {
if {![Wizard::traverse $path $item]} {
set item [Wizard::step $path next $item]
}
}
}
}

default {
set item ""

if {[Wizard::_is_branch $path $node]} {
return [Wizard::step $path next $node]
}

if {[Wizard::_is_step $path $node]} { set item $node }
}
}

return $item
}


proc Wizard::nodes { path branch {first ""} {last ""} } {
Widget::getVariable $path data
Widget::getVariable $path branches
if {![string length $first]} { return $branches($branch) }
if {![string length $last]}  { return [lindex $branches($branch) $first] }
return [lrange $branches($branch) $first $last]
}


proc Wizard::index { path item } {
Widget::getVariable $path branches
set item   [$path step $item]
set branch [$path branch $item]
return [lsearch -exact $branches($branch) $item]
}


proc Wizard::raise { path {item ""} {generateEvent 0} } {
Widget::getVariable $path data
Widget::getVariable $path items

set steps   $path.steps
set buttons $path.buttons

if {[string equal $item ""]} { return $data(current) }

set x $item
set curr $data(current)
set item [Wizard::step $path $item]

if {![string length $item]} {
return -code error "step \"$x\" does not exist"
}

if {[string equal $item $data(current)]} { return }

Wizard::createstep $path $item

if {[Widget::getoption $items($item) -compoundraise]} {
set cmd [Widget::getoption $path -raisecommand]
Wizard::_eval_command $path $cmd $item
}

if {$data(current) ne $curr} { return $data(current) }

set cmd [Widget::getoption $items($item) -raisecommand]
Wizard::_eval_command $path $cmd $item

if {$data(current) ne $curr} { return $data(current) }

wm title [winfo toplevel $path] [Wizard::getoption $path $item -title]

if {[winfo exists $path.separator]} {
if {[Wizard::getoption $path $item -separator]} {
grid $path.separator.s
set text [Wizard::getoption $path $item -separatortext]
$path itemconfigure separatortext -text $text
} else {
grid remove $path.separator.s
$path itemconfigure separatortext -text ""
}
}

if {[winfo exists $path.buttons]} {
set default [Widget::getoption $items($item) -default]
set button  [lsearch -exact $data(buttons) $default]
$buttons setfocus $button
}

if {[string length $data(current)]} {
grid remove $steps.f$data(current)
}

set data(current) $item

grid $steps.f$data(current) -row 0 -column 0 -sticky news

set back [Wizard::step $path back]
set next [Wizard::step $path next]

if {[Widget::getoption $path -autobuttons]} { Wizard::adjustbuttons $path }

set bgimage [Wizard::getoption $path $item -backgroundimage]
if {$bgimage ne ""} {
$steps.f$item configure -image $bgimage
}

if {$generateEvent} {
if {$back eq ""} { event generate $path <<WizardFirstStep>> }
if {$next eq ""} { event generate $path <<WizardLastStep>> }
event generate $path <<WizardStep>>
}

return $item
}


proc Wizard::adjustbuttons { path } {
Widget::getVariable $path items

if {![Widget::getoption $path -showbuttons]} { return }

set item [Wizard::step $path current]
if {[string equal $item ""]} { return }

set back [Wizard::step $path back]
set next [Wizard::step $path next]

foreach x [list back next cancel] {
set text [Wizard::getoption $path $item -${x}text]
$path itemconfigure $x -text $text -state normal
}

if {[Widget::getoption $path -helpbutton]} {
set text [Wizard::getoption $path $item -helptext]
$path itemconfigure help -text $text
}

if {[Widget::getoption $path -finishbutton]} {
set text [Wizard::getoption $path $item -finishtext]
$path itemconfigure finish -text $text -state disabled
}

if {[string equal $back ""]} {
$path itemconfigure back -state disabled
}

if {[string equal $next ""]} {
if {[Widget::getoption $path -finishbutton]} {
$path itemconfigure next   -state disabled
$path itemconfigure finish -state normal
} else {
set text [Wizard::getoption $path $item -finishtext]
$path itemconfigure next -text $text -command [list $path finish 1]
}
$path itemconfigure back   -state disabled
$path itemconfigure cancel -state disabled
} else {
set text [Wizard::getoption $path $item -nexttext]
$path itemconfigure next -text $text -command [list $path next 1]
}
}


proc Wizard::widget { path command args } {
return [eval [list Wizard::widgets $path $command] $args]
}


proc Wizard::widgets { path command args } {
Widget::getVariable $path items
Widget::getVariable $path widgets
Widget::getVariable $path stepWidgets

switch -- $command {
"set" {
set node [lindex $args 0]
if {[string equal $node ""]} {
set str "$path widget set <name> ?option ..?"
set err [BWidget::wrongNumArgsString $str]
return -code error $err
}
set args [lreplace $args 0 0]
set item $path.#widget#$node

Widget::init Wizard::Widget $item $args
set step   [Widget::getoption $item -step]
set widget [Widget::getoption $item -widget]
set items($node) $item
if {[string equal $step ""]} {
set widgets($node) $widget
} else {
set stepWidgets($step,$node) $widget
}
return $widget
}

"get" {
set widget [lindex $args 0]
if {[string equal [string index $widget 0] "-"]} {
set widget ""
} else {
set args [lreplace $args 0 0]
}

array set map  [list Wizard::Widget {}]
array set map  [Widget::parseArgs Wizard::Widget $args]
array set data $map(Wizard::Widget)

if {[info exists data(-step)]} {
set step $data(-step)

if {[string equal $widget ""]} {
set list [list]
foreach name [array names stepWidgets $step,*] {
set x [lrange [split $name ,] 1 end]
lappend list [eval join $x ,]
}
return $list
}
} else {
if {[string equal $widget ""]} {
return [array names widgets]
}

set step [$path step current]
}

if {[info exists stepWidgets($step,$widget)]} {
return $stepWidgets($step,$widget)
}

if {![info exists widgets($widget)]} {
return -code error "item \"$widget\" does not exist"
}

return $widgets($widget)
}

default {
set err [BWidget::badOptionString option $command [list get set]]
return -code error $err
}
}
}


proc Wizard::variable { path step option } {
set item [step $path $step]
if {[string equal $item ""]} {
return -code error "item \"$step\" does not exist"
}
set item $path.$item
return [Widget::varForOption $item $option]
}


proc Wizard::branch { path {node "current"} } {
Widget::getVariable $path data

if {[_is_branch $path $node]} { return $data($node,branch) }

set node [$path step $node]
if {[string equal $node ""]} { return "root" }
if {[info exists data($node,branch)]} { return $data($node,branch) }
return -code error "item \"$node\" does not exist"
}


proc Wizard::traverse { path node } {
Widget::getVariable $path items

if {$node eq "root"} { return 1 }

if {![info exists items($node)]} {
return -code error "node \"$node\" does not exist"
}

set cmd [Widget::getoption $items($node) -command]
return [_eval_command $path $cmd]
}


proc Wizard::exists { path item } {
Widget::getVariable $path items
return [info exists items($item)]
}


proc Wizard::createstep { path item {delete 0} } {
Widget::getVariable $path data
Widget::getVariable $path items

set item [Wizard::step $path $item]

if {![Wizard::_is_step $path $item]} { return }

if {$delete} {
if {[winfo exists $path.f$item]} {
destroy $path.f$item
}
if {[info exists data($item,realized)]} {
unset data($item,realized)
}
}

if {![info exists data($item,realized)]} {
set data($item,realized) 1

if {[Widget::getoption $items($item) -compoundcreate]} {
set cmd [Widget::getoption $path -createcommand]
_eval_command $path $cmd $item
}

set cmd [Widget::getoption $items($item) -createcommand]
_eval_command $path $cmd $item
}

return $item
}


proc Wizard::getoption { path item option } {
Widget::getVariable $path items
set step [Wizard::step $path $item]
if {![string length $step]} {
return -code error "item \"$item\" does not exist"
}
return [Widget::cgetOption $option "" $items($step) $path]
}


proc Wizard::reorder { path parent nodes } {
Widget::getVariable $path branches
set branches($parent) $nodes
if {[Widget::getoption $path -autobuttons]} { Wizard::adjustbuttons $path }
}


proc Wizard::_insert_button { path idx node args } {
Widget::getVariable $path data
Widget::getVariable $path items
Widget::getVariable $path buttons
Widget::getVariable $path widgets

set buttons($node) 1
set widgets($node) [eval $path.buttons insert $idx $args]
set item   [string map [list $path.buttons.b {}] $widgets($node)]
set items($node) $item
return $widgets($node)
}


proc Wizard::_insert_step { path idx branch node args } {
Widget::getVariable $path data
Widget::getVariable $path steps
Widget::getVariable $path items
Widget::getVariable $path widgets
Widget::getVariable $path branches

set steps($node) 1
set data($node,branch) $branch
if {$idx eq "end"} {
lappend branches($branch) $node
} else {
set branches($branch) [linsert $branches($branch) $idx $node]
}

Widget::init Wizard::Step $path.$node $args

set items($node) $path.$node
set bgcolor [Wizard::getoption $path $node -background]

set widgets($node) $path.steps.f$node
ttk::label $widgets($node) -background $bgcolor -style ImageFrame

if {[getoption $path $node -createstep]} { Wizard::createstep $path $node }

if {[Widget::getoption $path -autobuttons]} { Wizard::adjustbuttons $path }

return $widgets($node)
}


proc Wizard::_insert_branch { path idx branch node args } {
Widget::getVariable $path data
Widget::getVariable $path items
Widget::getVariable $path branches

set branches($node)    [list]
set data($node,branch) $branch
if {$idx eq "end"} {
lappend branches($branch) $node
} else {
set branches($branch) [linsert $branches($branch) $idx $node]
}

Widget::init Wizard::Branch $path.$node $args

if {[Widget::getoption $path -autobuttons]} { Wizard::adjustbuttons $path }

set items($node) $path.$node

return $items($node)
}


proc Wizard::_is_step { path node } {
Widget::getVariable $path steps
return [info exists steps($node)]
}


proc Wizard::_is_branch { path node } {
Widget::getVariable $path branches
return [info exists branches($node)]
}


proc Wizard::_is_button { path node } {
Widget::getVariable $path buttons
return [info exists buttons($node)]
}


proc Wizard::_is_widget { path node } {
Widget::getVariable $path widgets
return [info exists widgets($node)]
}


proc Wizard::_eval_command { path command {step ""} } {
if {![string length $command]} { return 1 }

if {![string length $step]} { set step [Wizard::raise $path] }

set map [list %W $path %S $step]

if {![Wizard::_is_branch $path $step]} {
if {[string match "*%B*" $command]} {
lappend map %B [Wizard::branch $path $step]
}

if {[string match "*%n*" $command]} {
lappend map %n [Wizard::step $path next $step]
}

if {[string match "*%b*" $command]} {
lappend map %b [Wizard::step $path back $step]
}
}

return [uplevel #0 [string map $map $command]]
}


proc Wizard::_destroy { path } {
Widget::getVariable $path items

foreach item [array names items] {
Widget::destroy $items($item) 0
}

Widget::destroy $path
}


proc SimpleWizard { path args } {
option add *WizLayoutSimple*Label.padX                5    interactive
option add *WizLayoutSimple*Label.anchor              nw   interactive
option add *WizLayoutSimple*Label.justify             left interactive
option add *WizLayoutSimple*Label.borderWidth         0    interactive
option add *WizLayoutSimple*Label.highlightThickness  0    interactive

set args [linsert $args 0 -createstep 1]
lappend args -createcommand [list Wizard::layout::simple %W %S]

return [eval [list Wizard $path] $args]
}


proc ClassicWizard { path args } {
option add *WizLayoutClassic*Label.padX                5    interactive
option add *WizLayoutClassic*Label.anchor              nw   interactive
option add *WizLayoutClassic*Label.justify             left interactive
option add *WizLayoutClassic*Label.borderWidth         0    interactive
option add *WizLayoutClassic*Label.highlightThickness  0    interactive

set args [linsert $args 0 -createstep 1]
lappend args -createcommand [list Wizard::layout::classic %W %S]

return [eval [list Wizard $path] $args]
}


proc Wizard::layout::simple { wizard step } {
set frame [$wizard widget get $step]

set layout [$wizard widget set layout -widget $frame.layout -step $step]

foreach w [list titleframe pretext posttext clientArea] {
set $w [$wizard widget set $w -widget $layout.$w -step $step]
}

foreach w [list title subtitle icon] {
set $w [$wizard widget set $w -widget $titleframe.$w -step $step]
}

frame $layout -class WizLayoutSimple

pack $layout -expand 1 -fill both

frame $clientArea -bd 8 -relief flat

Separator $layout.sep1 -relief groove -orient horizontal

frame $titleframe -bd 4 -relief flat -background white

label $title -background white  -textvariable [$wizard variable $step -text1]

label $subtitle -height 2 -background white -padx 15 -width 40  -textvariable [$wizard variable $step -text2]

label $icon -borderwidth 0 -background white -anchor c
set iconImage [$wizard getoption $step -icon]
if {$iconImage ne ""} { $icon configure -image $iconImage }

set labelfont [font actual [$title cget -font]]
$title configure -font [concat $labelfont -weight bold]

grid $title    -in $titleframe -row 0 -column 0 -sticky nsew
grid $subtitle -in $titleframe -row 1 -column 0 -sticky nsew
grid $icon     -in $titleframe -row 0 -column 1 -rowspan 2 -padx 8
grid columnconfigure $titleframe 0 -weight 1
grid columnconfigure $titleframe 1 -weight 0

set label label
if {[BWidget::using ttk]} { set label ttk::label }

$label $pretext  -anchor w -justify left  -textvariable [$wizard variable $step -text3]
$label $posttext -anchor w -justify left  -textvariable [$wizard variable $step -text4]

foreach widget [list title subtitle pretext posttext] {
bind [set $widget] <Configure> {
after idle {after idle {%W configure -wraplength [expr {%w -10}]}}
}
}

grid $titleframe  -row 0 -column 0 -sticky nsew -padx 0
grid $layout.sep1 -row 1 -sticky ew
grid $pretext     -row 2 -sticky nsew -padx 8 -pady 8
grid $clientArea  -row 3 -sticky nsew -padx 8 -pady 8
grid $posttext    -row 4 -sticky nsew -padx 8 -pady 8

grid columnconfigure $layout 0 -weight 1
grid rowconfigure    $layout 0 -weight 0
grid rowconfigure    $layout 1 -weight 0
grid rowconfigure    $layout 2 -weight 0
grid rowconfigure    $layout 3 -weight 1
grid rowconfigure    $layout 4 -weight 0
}

proc Wizard::layout::classic { wizard step } {
set frame [$wizard widget get $step]

set layout [$wizard widget set layout -widget $frame.layout -step $step]
foreach w [list title subtitle icon pretext posttext clientArea] {
set $w [$wizard widget set $w -widget $layout.$w -step $step]
}

frame $layout -class WizLayoutClassic

pack $layout -expand 1 -fill both

frame $clientArea -bd 8 -relief flat

Separator $layout.sep1 -relief groove -orient vertical

label $title    -textvariable [$wizard variable $step -text1]
label $subtitle -textvariable [$wizard variable $step -text2] -height 2

array set labelfont [font actual [$title cget -font]]
incr labelfont(-size) 6
set  labelfont(-weight) bold
$title configure -font [array get labelfont]

set label label
if {[BWidget::using ttk]} { set label ttk::label }

$label $pretext  -anchor w -justify left  -textvariable [$wizard variable $step -text3]
$label $posttext -anchor w -justify left  -textvariable [$wizard variable $step -text4]

foreach widget [list title subtitle pretext posttext] {
bind [set $widget] <Configure> {
after idle {after idle {%W configure -wraplength [expr {%w -10}]}}
}
}

label $icon -borderwidth 1 -relief sunken -background white  -anchor c -width 96 -image Wizard::none
set iconImage [$wizard getoption $step -icon]
if {[string length $iconImage]} { $icon configure -image $iconImage }

grid $icon       -row 0 -column 0 -sticky nsew -padx 8 -pady 8 -rowspan 5
grid $title      -row 0 -column 1 -sticky ew   -padx 8 -pady 8
grid $subtitle   -row 1 -column 1 -sticky ew   -padx 8 -pady 8
grid $pretext    -row 2 -column 1 -sticky ew   -padx 8
grid $clientArea -row 3 -column 1 -sticky nsew -padx 8
grid $posttext   -row 4 -column 1 -sticky ew   -padx 8 -pady 24

grid columnconfigure $layout 0 -weight 0
grid columnconfigure $layout 1 -weight 1

grid rowconfigure    $layout 0 -weight 0
grid rowconfigure    $layout 1 -weight 0
grid rowconfigure    $layout 2 -weight 0
grid rowconfigure    $layout 3 -weight 1
grid rowconfigure    $layout 4 -weight 0
}

BWidget::LoadBWidgetIconLibrary

ThemeInit
::InstallJammer::HideMainWindow
BWidget::use ttk 1 -force 1
}
} setup.tcl {proc ::InstallJammer::InitSetup {} {
FileGroup ::FileGroups
Component ::Components
SetupType ::SetupTypes
FileGroup ::20C58F69-C30F-497D-A4BA-E1B395EC15A7 -setup Install -active Yes -platforms {AIX-ppc FreeBSD-4-x86 FreeBSD-x86 HPUX-hppa Linux-x86 MacOS-X Solaris-sparc Windows TarArchive ZipArchive} -name {Program Files} -parent FileGroups
Component ::15DAE539-105B-4492-B815-135A1843117F -setup Install -active Yes -platforms {AIX-ppc FreeBSD-4-x86 FreeBSD-x86 HPUX-hppa Linux-x86 MacOS-X Solaris-sparc Windows} -name {Default Component} -parent Components
SetupType ::6C6EB7CE-AB45-4145-9D38-7D57BE4807F2 -setup Install -active Yes -platforms {AIX-ppc FreeBSD-4-x86 FreeBSD-x86 HPUX-hppa Linux-x86 MacOS-X Solaris-sparc Windows} -name Typical -parent SetupTypes
SetupType ::7873207E-5AA3-4491-9544-BD3EC5F48D78 -setup Install -active Yes -platforms {AIX-ppc FreeBSD-4-x86 FreeBSD-x86 HPUX-hppa Linux-x86 MacOS-X Solaris-sparc Windows} -name Custom -parent SetupTypes

}
} common.tcl {
namespace eval ::InstallAPI {}
namespace eval ::InstallJammer {}
namespace eval ::InstallJammer::subst {}

proc lempty { list } {
if {[catch {expr [llength $list] == 0} ret]} { return 0 }
return $ret
}

proc lassign { list args } {
foreach elem $list varName $args {
upvar 1 $varName var
set var $elem
}
}

proc lremove { list args } {
foreach arg $args {
set x [lsearch -exact $list $arg]
set list [lreplace $list $x $x]
}
return $list
}

proc lreverse { list } {
set new [list]
set len [llength $list]
for {set i [expr $len - 1]} {$i >= 0} {incr i -1} {
lappend new [lindex $list $i]
}
return $new
}

proc lassign_array {list arrayName args} {
upvar 1 $arrayName array
foreach elem $list var $args {
set array($var) $elem
}
}

proc incr0 { varName {n 1} } {
upvar 1 $varName var
if {![info exists var]} { set var 0 }
set var [expr {wide($var) + $n}]
}

proc iincr { varName {n 1} } {
upvar 1 $varName var
if {![info exists var]} { set var 0 }
set var [expr {$var + $n}]
}

proc recursive_glob {dir pattern} {
set files [glob -nocomplain -type f -dir $dir $pattern]
foreach dir [glob -nocomplain -type d -dir $dir *] {
eval lappend files [recursive_glob $dir $pattern]
}
return $files
}

proc noop {args} {}

proc read_file { file args } {
set fp [open $file]
eval [list fconfigure $fp] $args
set x [read $fp]
close $fp
return $x
}

proc debugging { {value ""} {level ""} {file ""} } {
if {$value eq "state"} {
if {$::debug || $::info(Debugging)} { return 1 }
return 0
} elseif {[string is true -strict $value]} {
if {$level eq "" || $level eq "console"} {
set ::debug 1
} elseif {$level eq "file"} {
set ::info(Debugging) 1
if {$file eq ""} {
set file [::InstallJammer::TmpDir debug.log]
}
if {[info exists ::debugfp]} {
catch { close $::debugfp }
set ::debugfp ""
}
set ::info(DebugLog) $file
set ::debugfp [open $file w]
} else {
return -code error "bad debugging option \"$level\": should be console or file"
}
} elseif {[string is false -strict $value]} {
if {$level eq ""} {
set ::debug 0
set ::info(Debugging) 0
if {[info exists ::debugfp]} {
catch { close $::debugfp }
set ::debugfp ""
}
} elseif {$level eq "console"} {
set ::debug 0
} elseif {$level eq "file"} {
set ::info(Debugging) 0
if {[info exists ::debugfp]} {
catch { close $::debugfp }
set ::debugfp ""
}
}
} elseif {$value eq "level"} {
if {$level eq ""} {
if {!$::debug} { return 0 }
return [expr {$::verbose + 1}]
} else {
if {$level < 0 || $level > 3} {
return -code error "invalid debug level \"$level\": should be 0, 1, 2 or 3"
}

if {$level == 0} {
set ::debug "off"
set ::info(Debugging) 0
} else {
set ::debug "on"
set ::info(Debugging) 1
set ::verbose [incr level -1]
}
}
} elseif {$value ne ""} {
return -code error "usage: debugging ?on|off? ?file|console? ?logfile?"
}

if {$::debug || $::info(Debugging)} {
echo "Debugging is turned on"
} else {
echo "Debugging is turned off"
}
if {$::debug} {
echo "Debug output is being written to the console"
}
if {$::info(Debugging)} {
echo "Debug output is being saved to a debug log file"
echo "Debug log file is <%DebugLog%>" 1
}
}

proc debug { message {id ""} } {
global info

if {[info exists ::InstallJammer]} { return }

if {![string is true -strict $::debug]
&& ![string is true -strict $info(Debugging)]} { return }

set time [clock format [clock seconds] -format "%m/%d/%Y %H:%M:%S%p"]
set string "$time - $message"

if {[set x [::InstallJammer::SubstText $message]] ne $message} {
append string "\n$time - ** $x"
}

if {$id ne "" && [$id get Comment comment] && $comment ne ""} {
append string "\n$time - # $comment"
if {[set x [::InstallJammer::SubstText $comment]] ne $comment} {
append string "\n$time - ** $x"
}
}

if {![info exists ::InstallJammer]} {
if {[string is true -strict $::debug]} {
puts  stderr $string
flush stderr
}

if {[string is true -strict $info(Debugging)]} {
if {![info exists ::debugfp]} {
set ::debugfp [open [::InstallJammer::TmpDir debug.log] w]
} elseif {$::debugfp eq ""} {
set ::debugfp [open [::InstallJammer::TmpDir debug.log] a]
}

puts  $::debugfp $string
flush $::debugfp
}
}
}

proc ::echo { string {subst 0} } {
if {$subst} { set string [::InstallJammer::SubstText $string] }
puts  stdout $string
flush stdout
}

proc ::more { args } {
global conf

if {[expr {[llength $args] % 2}]} {
set text [lindex $args end]
set args [lrange $args 0 end-1]
}

array set _args {
-file      ""
-width     0
-height    0
-allowquit 1
}
array set _args $args

if {$_args(-file) ne ""} {
set text [read_file $_args(-file)]
}

set height $_args(-height)
if {$height == 0} {
set height 24
if {[info exists conf(ConsoleHeight)]} {
set height $conf(ConsoleHeight)
} else {
if {![catch { exec stty size } result]} {
set height [lindex $result 0]
}
}
}

incr height -1

if {$_args(-width) > 0} {
set text [::InstallJammer::WrapText $text $_args(-width)]
}

catch { exec stty raw -echo <@stdin }

if {!$_args(-allowquit)} {
set prompt [::InstallJammer::SubstText "<%ConsolePauseText%>"]
} else {
set prompt [::InstallJammer::SubstText "<%ConsolePauseQuitText%>"]
}

catch {
set i 0
foreach line [split $text \n] {
puts stdout $line

if {[incr i] >= $height} {
puts -nonewline stdout $prompt
flush stdout

while {1} {
set x [read stdin 1]
if {$_args(-allowquit) && $x eq "q" || $x eq "Q"} {
return
} elseif {$x eq " "} {
break
}
}

puts  stdout ""
flush stdout

set i 0
}
}
}

catch { exec stty -raw echo <@stdin }

return
}

proc ::tk_safeDialog {command opts safeOpts} {
set args {}
array set _args $opts
foreach opt $safeOpts {
if {[info exists _args($opt)]} {
if {$opt eq "-parent" && ![winfo exists $_args($opt)]} { continue }
if {$opt eq "-initialdir" && ![file exists $_args($opt)]} {continue}
lappend args $opt $_args($opt)
}
}
return [eval $command $args]
}

proc ::ij_chooseDirectory {args} {
::tk_safeDialog ::tk_chooseDirectory $args  {-initialdir -mustexist -parent title}
}

proc ::ij_getOpenFile {args} {
::tk_safeDialog ::tk_getOpenFile $args  {-defaultextension -filetypes -initialdir -initialfile  -message -multiple -parent -title -typevariable}
}

proc ::ij_getSaveFile {args} {
::tk_safeDialog ::tk_getSaveFile $args  {-defaultextension -filetypes -initialdir -initialfile  -message -multiple -parent -title -typevariable}
}

if {[info exists ::conf(unix)] && $::conf(unix)} {
proc ::tk_getOpenFile { args } {
return [eval ChooseFile .__tk_getOpenFile $args -type open]
}

proc ::tk_getSaveFile { args } {
return [eval ChooseFile .__tk_getSaveFile $args -type save]
}

proc ::tk_messageBox { args } {
return [eval ::InstallJammer::MessageBox $args]
}
}

proc SafeSet { varName value } {
upvar 1 $varName var
if {![info exists var]} { set var $value }
return $value
}

proc SafeArraySet { arrayName list } {
upvar 1 $arrayName array
foreach {varName elem} $list {
if {![info exists array($varName)]} { set array($varName) $elem }
}
}

package require msgcat

proc ::msgcat::mc { src args } {
foreach loc [::msgcat::mcpreferences] {
if {[info exists ::msgcat::Msgs_${loc}($src)]} { break }
}
return [eval [list ::msgcat::mcget $loc $src] $args]
}

proc ::msgcat::mcexists { src {locales {}} } {
if {![llength $locales]} {
set locales [::msgcat::mcpreferences]
}
foreach locale $locales {
if {$locale eq "None"} {
upvar #0 ::info msgs
} else {
upvar #0 ::msgcat::Msgs_${locale} msgs
}

if {[info exists msgs($src)]} { return 1 }
}
return 0
}

proc msgcat::mclocale { args } {
variable Locale
variable Loclist

if {[llength $args] == 1 && [lindex $args 0] eq ""} {
set Loclist {}
return
}

if {[llength $args]} {
foreach locale $args {
set loc  {}
set word ""
foreach part [split [string tolower $locale] _] {
set word [string trimleft "${word}_${part}" _]
if {[set x [lsearch -exact $Loclist $word]] > -1} {
set Loclist [lreplace $Loclist $x $x]
}
set Loclist [linsert $Loclist 0 $word]
}
}
set Locale $locale
}
return $Locale
}

proc ::msgcat::mcset { locale src {dest ""} } {
if {$locale eq "None"} {
upvar #0 ::info msgs
} else {
upvar #0 ::msgcat::Msgs_${locale} msgs
}

if {[llength [info level 0]] == 3} { set dest $src }
set msgs($src) $dest
}

proc ::msgcat::mcunset { locale src } {
if {$locale eq "None"} {
upvar #0 ::info msgs
} else {
upvar #0 ::msgcat::Msgs_${locale} msgs
}

array unset msgs $src
}

proc ::msgcat::mcmset { locale pairs } {
if {$locale eq "None"} {
upvar #0 ::info msgs
} else {
upvar #0 ::msgcat::Msgs_${locale} msgs
}

array set msgs $pairs
}

proc ::msgcat::mcgetall { locale } {
if {$locale eq "None"} {
upvar #0 ::info msgs
} else {
upvar #0 ::msgcat::Msgs_${locale} msgs
}

return [array get msgs]
}

proc ::msgcat::mcget { locale src args } {
if {$locale eq "None"} {
upvar #0 ::info msgs
} else {
upvar #0 ::msgcat::Msgs_${locale} msgs
}

if {![info exists ::msgcat::renderer($locale)]} {
set ::msgcat::renderer($locale)  [expr {[info commands ::${locale}::render] ne ""}]
}

if {[info exists msgs($src)]} {
set src $msgs($src)

if {$::msgcat::renderer($locale)} {
set src [::${locale}::render $src]
}
}

if {[llength $args]} {
return [uplevel 1 [linsert $args 0 ::format $src]]
} else {
return $src
}
}

proc ::msgcat::mcclear { locale } {
unset -nocomplain ::msgcat::Msgs_${locale}
}

namespace eval ::InstallJammer {}
namespace eval ::InstallJammer::actions {}
namespace eval ::InstallJammer::conditions {}

proc ::InstallJammer::CommonInit {} {
global info
global conf

if {[info exists conf(commonInit)]} { return }

set conf(osx)     [string equal $::tcl_platform(os) "Darwin"]
set conf(unix)    [string equal $::tcl_platform(platform) "unix"]
set conf(windows) [string equal $::tcl_platform(platform) "windows"]

set conf(windows98) 0
if {$conf(windows) && $::tcl_platform(osVersion) < 5.0} {
set conf(windows98) 1
}

set conf(vista) 0
if {$conf(windows) && $::tcl_platform(osVersion) >= 6.0} {
set conf(vista) 1
}

array set conf {
commonInit   1

twapi        0
logInit      0

ObjectStack   {}
ParentWindow  {}
UpdateWidgets {}
ButtonWidgets {BackButton NextButton CancelButton}

UserRCFiles {~/.bashrc ~/.cshrc ~/.tcshrc ~/.zshrc ~/.kshrc ~/.profile}
SystemRCFiles {/etc/bashrc /etc/csh.cshrc /etc/zshrc /etc/profile}

UpdateWindowsRegistry 0

SubstDirVars {
CommonStartMenu
Desktop
FileBeingInstalled
GnomeCommonStartMenu
GnomeDesktop
GnomeStartMenu
Home
InstallDir
Installer
InstallLogDirectory
InstallSource
KDECommonStartMenu
KDEDesktop
KDEStartMenu
ProgramReadme
ProgramLicense
ProgramExecutable
ProgramFolder
Uninstaller
UninstallDirectory
}

VirtualTextMap            {}
VirtualTextRecursionLimit 10
}

lappend conf(VirtualTextMap) "\\" "\\\\" "\[" "\\\["
lappend conf(VirtualTextMap) "<%" {[::InstallJammer::SubstVar [list }
lappend conf(VirtualTextMap) "%>" {]]}

if {[info exists ::installkit::root]} {
set conf(vfs) $::installkit::root
}
set conf(exe)      [info nameofexecutable]
set conf(script)   [info script]
set conf(threaded) [info exists ::tcl_platform(threaded)]

if {$conf(windows)} {
set info(Ext)       ".exe"
set info(ScriptExt) ".bat"
} else {
set info(Ext)       ""
set info(ScriptExt) ".sh"
}

array set ::InstallJammer::PropertyMap {
Include {
"Always include"
"Include only when testing"
"Include only when not testing"
}

ExecuteAction {
"After Pane is Cancelled"
"After Pane is Displayed"
"After Pane is Finished"
"Before Next Pane is Displayed"
"Before Pane is Cancelled"
"Before Pane is Displayed"
"Before Pane is Finished"
"Before Previous Pane is Displayed"
}

FileUpdateMethod {
"Update files with more recent dates"
"Update files with a newer version"
"Always overwrite files"
"Never overwrite files"
}

CheckCondition {
"After Pane is Cancelled"
"Before Next Pane is Displayed"
"Before Pane is Cancelled"
"Before Pane is Displayed"
"Before Pane is Finished"
"Before Previous Pane is Displayed"
"Before Action is Executed"
"Before Next Action is Executed"
}
}

if {!$conf(windows)} {
append ::env(PATH) ":/bin:/sbin:/usr/bin:/usr/sbin"
append ::env(PATH) ":/usr/local/bin:/usr/local/sbin"
}

::InstallJammer::InitializeMessageCatalogs

set info(SystemLanguage) [::msgcat::mclocale]
::msgcat::mclocale {}
::msgcat::mclocale en

set conf(NativeChooseFile)       [expr {!$conf(unix)}]
set conf(NativeMessageBox)       [expr {!$conf(unix)}]
set conf(NativeChooseDirectory)  [expr {!$conf(unix)}]

if {![info exists ::InstallJammer]} {

set ::debug "off"

array set conf {
ConsoleWidth      80
ConsoleHeight     24
NativeMessageBox  0
}
set conf(NativeChooseDirectory) $conf(osx)

array set info {
Wizard             .wizard
WizardFirstStep    0
WizardLastStep     0
WizardStarted      0
WizardFinished     0
WizardCancelled    0

Errors             ""

SilentMode         0
DefaultMode        0

UserMovedBack      0
UserMovedNext      0

ShowConsole        0

Debugging          0
Testing            0
}

SafeArraySet info {
AllowLanguageSelection 1
PromptForRoot          1

Language               "en"

InstallMode            "Standard"
UninstallMode          "Standard"

FallBackToConsole      0

InstallVersionInfo     1
InstallRegistryInfo    1

RunningInstaller       0
RunningUninstaller     0

SpaceRequiredText      "<%DiskSpace <%SpaceRequired%>%>"
SpaceAvailableText     "<%DiskSpace <%SpaceAvailable%>%>"
}

set info(Home) [::InstallJammer::HomeDir]

if {[info exists info(DefaultLanguage)] && $info(RunningInstaller)} {
set info(Language) [GetLanguageCode $info(DefaultLanguage)]
::msgcat::mclocale $info(Language)
}

::msgcat::mclocale $info(SystemLanguage)

if {$conf(windows)} {
set info(Username)      $::tcl_platform(user)
set info(PathSeparator) \;

set info(Desktop) <%DESKTOP%>

::InstallJammer::SetWindowsPlatform
::InstallJammer::SetupRegVirtualText
} else {
set info(Username)        [id user]
set info(PathSeparator)   :
set info(HasKDEDesktop)   [::InstallJammer::HasKDEDesktop]
set info(HasGnomeDesktop) [::InstallJammer::HasGnomeDesktop]

switch -- [::InstallJammer::GetDesktopEnvironment] {
"KDE" {
set info(Desktop) <%KDEDesktop%>
}

"Gnome" {
set info(Desktop) <%GnomeDesktop%>
}
}

set info(HaveTerminal) [expr {[catch { exec tty }] == 0}]
}

set info(UserIsRoot)   [string equal $info(Username) "root"]
set info(RealUsername) $::tcl_platform(user)

::InstallAPI::SetVirtualText -virtualtext Status -value "" -autoupdate 1

::InstallAPI::SetVirtualText -virtualtext InstallDir  -command ::InstallJammer::ModifyInstallDir

::InstallAPI::SetVirtualText -virtualtext Language  -command ::InstallJammer::ModifyInstallTitle
::InstallAPI::SetVirtualText -virtualtext InstallTitleText  -command ::InstallJammer::ModifyInstallTitle
::InstallAPI::SetVirtualText -virtualtext InstallTitleText  -language all -command ::InstallJammer::ModifyInstallTitle
}

SafeArraySet info {
Date            "<%Date <%DateFormat%>%>"
DateFormat      "%Y%m%d"
}
}

proc ::InstallJammer::CommonPostInit {} {
global conf
global info

set conf(stop)  [::InstallJammer::TmpDir .stop]
set conf(pause) [::InstallJammer::TmpDir .pause]

if {[info exists conf(vfs)]} {
set bin    [file join $conf(vfs) lib bin]
set tmpbin [::InstallJammer::TmpDir bin]
if {[file exists $bin] && ![file exists $tmpbin]} {
append ::env(PATH) $info(PathSeparator)$tmpbin
file copy -force $bin $tmpbin
if {!$conf(windows)} {
foreach file [glob -dir $tmpbin *] {
file attributes $file -permissions 0755
}
}
}
}
}

proc ::InstallJammer::InitializeMessageCatalogs {} {
global conf
global info

variable languages
variable languagecodes

if {[info exists ::InstallJammer]} {
set langfile [file join $conf(lib) msgs languages.txt]
if {[file exists $langfile]} {
array set ::InstallJammer::languagecodes [read_file $langfile]
}
}

if {![array exists languagecodes]} {
array set languagecodes {
de      "German"
en      "English"
es      "Spanish"
fr      "French"
pl      "Polish"
pt_br   "Brazilian Portuguese"
}
}

if {[info exists info(Languages)]} {
array set languagecodes $info(Languages)
}

foreach var [array names languagecodes] {
set languages($languagecodes($var)) $var
}
set languages(None) None

return [lsort [array names languagecodes]]
}

proc ::InstallJammer::GetLanguageCode { lang } {
set lang [string tolower $lang]

set codes [::InstallJammer::GetLanguageCodes]
if {[set x [lsearch -exact [string tolower $codes] $lang]] > -1} {
return [lindex $codes $x]
}

set langs [::InstallJammer::GetLanguages]
if {[set x [lsearch -exact [string tolower $langs] $lang]] > -1} {
return $::InstallJammer::languages([lindex $langs $x])
}
}

proc ::InstallJammer::GetLanguageCodes {} {
return [lsort [array names ::InstallJammer::languagecodes]]
}

proc ::InstallJammer::GetLanguage { code } {
set code [string tolower $code]

set langs [::InstallJammer::GetLanguages]
if {[set x [lsearch -exact [string tolower $langs] $code]] > -1} {
return [lindex $langs $x]
}

set codes [::InstallJammer::GetLanguageCodes]
if {[set x [lsearch -exact [string tolower $codes] $code]] > -1} {
return $::InstallJammer::languagecodes([lindex $codes $x])
}
}

proc ::InstallJammer::GetLanguages { {includeNone 0} } {
variable languages
set list [lremove [lsort [array names languages]] None]
if {$includeNone} { set list [linsert $list 0 None] }
return $list
}

proc ::InstallJammer::ConfigureBidiFonts {} {
if {$::info(Language) eq "ar"} {
foreach font [font names] {
font configure $font -family Arial -size 10
}
}
}

proc ::InstallJammer::LoadTwapi {} {
global conf

if {$conf(windows)
&& $::tcl_platform(osVersion) >= 5.0
&& [info exists ::installkit::root]
&& [llength [package versions twapi]]} {
namespace eval ::starkit {
variable topdir $::installkit::root
}

package require twapi
set conf(twapi) 1
}
}

proc ::InstallJammer::InitializeCommandLineOptions {} {
global conf
global info

if {[info exists conf(initializeCommandLine)]} { return }
set conf(initializeCommandLine) 1

variable ::InstallJammer::CommandLineOptions


set CommandLineOptions(help) {
{} Switch 0 0 {}
"display this information"
}

set CommandLineOptions(temp) {
TempRoot String 0 0 {}
"set the temporary directory used by this program"
}

set CommandLineOptions(version) {
{} Switch 0 0 {}
"display installer version information"
}


foreach opt [array names CommandLineOptions] {
set name [string tolower $opt]
set CommandLineOptions($name) [concat $opt $CommandLineOptions($opt)]
if {$opt ne $name} { unset CommandLineOptions($opt) }

lassign $CommandLineOptions($name) x var type debug hide values desc
if {$type eq "Prefix"} {
lappend CommandLineOptions(PREFIX) $name
}
}
}

proc ::InstallJammer::HideMainWindow {} {
global conf
global info

if {[info exists ::tk_patchLevel]} {
wm geometry . 0x0+-10000+-10000
::InstallJammer::ModifyInstallTitle
if {!$conf(windows) || !$info(GuiMode)} { wm overrideredirect . 1 }

if {$info(GuiMode)} { wm deiconify . }
}
}

proc ::InstallJammer::NewStyle { newStyle oldStyle args } {
style layout $newStyle [style layout $oldStyle]
eval [list style configure $newStyle] [style configure $oldStyle] $args
return $newStyle
}

proc ::InstallJammer::CreateDir { dir {log 1} } {
variable CreateDir

if {![info exists CreateDir($dir)]} {
set list [file split $dir]

for {set i 0} {$i < [llength $list]} {incr i} {
lappend dirlist [lindex $list $i]
set dir [eval file join $dirlist]
if {![info exists CreateDir($dir)]} {
set CreateDir($dir) 1
if {![file exists $dir]} {
file mkdir $dir
if {$log} { ::InstallJammer::LogDir $dir }
}
}
}
}

return $dir
}

proc ::InstallJammer::DirIsEmpty { dir } {
set list1 [glob -nocomplain -directory $dir *]
set list2 [glob -nocomplain -directory $dir -types hidden *]
set list  [lremove [concat $list1 $list2] $dir/. $dir/..]
return    [lempty $list]
}

proc ::InstallJammer::PlaceWindow { id args } {
set id [::InstallJammer::ID $id]
set anchor center

if {[winfo exists $id]} {
set target $id
} else {
set target [$id window]
if {![$id get Anchor anchor]} { set anchor center }
}

array set data "
-anchor $anchor
-width  [winfo reqwidth  $target]
-height [winfo reqheight $target]
"

array set data $args

set w  $data(-width)
set h  $data(-height)
set sw [winfo screenwidth $target]
set sh [winfo screenheight $target]
lassign [wm maxsize .] maxw maxh
set anchor $data(-anchor)
switch -- $anchor {
"center" {
set x0 [expr ($sw - $w) / 2 - [winfo vrootx $target]]
set y0 [expr ($sh - $h) / 2 - [winfo vrooty $target]]
}

"n" {
set x0 [expr ($sw - $w)  / 2 - [winfo vrootx $target]]
set y0 20
}

"ne" {
set x0 [expr $maxw - $w - 40]
set y0 20
}

"e" {
set x0 [expr $maxw - $w - 40]
set y0 [expr ($sh - $h) / 2 - [winfo vrooty $target]]
}

"se" {
set x0 [expr $maxw - $w - 40]
set y0 [expr $maxh - $h - 80]
}

"s" {
set x0 [expr ($sw - $w)  / 2 - [winfo vrootx $target]]
set y0 [expr $maxh - $h - 80]
}

"sw" {
set x0 20
set y0 [expr $maxh - $h - 80]
}

"w" {
set x0 20
set y0 [expr ($sh - $h) / 2 - [winfo vrooty $target]]
}

"nw" {
set x0 20
set y0 20
}

default {
append msg "bad anchor \"$anchor\": must be"
append msg "n, ne, e, se, s, sw, w, nw or center"
return -code error $msg
}
}

set x "+$x0"
set y "+$y0"
if { $x0+$w > $sw } {set x "-0"; set x0 [expr {$sw-$w}]}
if { $x0 < 0 }      {set x "+0"}
if { $y0+$h > $sh } {set y "-0"; set y0 [expr {$sh-$h}]}
if { $y0 < 0 }      {set y "+0"}

wm geometry $target $x$y
update
}

proc ::InstallJammer::CenterWindow { target {w 473} {h 335} {lower 0} } {
set args [list -width $w -height $h]
if {$lower} { lappend args -anchor s }
eval [list PlaceWindow $target] $args
}

proc ::InstallJammer::ID { args } {
set alias [join $args]
if {[info exists ::InstallJammer::aliases($alias)]} {
return $::InstallJammer::aliases($alias)
}
return $alias
}

proc ::InstallJammer::FindCommonPane { pane } {
foreach id [Common children] {
if {[string equal [$id component] $pane]} { return $id }
}
}

proc ::InstallJammer::FindObjByName { name objects } {
foreach object $objects {
if {[string equal [$object name] $name]} { return $object }
}
}

proc ::InstallJammer::GetPaneProc { id prefix } {
set proc $prefix.$id
if {![::InstallJammer::CommandExists $proc]} {
set proc $prefix.[$id component]
}
if {[::InstallJammer::CommandExists $proc]}  { return $proc }
}

proc ::InstallJammer::CurrentObject { {command "get"} {id ""} } {
global conf
global info

if {$command eq "get"} {
set id [lindex $conf(ObjectStack) end]
} elseif {$command eq "pop"} {
set id [lindex $conf(ObjectStack) end]
set conf(ObjectStack) [lrange $conf(ObjectStack) 0 end-1]
} elseif {$command eq "push" && $id ne ""} {
lappend conf(ObjectStack) $id
}

set info(CurrentObject) [lindex $conf(ObjectStack) end]

return $id
}

proc ::InstallJammer::ExecuteActions { id args } {
global info

array set _args {
-when       ""
-type       ""
-parent     ""
-conditions 1
}
array set _args $args

set id [::InstallJammer::ID $id]

if {![::InstallJammer::ObjExists $id]} {
return 0
}

if {[$id is action]} {
set idlist [list $id]
} else {
set idlist [$id children]
}

if {![llength $idlist]} {
return 0
}

set msg "Executing actions $id"
if {![catch { $id title } title]} { append msg " - $title" }
if {$_args(-when) ne ""} { append msg " - $_args(-when)" }
debug $msg

set res 1
foreach id $idlist {
if {![$id active]} { continue }

set obj  $id
set type [$obj component]

if {$_args(-type) ne "" && $type ne $_args(-type)} { continue }


if {$_args(-parent) ne ""} {
set obj [::InstallJammer::CreateTempAction $_args(-parent) $id]
lappend tempObjects $obj
}

if {$_args(-when) ne ""
&& [$obj get ExecuteAction when]
&& ![string equal -nocase $_args(-when) $when]} { continue }

set info(CurrentAction) $id
::InstallJammer::CurrentObject push $id

set when "Before Action is Executed"
if {$_args(-conditions) && ![$obj checkConditions $when]} {
debug "Skipping action $id - [$id title] - conditions failed"
::InstallJammer::CurrentObject pop
continue
}

set when "Before Next Action is Executed"
while {1} {
set res [$obj execute]

if {!$_args(-conditions) || [$obj checkConditions $when]} { break }
}

::InstallJammer::CurrentObject pop
}

if {[info exists tempObjects]} {
eval itcl::delete object $tempObjects
}

return $res
}

proc ::InstallJammer::CreateTempAction { id child } {
set obj [InstallComponent ::#auto -temp 1 -parent [$id parent]  -setup [$id setup] -type action -id $child -name [$child name]  -component [$child component] -conditions [$child conditions]  -operator [$child operator]]

return $obj
}

proc ::InstallJammer::BackCommand { wizard id } {
global info

set when "Before Previous Pane is Displayed"

if {![$id checkConditions $when]} { return 0 }

::InstallJammer::ExecuteActions $id -when $when

set info(UserMovedBack) 1
set info(UserMovedNext) 0

return 1
}

proc ::InstallJammer::NextCommand { wizard id } {
global info

set when "Before Next Pane is Displayed"

if {![$id checkConditions $when]} { return 0 }

::InstallJammer::ExecuteActions $id -when $when

set info(UserMovedBack) 0
set info(UserMovedNext) 1

return 1
}

proc ::InstallJammer::CancelCommand { wizard id } {
set when "Before Pane is Cancelled"

if {![$id checkConditions $when]} { return 0 }

::InstallJammer::ExecuteActions $id -when $when

return 1
}

proc ::InstallJammer::CancelEventHandler { wizard } {


if {[$wizard itemcget cancel -state] eq "normal"} {
::InstallJammer::exit 1
}
}

proc ::InstallJammer::FinishCommand { wizard id } {
set when "Before Pane is Finished"

if {![$id checkConditions $when]} { return 0 }

::InstallJammer::ExecuteActions $id -when $when

return 1
}

proc ::InstallJammer::FinishEventHandler { wizard } {
set id [$wizard raise]

set when "After Pane is Finished"
::InstallJammer::ExecuteActions $id -when $when

::InstallJammer::exit
}

proc ::InstallJammer::RaiseEventHandler { wizard } {
global conf
global info

set id [$wizard raise]

set info(CurrentPane) $id

set when "Before Pane is Displayed"
if {![$id active] || ![$id checkConditions $when]} {

if {![$id active]} {
debug "Skipping pane $id - [$id title] - pane is inactive" $id
} else {
debug "Skipping pane $id - [$id title] - conditions failed" $id
}

$wizard order [lrange [$wizard order] 0 end-1]
::InstallJammer::Wizard next 1 0
return
}

debug "Displaying pane $id - [$id title]" $id

::InstallJammer::ExecuteActions $id -when $when

if {$id ne [$wizard raise]} { return }

if {[info exists conf(LastStepId)] && [$conf(LastStepId) is window]} {
set window [$conf(LastStepId) window]
::InstallJammer::TransientParent $window 1
wm withdraw $window
} else {
::InstallJammer::TransientParent $wizard 1
}

if {[$id is window]} {
set base [$id window]
::InstallJammer::TransientParent $base

wm withdraw $wizard

::InstallJammer::UpdateWidgets

if {![$id get Modal  modal]}  { set modal  0 }
if {![$id get Dialog dialog]} { set dialog 0 }

if {[winfo exists $base]} {
wm deiconify $base
raise $base
if {$modal} { ::InstallJammer::Grab set $base }
}

update

set when "After Pane is Displayed"
::InstallJammer::ExecuteActions $id -when $when

if {[winfo exists $base]} {
if {$dialog} {
if {[$id get DialogVairiable varName]} {
tkwait variable $varName
} else {
tkwait window $base
}
}

if {$modal} { ::InstallJammer::Grab release $base }
}
} else {
::InstallJammer::TransientParent $wizard
::InstallJammer::UpdateWidgets -wizard $wizard -step $id -buttons 1

$wizard show
focus [$wizard widget get next]
update

set when "After Pane is Displayed"
::InstallJammer::ExecuteActions $id -when $when
}

set info(WizardLastStep)  0
set info(WizardFirstStep) 0

set conf(LastStepId) $id
}

proc ::InstallJammer::UpdateWizardButtons { args } {
global info

if {[llength $args]} {
lassign $args wizard id
} else {
set wizard $info(Wizard)
set id [$wizard raise]
}

if {![$id get Buttons buttons]} { return }

foreach button [list back next cancel finish help] {
if {![$wizard exists $button]} { continue }

set text [string totitle $button]
if {[string match "*$text*" $buttons]} {
$wizard itemconfigure $button -hide 0

set w [$wizard widget get $button -step $id]
::InstallJammer::SetText $w $id [string toupper $button 0]Button
} else {
$wizard itemconfigure $button -hide 1
}
}
}

proc ::InstallJammer::Wizard { args } {
global info

set wizard $info(Wizard)

if {![llength $args]} { return $wizard }

set command [lindex $args 0]
set args    [lrange $args 1 end]

set id [::InstallJammer::ID [lindex $args 0]]

switch -- $command {
"back" {
if {![llength $args]} { set args 1 }
eval [list $info(Wizard) back] $args
}

"next" {
if {![llength $args]} { set args 1 }
eval [list $info(Wizard) next] $args
}

"create" {
::InstallJammer::CreateWindow $wizard $id
}

"raise" {
set args [lreplace $args 0 0 $id]
if {[llength $args] == 1} { lappend args 1 }
eval [list $info(Wizard) raise] $args
}

"show" {
$wizard show
}

"hide" {
if {$id eq ""} {
$wizard hide
} else {
wm withdraw [$id window]
}
}
}
}

proc ::InstallJammer::CreateWindow { wizard id {preview 0} } {
set id    [::InstallJammer::ID $id]
set pane  [$id component]
set istop [$id is window]

set base  .[$id name]

if {$istop} {
if {[winfo exists $base]} { return $base }
} else {
if {[$wizard exists $id] && ($preview || [$id created])} {
return [$wizard widget get $id]
}
}

set parent [$id parent]

if {$preview && ![$wizard exists $id]} {
set parent root
$id get WizardOptions opts
eval [list $wizard insert step end $parent $id] $opts
}

if {!$preview && [$wizard exists $id]} {
$wizard itemconfigure $id  -backcommand   [list ::InstallJammer::BackCommand  $wizard $id]   -nextcommand   [list ::InstallJammer::NextCommand  $wizard $id]   -cancelcommand [list ::InstallJammer::CancelCommand $wizard $id]  -finishcommand [list ::InstallJammer::FinishCommand $wizard $id]

bind $wizard <<WizardStep>>   "::InstallJammer::RaiseEventHandler  %W"
bind $wizard <<WizardCancel>> "::InstallJammer::CancelEventHandler %W"
bind $wizard <<WizardFinish>> "::InstallJammer::FinishEventHandler %W"

bind $wizard <<WizardLastStep>>  "set ::info(WizardLastStep)  1"
bind $wizard <<WizardFirstStep>> "set ::info(WizardFirstStep) 1"

$id created 1
}

set proc [GetPaneProc $id CreateWindow]

if {[string length $proc]} {
if {!$istop} {
$wizard createstep $id

$proc $wizard $id
set base [$wizard widget get $id]
$id window $base
} else {
$id window $base
$proc $wizard $id
}
}

return $base
}

proc ::InstallJammer::TransientParent { {parent ""} {remove 0} } {
global conf

if {$parent ne ""} {
if {$remove} {
set conf(ParentWindow) [lremove $conf(ParentWindow) $parent]
} else {
lappend conf(ParentWindow) $parent
}
}

set parent "."
if {[info exists conf(ParentWindow)]} {
set windows $conf(ParentWindow)
set conf(ParentWindow) [list]

foreach window $windows {
if {[winfo exists $window]} {
lappend conf(ParentWindow) $window
}
}

foreach window [lreverse $conf(ParentWindow)] {
if {[wm state $parent] eq "normal"} {
set parent $window
break
}
}
}

if {[wm state $parent] ne "normal"} { set parent "" }

return $parent
}

proc ::InstallJammer::ParseArgs { arrayName arglist args } {
upvar 1 $arrayName a

array set _args $args

if {[info exists _args(-switches)]} {
foreach switch $_args(-switches) {
set a($switch) 0
set s($switch) 1
}
}

if {[info exists _args(-options)]} {
array set o $_args(-options)
foreach {option default} $_args(-options) {
set a($option) $default
}
}

set a(_ARGS_) [list]

set len [llength $arglist]
for {set i 0} {$i < $len} {incr i} {
set arg [lindex $arglist $i]

if {[info exists s($arg)]} {
set a($arg) 1
} elseif {[info exists o($arg)]} {
set a($arg) [lindex $arglist [incr i]]
} else {
set a(_ARGS_) [lrange $arglist $i end]
break
}
}
}

proc ::InstallJammer::SetObjectProperties { id args } {
variable ::InstallJammer::Properties

::InstallJammer::ParseArgs _args $args -switches {-safe -nocomplain}

set args $_args(_ARGS_)

if {[llength $args] == 1} { set args [lindex $args 0] }
if {[llength $args] == 1} {
set property [lindex $args 0]
if {[info exists Properties($id,$property)]} {
return $Properties($id,$property)
}

if {!$_args(-nocomplain)} {
return -code error "invalid property '$property'"
}

return
}

foreach {property value} $args {
if {!$_args(-safe) || ![info exists Properties($id,$property)]} {
if {$property eq "Alias"} {
catch { $id alias $value }

if {[info exists ::InstallJammer::aliasmap($id)]} {
$id CleanupAlias
}

if {$value ne ""} {
set ::InstallJammer::aliases($value) $id
set ::InstallJammer::aliasmap($id) $value
}
}

if {$property eq "Active"} { $id active $value }

if {![info exists ::InstallJammer]} {
variable ::InstallJammer::PropertyMap
if {[info exists PropertyMap($property)]} {
set n [lsearch -exact $PropertyMap($property) $value]
if {$n < 0} {
return -code error [BWidget::badOptionString value  $value $PropertyMap($property)]
}
set value $n
}
}
set Properties($id,$property) $value
}
}

return $Properties($id,$property)
}

proc ::InstallJammer::GetObjectProperty { id property {varName ""} } {
set value  ""
set exists [info exists ::InstallJammer::Properties($id,$property)]
if {$exists} {
set value $::InstallJammer::Properties($id,$property)
if {[info exists ::InstallJammer::PropertyMap($property)]
&& [string is integer -strict $value]} {
set value [lindex $::InstallJammer::PropertyMap($property) $value]
}
}

if {$varName ne ""} {
upvar 1 $varName var
set var $value
return $exists
} else {
return $value
}
}

proc ::InstallJammer::ObjectProperties { id arrayName args } {
upvar 1 $arrayName array
variable ::InstallJammer::Properties

::InstallJammer::ParseArgs _args $args -options {-prefix "" -subst 0}

set slen 0
if {[info exists _args(-subst)]} {
set subst $_args(-subst)
set slen  [llength $subst]
}

if {![llength $_args(_ARGS_)]} {
foreach varName [array names Properties $id,*] {
set var [string map [list $id, ""] $varName]
set val $Properties($varName)
if {$slen && ($subst eq "1" || [lsearch -exact $subst $var] > -1)} {
set val [::InstallJammer::SubstText $val]
}
set var $_args(-prefix)$var
lappend vars $var
set array($var) $val
}
} else {
foreach var $_args(_ARGS_) {
if {![info exists Properties($id,$var)]} { continue }
set val $Properties($id,$var)
if {$slen && ($subst eq "1" || [lsearch -exact $subst $var] > -1)} {
set val [::InstallJammer::SubstText $val]
}
set var $_args(-prefix)$var
lappend vars $var
set array($var) $val
}
}

return $vars
}

proc ::InstallJammer::ObjectChildrenRecursive { object } {
set children [list]

foreach child [$object children] {
lappend children $child
eval lappend children [::InstallJammer::ObjectChildrenRecursive $child]
}

return $children
}

proc ::InstallJammer::SetTitle { w id } {
set id [::InstallJammer::ID $id]
set title [::InstallJammer::GetText $id Title]
wm title $w $title
}

proc ::InstallJammer::SetVirtualText { languages window args } {
if {[llength $args] == 1} { set args [lindex $args 0] }

if {[string equal -nocase $languages "all"]} {
set languages [::InstallJammer::GetLanguageCodes]
}

foreach lang $languages {
if {$lang eq "None"} {
global info
foreach {name value} $args {
set info($name) $value
debug "Virtual Text $name is now set to $value"
}
} else {
set lang [::InstallJammer::GetLanguageCode $lang]
foreach {name value} $args {
::msgcat::mcset $lang $window,$name $value
}
}
}
}

proc ::InstallJammer::GetText { id field args } {
global info

array set _args {
-subst      1
-language   ""
-forcelang  0
-forcesubst 0
}
array set _args $args

set languages {}
if {$_args(-language) ne ""} {
foreach lang $_args(-language) {
lappend languages [::InstallJammer::GetLanguageCode $lang]
}
}
if {!$_args(-forcelang)} {
eval lappend languages [::msgcat::mcpreferences]
}

if {[string equal -nocase $_args(-language) "all"]} {
foreach lang [::InstallJammer::GetLanguageCodes] {
set text [::InstallJammer::GetTextForField $id $field $lang]
if {[info exists last] && $last ne $text} { return }
set last $text
}
if {$_args(-subst)} { set text [::InstallJammer::SubstText $text] }
return $text
}

set found 0
foreach lang $languages {
set text [::InstallJammer::GetTextForField $id $field $lang]
if {$text ne ""} {
set found 1
break
}
}

if {$found} {
if {$_args(-forcesubst)
|| ($_args(-subst) && [$id get $field,subst subst] && $subst)} {
set text [::InstallJammer::SubstText $text]
}

return $text
}
}

proc ::InstallJammer::GetTextForField { id field lang } {
set id   [::InstallJammer::ID $id]
set item [$id component]
set text [::msgcat::mcget $lang $id,$field]
if {$text eq "$id,$field"} {
set text [::msgcat::mcget $lang $item,$field]
}
if {$text ne "$item,$field"} {
return $text
}
}

proc ::InstallJammer::SetText { args } {
if {[llength $args] == 3} {
lassign $args w id field
set id   [::InstallJammer::ID $id]
set text [::InstallJammer::GetText $id $field]
} elseif {[llength $args] == 2} {
lassign $args w text
}

if {![winfo exists $w]} { return }

set class [winfo class $w]

if {$class eq "Frame" || $class eq "TFrame"} {
foreach child [winfo children $w] {
set class [winfo class $child]
if {$class eq "Label" || $class eq "TLabel"} {
set w $child
break
}
}
}

if {$class eq "Text"} {
if {![$w cget -maxundo]} {
$w configure -state normal
$w delete 0.0 end
$w insert end $text
$w configure -state disabled
}
} elseif {($class eq "Label" || $class eq "TLabel")
&& [string length [$w cget -textvariable]]} {
set [$w cget -textvariable] $text
} else {
$w configure -text $text
}
}

proc ::InstallJammer::Image { id image } {
global images

set id    [::InstallJammer::ID $id]
set image $id,$image

if {![ImageExists $image]} { set image [$id component],$image }
if {![ImageExists $image]} { return }

set x [::InstallJammer::SubstText $images($image)]
if {[string index $x 0] eq "@"} { set x [string range $x 1 end] }
set x [::InstallJammer::ID $x]
set x [::InstallJammer::Normalize $x unix]
if {[info exists images($x)]} { return $images($x) }

if {[::InstallJammer::IsID $x] && [::InstallJammer::ObjExists $x]} {
set images($x) [image create photo -file [$x srcfile]]
} elseif {[file exists $x]} {
set images($x) [image create photo -file $x]
}

if {[info exists images($x)]} { return $images($x) }
}

proc ::InstallJammer::SetImage { w id image } {
set image [::InstallJammer::Image $id $image]
if {[winfo class $w] eq "TLabel"} { set image [list $image] }
$w configure -image $image
}

proc ::InstallJammer::ImageExists {img} {
global images
return [info exists images($img)]
}

proc ::InstallJammer::GetWidget { widget {id ""} } {
global info

if {![info exists info(Wizard)] || ![winfo exists $info(Wizard)]} { return }

if {$id eq ""} { set id [$info(Wizard) raise] }
if {$id eq ""} { return }

while {![$id ispane]} {
if {$id eq ""} { return }
set id [$id parent]
}

set widget [join [string trim $widget] ""]

switch -- $widget {
"BackButton" - "NextButton" - "CancelButton" {
set widget [string tolower [string range $widget 0 end-6]]
set widget [$info(Wizard) widget get $widget]
}

default {
if {![winfo exists $widget]} {
set widget [$id widget get $widget]
}
}
}

return $widget
}

proc ::InstallJammer::FindUpdateWidgets { textList args } {
global conf
global info

if {![info exists ::tk_patchLevel]} { return }
if {![info exists info(Wizard)]} { return }

set _args(-wizard)  $info(Wizard)
array set _args $args

set wizard $_args(-wizard)
if {![winfo exists $wizard]} { return }

if {![info exists _args(-step)]} { set _args(-step) [$wizard raise] }
set step $_args(-step)

if {$step eq ""} { return }

set widgets [concat [$step widgets] $conf(ButtonWidgets)]

trace remove variable ::info write ::InstallJammer::VirtualTextTrace

set include {}
foreach virtualtext $textList {
unset -nocomplain orig
if {[info exists info($virtualtext)]} { set orig $info($virtualtext) }

foreach widget $widgets {
set info($virtualtext) TEST1
set text1 [::InstallJammer::GetText $step $widget]

set info($virtualtext) TEST2
set text2 [::InstallJammer::GetText $step $widget]

if {$text1 ne $text2} { lappend include $widget }
}

if {[info exists orig]} {
set info($virtualtext) $orig
} else {
unset info($virtualtext)
}
}

trace add variable ::info write ::InstallJammer::VirtualTextTrace

return $include
}

proc ::InstallJammer::UpdateSelectedWidgets { {widgets {}} args } {
if {![info exists ::tk_patchLevel]} { return }

if {![llength $widgets]} { set widgets $::conf(UpdateWidgets) }

if {[llength $args]} {
set wizard [lindex $args 0]
set step   [lindex $args 1]
if {![winfo exists $wizard]} { return }
} else {
set wizard $::info(Wizard)
if {![winfo exists $wizard]} { return }

set step   [$wizard raise]
}

foreach widget $widgets {
if {[lsearch -exact $::conf(ButtonWidgets) $widget] > -1} {
set name [string tolower [string map {Button ""} $widget]]
if {[$wizard exists $name]} {
set w [$wizard widget get $name -step $step]
::InstallJammer::SetText $w $step $widget
}
} else {
set w [$step widget get $widget]

if {![winfo exists $w]} { continue }

switch -- [$step widget type $widget] {
"progress" {
set value [::InstallJammer::GetText $step $widget]
if {[string is double -strict $value]} {
$w configure -value $value
}
}

"image" {
::InstallJammer::SetImage $w $step $widget
}

"text" {
::InstallJammer::SetText $w $step $widget
}

"usertext" {
set text [::InstallJammer::GetText $step $widget]
$w clear
$w insert end $text
}
}
}
}
}

proc ::InstallJammer::UpdateWidgets { args } {
global conf
global info

if {![info exists ::tk_patchLevel]} { return }
if {![info exists info(Wizard)]} { return }

array set _args {
-update          0
-buttons         0
-widgets         {}
-updateidletasks 0
}
set _args(-wizard)  $info(Wizard)
set _args(-widgets) $conf(UpdateWidgets)

array set _args $args

set wizard $_args(-wizard)
if {![winfo exists $wizard]} { return }

if {![info exists _args(-step)]} { set _args(-step) [$wizard raise] }
set step $_args(-step)

if {$step eq ""} { return }

if {![llength $_args(-widgets)]} { set _args(-widgets) [$step widgets] }

::InstallJammer::UpdateSelectedWidgets $_args(-widgets) $wizard $step

if {$_args(-buttons)} { ::InstallJammer::UpdateWizardButtons $wizard $step }

if {$_args(-update)} { set _args(-updateidletasks) 0; update }

if {$_args(-updateidletasks)} { update idletasks }
}

proc ::InstallJammer::DirIsWritable {dir} {
global conf

if {$conf(windows98)} {
if {[catch { file attributes $dir } error]} { return 0 }
return 1
}
return [file writable $dir]
}

proc ::InstallJammer::Normalize { file {style ""} } {
global conf

if {$file ne ""} {
set file [eval file join [file split $file]]

if {[string match "p*" $style]} {
set style $::tcl_platform(platform)
}

switch -glob -- $style {
"u*" {
set style forwardslash
if {[string index $file 1] == ":"} {
set file [string range $file 2 end]
}
}

"w*" {
set style backslash
if {[string index $file 1] == ":"} {
set file [string toupper $file 0]
}
}
}

switch -glob -- $style {
"f*" {
set file [string map [list \\ /] $file]
}

"b*" {
set file [string map [list / \\] $file]
}
}
}

return $file
}

proc ::InstallJammer::RelativeFile { file {relativeDir "<%InstallDir%>"} } {
if {[file pathtype $file] eq "relative"} {
set file [::InstallJammer::SubstText "$relativeDir/$file"]
}
return [::InstallJammer::Normalize $file]
}

proc ::InstallJammer::RollbackName { file } {
global info
return [file join [file dirname $file] .$info(InstallID).[file tail $file]]
}

proc ::InstallJammer::SaveForRollback {file} {
file rename -force $file [::InstallJammer::RollbackName $file]
}

proc ::InstallJammer::GetShellFolder { folder } {
set folder [string toupper $folder]
array set map {DESKTOP DESKTOPDIRECTORY MYDOCUMENTS PERSONAL}
if {[info exists map($folder)]} { set folder $map($folder) }
if {[catch {twapi::get_shell_folder csidl_[string tolower $folder]} path]} {
return [installkit::Windows::getFolder $folder]
}
return $path
}

proc ::InstallJammer::WindowsDir { dir } {
set dir [string toupper $dir]

if {$dir eq "WINDOWS"
|| [catch { ::InstallJammer::GetShellFolder $dir } windir]} {
set windir ""
}

if {$windir ne ""} { return [::InstallJammer::Normalize $windir windows] }


if {[string match "COMMON_*" $dir]} {
set chk [string range $dir 7 end]
if {[catch { ::installkit::Windows::getFolder $chk } windir]} {
set windir ""
}
if {[string length $windir]} {
return [::InstallJammer::Normalize $windir windows]
}
}

set curr {Software\Microsoft\Windows\CurrentVersion}
set key  "HKEY_LOCAL_MACHINE\\$curr"

switch -- $dir {
"MYDOCUMENTS" {
set windir [::InstallJammer::WindowsDir PERSONAL]
}

"WINDOWS" {
if {[info exists ::env(windir)]} {
set windir $::env(windir)
} elseif {[info exists ::env(SYSTEMROOT)]} {
set windir $::env(SYSTEMROOT)
} elseif {![catch {registry get $key SystemRoot} result]} {
set windir $result
} else {
set windir "C:\\Windows"
}
}

"PROGRAM_FILES" {
if {[info exists ::env(ProgramFiles)]} {
set windir $::env(ProgramFiles)
} elseif {![catch {registry get $key ProgramFilesDir} result]} {
set windir $result
} else {
set windir "C:\\Program Files"
}
}

"SYSTEM" {
set windir [file join [WindowsDir WINDOWS] system]
}

"SYSTEM32" {
set windir [file join [WindowsDir WINDOWS] system32]
}

"QUICK_LAUNCH" {
set windir [WindowsDir APPDATA]
set windir [file join $windir  "Microsoft" "Internet Explorer" "Quick Launch"]
}

"COMMON_QUICK_LAUNCH" {
set windir [WindowsDir COMMON_APPDATA]
set windir [file join $windir  "Microsoft" "Internet Explorer" "Quick Launch"]
}

"WALLPAPER" {
set windir [registry get $key WallPaperDir]
}

default {

array set regkeys {
ADMINTOOLS        {USER "Administrative Tools"}
APPDATA           {USER AppData}
CACHE             {USER Cache}
CDBURN_AREA       {USER "CD Burning"}
COOKIES           {USER Cookies}
DESKTOP           {USER Desktop}
FAVORITES         {USER Favorites}
FONTS             {USER Fonts}
HISTORY           {USER History}
INTERNET_CACHE    {USER Cache}
LOCAL_APPDATA     {USER "Local AppData"}
LOCAL_SETTINGS    {USER "Local Settings"}
MYDOCUMENTS       {USER Personal}
MYMUSIC           {USER "My Music"}
MYPICTURES        {USER "My Pictures"}
MYVIDEO           {USER "My Video"}
NETHOOD           {USER NetHood}
PERSONAL          {USER Personal}
PRINTHOOD         {USER PrintHood}
PROGRAMS          {USER Programs}
RECENT            {USER Recent}
SENDTO            {USER SendTo}
STARTMENU         {USER "Start Menu"}
STARTUP           {USER Startup}
TEMPLATES         {USER Templates}

COMMON_ADMINTOOLS {SYS "Common Administrative Tools"}
COMMON_APPDATA    {SYS "Common AppData"}
COMMON_DESKTOP    {SYS "Common Desktop"}
COMMON_DOCUMENTS  {SYS "Common Documents"}
COMMON_FAVORITES  {SYS "Common Favorites"}
COMMON_MUSIC      {SYS CommonMusic}
COMMON_PICTURES   {SYS CommonPictures}
COMMON_PROGRAMS   {SYS "Common Programs"}
COMMON_STARTMENU  {SYS "Common Start Menu"}
COMMON_STARTUP    {SYS "Common Startup"}
COMMON_TEMPLATES  {SYS "Common Templates"}
COMMON_VIDEO      {SYS CommonVideo}
}

set SYS  "HKEY_LOCAL_MACHINE\\$curr\\Explorer\\Shell Folders"
set USER "HKEY_CURRENT_USER\\$curr\\Explorer\\Shell Folders"

if {[info exists regkeys($dir)]} {
upvar 0 [lindex $regkeys($dir) 0] regkey
set val [lindex $regkeys($dir) 1]
set windir [::installkit::Windows::GetKey $regkey $val]
}

if {$windir eq ""} { return <%$dir%> }
}
}

return [::InstallJammer::Normalize $windir windows]
}

proc ::InstallJammer::SetupRegVirtualText {} {
global info

set env        {HKEY_LOCAL_MACHINE}
set user       {HKEY_CURRENT_USER}
set current    {HKEY_LOCAL_MACHINE}
append env     {\SYSTEM\CurrentControlSet\Control\Session Manager}
append current {\Software\Microsoft\Windows\CurrentVersion}

set info(REG_USER_ENV)        "$user\\Environment"
set info(REG_SYSTEM_ENV)      "$env\\Environment"
set info(REG_UNINSTALL)       "$current\\Uninstall"
set info(REG_CURRENT_VERSION) "$current"

return
}

proc ::InstallJammer::SetWindowsPlatform {} {
global conf
global info

set string Windows

if {$conf(windows)} {
switch -- $::tcl_platform(os) {
"Windows 95" { set string "Win95" }
"Windows 98" { set string "Win98" }
"Windows NT" {
switch -- $::tcl_platform(osVersion) {
"4.0" { set string "WinNT" }
"5.0" { set string "Win2k" }
"5.1" { set string "WinXP" }
"5.2" { set string "Win2003" }
"6.0" { set string "Vista" }
}
}

default {
set string "WinME"
}
}
}

set info(WindowsPlatform) $string
}

proc ::InstallJammer::SubstVar { var } {
global conf
global info

if {[info exists info($var)]} {
set string $info($var)
if {[lsearch -exact $conf(SubstDirVars) $var] > -1} {
set platform $::tcl_platform(platform)
set string [::InstallJammer::Normalize $string $platform]
}
return $string
}

if {[::msgcat::mcexists $var]} { return [::msgcat::mc $var] }

if {![info exists ::InstallJammer::subst]} {
foreach proc [info commands ::InstallJammer::subst::*] {
set ::InstallJammer::subst([namespace tail $proc]) $proc
}
}

set idx  [string wordend $var 0]
set word [string range $var 0 [expr {$idx - 1}]]
set args [string trim [string range $var $idx end]]

if {[info exists ::InstallJammer::subst($word)]} {
return [eval ::InstallJammer::subst::$word $args]
}

if {$var ne "" && $var eq [string toupper $var]} {
return [::InstallJammer::WindowsDir $var]
}

return "<%$var%>"
}

proc ::InstallJammer::subst::Date { args } {
set secs [lindex $args 0]
if {[string is integer -strict $secs]} {
set format [join [lrange $args 1 end]]
} else {
set secs   [clock seconds]
set format [join $args]
}

return [clock format $secs -format $format]
}

proc ::InstallJammer::subst::Dir { args } {
set dir      [lindex $args 0]
set platform [lindex $args 1]
if {$platform eq ""} { set platform $::tcl_platform(platform) }
return [::InstallJammer::Normalize $dir $platform]
}

proc ::InstallJammer::subst::Dirname { args } {
return [file dirname [join $args]]
}

proc ::InstallJammer::subst::DiskSpace { args } {
return [::InstallJammer::FormatDiskSpace [join $args]]
}

proc ::InstallJammer::subst::DOSName { args } {
global conf

set file [join $args]

if {$conf(windows) && [file exists $file]} {
set file [file attributes $file -shortname]
set file [::InstallJammer::Normalize $file windows]
}

return $file
}

proc ::InstallJammer::subst::Env { args } {
set var [lindex $args 0]
if {[info exists ::env($var)]} { return $::env($var) }
}

proc ::InstallJammer::subst::FileGroup { args } {
set group [join $args]
set obj [::InstallJammer::FindObjByName $group [FileGroups children]]
if {$obj ne ""} {
set str [$obj directory]
set str [::InstallJammer::Normalize $str $::tcl_platform(platform)]
return $str
}
}

proc ::InstallJammer::subst::FormatDescription { args } {
set lines  [join $args]
set string ""
foreach line [split [string trim $lines] \n] {
if {[string trim $line] eq ""} { set line "." }
append string " $line\n"
}
return $string
}

proc ::InstallJammer::subst::GUID { args } {
global info
set info(LastGUID) [::InstallJammer::guid]
return $info(LastGUID)
}

proc ::InstallJammer::subst::InstallInfoDir { args } {
return [::InstallJammer::InstallInfoDir]
}

proc ::InstallJammer::subst::Property { args } {
set property [lindex $args end]
if {[llength $args] == 1} {
set object [::InstallJammer::CurrentObject]
} else {
set object [::InstallJammer::ID [lindex $args 0]]
}

return [$object get $property]
}

proc ::InstallJammer::subst::RegValue { args } {
set key  [lindex $args 0]
set val  [lindex $args 1]
return [::installkit::Windows::GetKey $key $val]
}

proc ::InstallJammer::subst::SpaceAvailable { args } {
global info
set dir [join $args]
if {$dir eq ""} { set dir $info(InstallDir) }
return [::InstallJammer::GetFreeDiskSpace $dir]
}

proc ::InstallJammer::subst::Tail { args } {
return [file tail [join $args]]
}

proc ::InstallJammer::subst::Temp { args } {
return [::InstallJammer::TmpDir]
}

proc ::InstallJammer::subst::UUID { args } {
global info
set info(LastUUID) [::InstallJammer::uuid]
return $info(LastUUID)
}

proc ::InstallJammer::SubstForEval { string } {
set map [list "<%" "\[::InstallJammer::SubstText \{<%" "%>" "%>\}\]"]
return [string map $map $string]
}

proc ::InstallJammer::SubstForPipe { string } {
set list [list]
foreach arg $string {
lappend list [::InstallJammer::SubstText $arg]
}
return $list
}

proc ::InstallJammer::SubstText { str {num 0} } {
global conf

if {$num > $conf(VirtualTextRecursionLimit)} { return $str }

if {$str eq ""} { return }

set s $str
set s [string map $conf(VirtualTextMap) $s]
set s [subst -novariables $s]
if {$str ne $s} { set s [::InstallJammer::SubstText $s [incr num]] }

return $s
}

proc ::InstallJammer::HasVirtualText { string } {
return [string match "*<%*%>*" $string]
}

proc ::InstallJammer::TmpDir { {file ""} } {
global conf
global info

if {![info exists info(TempRoot)] || ![file exists $info(TempRoot)]} {
set dirs [list]
if {[info exists ::env(TEMP)]} { lappend dirs $::env(TEMP) }
if {[info exists ::env(TMP)]}  { lappend dirs $::env(TMP)  }
if {$conf(windows)} {
set local [::InstallJammer::WindowsDir LOCAL_APPDATA]
lappend dirs [file join [file dirname $local] Temp]

lappend dirs [::InstallJammer::WindowsDir INTERNET_CACHE]

lappend dirs C:/Windows/Temp
lappend dirs C:/WINNT/Temp
lappend dirs C:/Temp

} else {
lappend dirs /usr/tmp /tmp /var/tmp
}

foreach dir $dirs {
if {[DirIsWritable $dir]} {
if {[info exists ::InstallJammer]} {
if {$file ne ""} { set dir [file join $dir $file] }
return $dir
}
set info(TempRoot) [::InstallJammer::Normalize $dir forward]
break
}
}
}

if {![info exists info(Temp)] || ![file exists $info(Temp)]} {
set subdir ijtmp_[::InstallJammer::uuid]
set info(Temp) [::InstallJammer::Normalize  [file join $info(TempRoot) $subdir]]
file mkdir $info(Temp)
}

if {$file ne ""} {
return [::InstallJammer::Normalize [file join $info(Temp) $file]]
}

return $info(Temp)
}

proc ::InstallJammer::TmpMount {} {
variable tmpMountCount

if {![info exists tmpMountCount]} { set tmpMountCount 0 }

while {1} {
set mnt /installjammervfs[incr tmpMountCount]
if {![file exists $mnt]} { break }
}

return $mnt
}

proc ::InstallJammer::ModifyInstallDir {} {
global conf
global info

set dir [::InstallJammer::SubstText $info(InstallDir)]

if {[info exists info(InstallDirSuffix)]} {
set suffix [::InstallJammer::SubstText $info(InstallDirSuffix)]
if {[file tail $dir] ne $suffix} { set dir [file join $dir $suffix] }
}

set info(InstallDir) [::InstallJammer::Normalize $dir platform]

if {$conf(windows)} {
set info(InstallDrive) [string range $info(InstallDir) 0 1]
}
}

proc ::InstallJammer::ModifyInstallTitle {} {
if {[info exists ::tk_patchLevel]} {
set title [::InstallJammer::SubstText "<%InstallTitleText%>"]
wm title . $title
if {[info exists ::info(Wizard)] && [winfo exists $::info(Wizard)]} {
$::info(Wizard) configure -title $title
}
}
}

proc ::InstallJammer::GetInstallInfoDir { {create 0} } {
global conf
global info

if {![info exists info(InstallInfoDir)]} {
if {$conf(windows)} {
set root [::InstallJammer::WindowsDir PROGRAM_FILES]
if {![::InstallJammer::DirIsWritable $root]} {
set root [::InstallJammer::WindowsDir APPDATA]
}

set dir  [file join $root "InstallJammer Registry"]
} else {
if {[id user] eq "root"} {
set dir "/var/lib/installjammer"
} else {
set dir "[::InstallJammer::HomeDir]/.installjammerinfo"
}
}

set info(InstallJammerRegistryDir) [::InstallJammer::Normalize $dir]

set id $info(ApplicationID)
if {[info exists info(UpgradeInstall)] && $info(UpgradeInstall)} {
set id $info(UpgradeApplicationID)
}

set dir [file join $dir $id]

set info(InstallInfoDir) [::InstallJammer::Normalize $dir]
}

if {$create && ![file exists $info(InstallInfoDir)]} {
::InstallJammer::CreateDir $info(InstallInfoDir) 0
if {$conf(windows)} {
file attributes [file dirname $info(InstallInfoDir)] -hidden 1
}
}

if {[info exists ::InstallJammer]} {
set infodir $info(InstallInfoDir)
unset info(InstallInfoDir) info(InstallJammerRegistryDir)
return $infodir
} else {
return $info(InstallInfoDir)
}
}

proc ::InstallJammer::InstallInfoDir { {file ""} } {
set dir [::InstallJammer::GetInstallInfoDir 1]
if {[string length $file]} { append dir /$file }
return $dir
}

proc ::InstallJammer::SetPermissions { file perm } {
if {$perm eq ""} { return }

if {$::tcl_platform(platform) eq "windows"} {
if {[string length $perm] > 4} { return }
lassign [split $perm ""] a h r s
file attributes $file -archive $a -hidden $h -readonly $r -system $s
} else {
file attributes $file -permissions $perm
}
}

proc ::InstallJammer::WriteDoneFile { {dir ""} } {
if {$dir eq ""} { set dir [::InstallJammer::TmpDir] }
close [open [file join $dir .done] w]
}

proc ::InstallJammer::CleanupTmpDirs {} {
global info

if {[string is true -strict $info(Debugging)]} { return }

set tmp  [file dirname [TmpDir]]
set time [expr {[clock seconds] - 86400}]
foreach dir [glob -nocomplain -type d -dir $tmp ijtmp_*] {
if {[DirIsEmpty $dir]
|| [file exists [file join $dir .done]]
|| [file mtime $dir] < $time} {
catch { file delete -force $dir }
}
}
}

proc ::InstallJammer::EvalCondition { condition } {
if {[string is true  $condition]} { return 1 }
if {[string is false $condition]} { return 0 }

set test [::InstallJammer::SubstForEval $condition]

if {![string length $test]} { return 1 }
if {[catch {expr [subst $test]} result]} {
set msg "Error in condition '$condition': $result"
if {[debugging state]} {
set msg "Error in condition '$condition'\n\n$::errorInfo"
}
return -code error $msg
}
return $result
}

proc ::InstallJammer::HomeDir { {file ""} } {
set return [file normalize ~]
if {$file ne ""} { set return [file join $return $file] }
return $return
}

proc ::InstallJammer::PauseInstall {} {
global conf
if {[info exists conf(pause)]} { close [open $conf(pause) w] }
}

proc ::InstallJammer::ContinueInstall {} {
global conf
if {[info exists conf(pause)]} { file delete $conf(pause) }
}

proc ::InstallJammer::StopInstall {} {
global conf
global info
if {[info exists conf(stop)]} {
close [open $conf(stop) w]
set info(InstallStopped) 1
}
}

proc ::InstallJammer::PauseCheck {} {
global conf
global info

if {$info(InstallStopped)} { return 0 }

while {[file exists $conf(pause)]} {
if {[file exists $conf(stop)]} {
set info(InstallStopped) 1
return 0
}
after 500
}

return 1
}

proc ::InstallJammer::UninstallFile {file} {
file delete -force $file
}

proc ::InstallJammer::UninstallDirectory { dir {force ""} } {
file delete $force $dir
}

proc ::InstallJammer::UninstallRegistryKey {key {value ""}} {
if {![lempty $value]} {
catch { registry delete $key $value }
if {[catch { registry keys $key } keys]} { return }
if {[catch { registry values $key } values]} { return }
if {[lempty $keys] && [lempty $values]} {
UninstallRegistryKey $key
}
} else {
catch { registry delete $key }
}
}

proc ::InstallJammer::LogDir { dir } {
global conf
global info

if {!$conf(logInit)} {
set conf(logInit) 1
::InstallJammer::TmpDir
::InstallJammer::GetInstallInfoDir
}

set dir [::InstallJammer::Normalize $dir forward]
if {![string match $info(InstallInfoDir)* $dir]
&& ![string match $info(Temp)* $dir]} {
::InstallJammer::InstallLog [list :DIR $dir]
}
}

proc ::InstallJammer::LogFile { file } {
global conf
global info

if {!$conf(logInit)} {
set conf(logInit) 1
::InstallJammer::TmpDir
::InstallJammer::GetInstallInfoDir
}

set file [::InstallJammer::Normalize $file forward]
if {![string match $info(InstallInfoDir)* $file]
&& ![string match $info(Temp)* $file]} {
::InstallJammer::InstallLog [list :FILE $file]
}
}

proc ::InstallJammer::SetVersionInfo { file {version ""} } {
global info
global versions
if {$version eq ""} { set version $info(InstallVersion) }
set versions($file) $version
}

proc ::InstallJammer::StoreLogsInUninstall {} {
global conf
global info

if {[info exists conf(uninstall)]} {
set tmp [::InstallJammer::TmpDir]

foreach file [glob -nocomplain -dir $tmp *.info] {
lappend files $file
lappend names [file tail $file]

set file [file root $file].log

if {[file exists $file]} {
lappend files $file
lappend names [file tail $file]
}
}

foreach file [glob -nocomplain -dir $tmp *.dead] {
lappend files $file
lappend names [file tail $file]
}

installkit::addfiles $conf(uninstall) $files $names
}
}

proc ::InstallJammer::SetDialogArgs {which arrayName} {
global conf
upvar 1 $arrayName _args

set parent [::InstallJammer::TransientParent]

set _args(-parent)        $parent
set _args(-transient)     [expr {$parent ne ""}]
set _args(-usenative)     $conf(Native$which)
set _args(-placerelative) [expr {$parent ne "" && $parent ne "."}]
}

proc ::InstallJammer::MessageBox { args } {
global conf
global widg

set win  .__message_box

array set _args {
-type        "ok"
-buttonwidth 12
}
::InstallJammer::SetDialogArgs MessageBox _args

if {[info exists ::InstallJammer]} {
set _args(-title) "InstallJammer"
} else {
set _args(-title) [::InstallJammer::SubstText "<%AppName%>"]
}

array set _args $args
if {$_args(-title) eq ""} { set _args(-title) " " }

set type $_args(-type)
if {!$_args(-usenative) && $type ne "user"} {
set idx 0

set cancel     -1
set default    -1
set buttonlist {Retry OK Yes No Cancel}
switch -- $type {
"abortretryignore" {
set default 0
set buttonlist {Abort Retry Ignore}
}

"ok"          { set default 0 }
"okcancel"    { set default 0; set cancel 1 }
"retrycancel" { set default 0; set cancel 1 }
"yesno"       { set default 0; set cancel 1 }
"yesnocancel" { set default 0; set cancel 2 }
}

if {![info exists _args(-cancel)]} { set _args(-cancel) $cancel }
if {![info exists _args(-default)]} { set _args(-default) $default }

foreach button $buttonlist {
set lbutton [string tolower $button]
if {[string first $lbutton $type] > -1} {
lappend buttons $lbutton
lappend _args(-buttons) [::InstallJammer::SubstText <%$button%>]

if {[info exists _args(-default)]
&& $_args(-default) eq $lbutton} {
set _args(-default) $idx
}

incr idx
}
}

if {[llength $buttons] == 1} { set _args(-default) 0 }

set _args(-type) user
}

set result [eval [list MessageDlg $win] [array get _args]]

if {!$_args(-usenative) && $type ne "user"} {
return [lindex $buttons $result]
}
return $result
}

proc ::InstallJammer::Message { args } {
set gui [info exists ::tk_patchLevel]

if {[info exists ::InstallJammer]
&& $::tcl_platform(platform) eq "windows"
&& [file extension [info nameof]] eq ".com"} { set gui 0 }

if {$gui} {
if {[catch { eval ::InstallJammer::MessageBox $args } error]} {
if {[info exists ::conf(unix)] && $::conf(unix)} {
catch {rename ::tk_messageBox ""}
}
eval tk_messageBox -title "InstallJammer" $args
}
} else {
set _args(-icon) "info"
array set _args $args
if {![info exists _args(-message)]} { return }

set chan stdout
if {$_args(-icon) eq "error"} { set chan stderr }

if {[info exists _args(-title)]} {
puts $chan "$_args(-title): $_args(-message)"
} else {
puts $chan "$_args(-message)"
}

flush $chan
}
}

proc ::InstallJammer::HandleThreadError { tid errorMsg } {
set message "Error in thread $tid: $errorMsg"
::InstallJammer::MessageBox -message $message
}

proc ::InstallJammer::ChooseDirectory { args } {
global conf

::InstallJammer::SetDialogArgs ChooseDirectory _args

set _args(-title)  [::InstallJammer::SubstText "<%PromptForDirectoryTitle%>"]
set _args(-message)  [::InstallJammer::SubstText "<%PromptForDirectoryMessage%>"]
set _args(-newfoldertext)  [::InstallJammer::SubstText "<%PromptForDirectoryNewFolderText%>"]
set _args(-oktext)     [::InstallJammer::SubstText "<%OK%>"]
set _args(-canceltext) [::InstallJammer::SubstText "<%Cancel%>"]
array set _args $args

if {[info exists _args(-variable)]} {
upvar 1 $_args(-variable) dir
unset _args(-variable)

if {![info exists _args(-initialdir)] && [info exists dir]} {
set _args(-initialdir) $dir
}
}

if {$_args(-usenative)} {
set res [eval ij_chooseDirectory [array get _args]]
} else {
unset -nocomplain _args(-usenative)
if {[llength $conf(ParentWindow)] > 1} {
wm withdraw [lindex $conf(ParentWindow) end]
}

set res [eval ::ChooseDirectory .__choose_directory [array get _args]]

if {[llength $conf(ParentWindow)] > 1} {
wm deiconify [lindex $conf(ParentWindow) end]
}
}

if {$res ne ""} {
set dir $res
return $dir
}
}

proc ::InstallJammer::ChooseFile { args } {
global conf

::InstallJammer::SetDialogArgs ChooseFile _args
array set _args $args

if {[info exists _args(-variable)]} {
upvar 1 $_args(-variable) file
unset _args(-variable)
}

if {$_args(-usenative)} {
set type Open
if {[info exists _args(-type)]} {
set type [string toupper $_args(-type) 0]
}
set res [eval [list ij_get${type}File] [array get _args]]
} else {
unset -nocomplain _args(-usenative)
if {[llength $conf(ParentWindow)] > 1} {
wm withdraw [lindex $conf(ParentWindow) end]
}

set res [eval ::ChooseFile .__choose_file [array get _args]]

if {[llength $conf(ParentWindow)] > 1} {
wm deiconify [lindex $conf(ParentWindow) end]
}
}

if {$res ne ""} {
set file $res
return $file
}
}

proc ::InstallJammer::CommandExists { proc } {
return [string length [info commands $proc]]
}

proc ::InstallJammer::uuid {} {
global conf

if {$conf(windows)} {
return [string range [::InstallJammer::guid] 1 end-1]
}

set sha [sha1 -string [info hostname][clock seconds][pid][info cmdcount]]

set i 0
foreach x {8 4 4 4 12} {
lappend list [string range $sha $i [expr {$i + $x - 1}]]
incr i $x
}

return [string toupper [join $list -]]
}

proc ::InstallJammer::guid {} {
global conf
if {$conf(windows)} {
return [string toupper [::installkit::Windows::guid]]
}
return \{[string toupper [::InstallJammer::uuid]]\}
}

proc ::InstallJammer::IsID { id } {
if {[string length $id] != 36} { return 0 }
set list [split $id -]
if {[llength $list] != 5} { return 0 }
set i 0
foreach n {8 4 4 4 12} {
if {[string length [lindex $list $i]] != $n} { return 0 }
incr i
}
return 1
}

proc ::InstallJammer::ObjExists { obj } {
return [info exists ::InstallJammer::ObjMap([namespace tail $obj])]
}

proc ::InstallJammer::ReadMessageCatalog { catalog } {
set catalog [file join $::installkit::root catalogs $catalog]
eval [read_file $catalog -encoding utf-8]
}

proc ::InstallJammer::Wrap { args } {
global conf
global info

set include 1
if {[set x [lsearch -exact $args -noinstall]] > -1} {
set include 0
set args [lreplace $args $x $x]
}

if {$include} {
set pkgdir [file join $::installkit::root lib InstallJammer]
set args [linsert $args 0 -package $pkgdir]
}

eval ::installkit::wrap $args
}

proc ::InstallJammer::Grab { command args } {
variable GrabStack

if {![info exists GrabStack]} { set GrabStack [list] }

switch -- $command {
"current" {
return [lindex $GrabStack end]
}

"stack" {
return $GrabStack
}

"release" {
set window [lindex $args 0]
set search [lsearch -exact $GrabStack $window]
if {$search < 0} { return }
if {$search != [expr {[llength $GrabStack] - 1}]} {
return -code error "$window is not last in the grab stack."
}
grab release $window
set GrabStack [lreplace $GrabStack end end]
if {[llength $GrabStack]} { grab [lindex $GrabStack end] }
}

"set" {
set window [lindex $args 0]
grab $window
lappend GrabStack $window
}

default {
grab $command
lappend GrabStack $command
}
}

return
}

proc ::InstallJammer::HasKDEDesktop {} {
global info

set home [::InstallJammer::HomeDir]
set kde  [file join $home .kde]

if {![file exists $kde]} { return 0 }

if {![info exists info(KDEDesktop)] || [lempty $info(KDEDesktop)]} {
set globals [file join $kde share config kdeglobals]
set desktop [file join $home Desktop]
if {[catch {open $globals} fp]} { return 0 }
while {[gets $fp line] != -1} {
if {[regexp {^Desktop=([^\n].*)\n} $line\n trash desktop]} {
regsub -all {\$([A-Za-z0-9]+)} $desktop {$::env(\1)} desktop
break
}
}
close $fp
set info(KDEDesktop) $desktop
}

return [file exists $info(KDEDesktop)]
}

proc ::InstallJammer::HasGnomeDesktop {} {
global info

set home [::InstallJammer::HomeDir]

foreach dir [list .gnome-desktop Desktop] {
set desktop [file join $home $dir]
if {[file exists $desktop]} {
set info(GnomeDesktop) $desktop
break
}
}

if {[info exists info(GnomeDesktop)] && [file exists $info(GnomeDesktop)]} {
return 1
}
return 0
}

proc ::InstallJammer::GetDesktopEnvironment {} {
global env

if {[info exists env(DESKTOP)] && $env(DESKTOP) eq "kde"} { return KDE }
if {[info exists env(KDE_FULL_SESSION)]} { return KDE }

if {[info exists env(GNOME_DESKTOP_SESSION_ID)]} { return Gnome }

if {[info exists env(DESKTOP_SESSION)]} {
switch -glob -- $env(DESKTOP_SESSION) {
"*KDE*"   { return KDE }
"*GNOME*" { return Gnome }
}
}

return "Unknown"
}

proc ::InstallJammer::GetLinuxDistribution {} {
set lsb_release [auto_execok lsb_release]
if {[file executable $lsb_release]} {
if {![catch { exec $lsb_release -i -s } distrib]} { return $distrib }
}

foreach lsb_release [list /etc/lsb-release /etc/lsb_release] {
if {[file readable $lsb_release]} {

}
}

set check {
/etc/mandrake-release    Mandrake
/etc/fedora-release      Fedora
/etc/SuSE-release        SuSE
/etc/debian_version      Debian
/etc/gentoo-release      Gentoo
/etc/slackware-version   Slackware
/etc/turbolinux-release  TurboLinux
/etc/yellowdog-release   YellowDog
/etc/connectiva-release  Connectiva
/etc/redhat-release      Redhat
}
}

proc ::InstallJammer::GetFreeDiskSpace { dir } {
global conf

if {$conf(windows)} {
set drive [lindex [file split $dir] 0]
return [::installkit::Windows::drive freespace $drive]
}

set df [auto_execok df]
if {[file exists $df]} {
while {![file exists $dir]} {
set dir [file dirname $dir]
}
catch { exec $df -k $dir } output

set line [join [lrange [split $output \n] 1 end] " "]
if {![catch { expr {[lindex $line 3] * wide(1024)} } avail]} {
return $avail
}
}

return -1
}

proc ::InstallJammer::FormatDiskSpace { space } {
if {$space < 1048576} {
return [format "%2.2f KB" [expr {$space / 1024.0}]]
}
if {$space < 1073741824} {
return [format "%2.2f MB" [expr {$space / 1048576.0}]]
}
return [format "%2.2f GB" [expr {$space / 1073741824.0}]]
}

proc ::InstallJammer::unpack { src dest {permissions ""} } {
if {![string length $permissions]} { set permissions "0666" }

set fin [open $src r]
if {[catch {open $dest w $permissions} fout]} {
close $fin
return -code error $fout
}

set intrans  binary
set outtrans binary
if {[info exists ::conf(eol,[file extension $dest])]} {
set trans $::conf(eol,[file extension $dest])
if {[llength $trans] == 2} {
set intrans  [lindex $trans 0]
set outtrans [lindex $trans 1]
} else {
set outtrans [lindex $trans 0]
}
}

fconfigure $fin  -translation $intrans
fconfigure $fout -translation $outtrans

fcopy $fin $fout

close $fin
close $fout
}

proc ::InstallJammer::ExecAsRoot { command args } {
global conf
global info

array set _args {
-title   ""
-message "Please enter your root password."
-failmessage ""
}
array set _args $args

set wait 0
if {[info exists _args(-wait)]} { set wait $_args(-wait) }

set cmd   [list]
set msg   $_args(-message)
set title $_args(-title)

set i 0
set x [llength $command]
foreach arg $command {
if {[string first " " $arg] > -1} {
append cmdline '$arg'
} else {
append cmdline $arg
}
if {[incr i] < $x} { append cmdline " " }
}

if {$info(GuiMode)} {
set desktop [::InstallJammer::GetDesktopEnvironment]

if {$desktop eq "KDE"} {
if {[string length [auto_execok kdesu]]} {
set cmd [list kdesu -d -c $cmdline]
}
} elseif {$desktop eq "Gnome"} {
if {[string length [auto_execok gksu]]} {
set cmd [list gksu $cmdline]
} elseif {[string length [auto_execok gnomesu]]} {
set cmd [list gnomesu $cmdline]
}

if {[llength $cmd] && [string length $title]} {
set cmd [linsert $cmd 1 --title $title]
}
}

if {![llength $cmd]} {
if {[string length [auto_execok kdesu]]} {
set cmd [list kdesu -d -c $cmdline]
} elseif {[string length [auto_execok gksu]]} {
set cmd [list gksu $cmdline]
if {[string length $title]} {
set cmd [linsert $cmd 1 --title $title]
}
} elseif {[string length [auto_execok gnomesu]]} {
set cmd [list gnomesu $cmdline]
if {[string length $title]} {
set cmd [linsert $cmd 1 --title $title]
}
} elseif {[string length [auto_execok xsu]]} {
set cmd [list xsu $cmdline]
if {[string length $title]} {
set cmd [linsert $cmd 1 --title $title]
}
} elseif {!$info(HaveTerminal)} {
set cmd [list xterm -e "echo '$msg' && su -c \"$cmdline\""]

if {$title eq ""} { set title "xterm" }
set cmd [linsert $cmd 1 -T $title]
}
}
}

if {![llength $cmd]} {

puts  stdout "$msg\n"
flush stdout

if {[info exists _args(-wait)] && !$wait} { append cmdline " &" }

set res [system su -c \"$cmdline\"]

if {$res && $_args(-failmessage) ne ""} {
echo $_args(-failmessage) 1
}
} else {
if {!$wait} { lappend cmd & }

catch { eval exec $cmd }
}
}

proc ::InstallJammer::GetFilesForPattern { patternString args } {
set relative    1
set patterns    [list]
set installdir  [::InstallJammer::SubstText <%InstallDir%>]
set patternlist [split [::InstallJammer::SubstText $patternString] \;]

foreach pattern $patternlist {
set pattern [string trim [::InstallJammer::SubstText $pattern]]
if {$pattern eq ""} { continue }

if {[file pathtype $pattern] ne "relative"} {
set relative 0
set pattern [::InstallJammer::Normalize $pattern]
}

lappend patterns $pattern
}

if {![llength $patterns]} { return }

if {$relative} {
set opts $args
lappend opts -dir $installdir

set files [eval glob -nocomplain $opts $patterns]
} else {
set files [list]
foreach pattern $patterns {
set opts $args
if {[file pathtype $pattern] eq "relative"} {
lappend opts -dir $installdir
}
eval lappend files [eval glob -nocomplain $opts [list $pattern]]
}
}

return $files
}

proc ::InstallJammer::StartProgress { varName total {current 0} } {
global conf
set conf(ProgressCurr)    0
set conf(ProgressLast)    0
set conf(ProgressTotal)   $total
set conf(ProgressVarName) $varName
}

proc ::InstallJammer::ResetProgress {} {
global conf
set conf(ProgressLast) 0
}

proc ::InstallJammer::UpdateProgress { args } {
set total   $::conf(ProgressTotal)
set varName $::conf(ProgressVarName)
set current [lindex $args end]

set bytes [expr {$current - $::conf(ProgressLast)}]
set ::conf(ProgressLast) $current

incr ::conf(ProgressCurr) $bytes

if {$varName ne ""} {
set $varName [expr {round( ($::conf(ProgressCurr) * 100.0) / $total )}]
}
}

proc ::InstallJammer::ReadProperties { data arrayName } {
upvar 1 $arrayName array

foreach line [split [string trim $data] \n] {
set line [string trim $line]
if {[set x [string first : $line]] >= 0} {
set var [string trim [string range $line 0 [expr {$x-1}]]]
set val [string trim [string range $line [expr {$x+1}] end]]
set array($var) $val
}
}
}

proc ::InstallJammer::ReadPropertyFile { file arrayName } {
upvar 1 $arrayName array
set fp [open $file]
::InstallJammer::ReadProperties [read $fp] array
close $fp
}

proc ::InstallJammer::ShowUsageAndExit { {message ""} } {
global conf
global info

variable ::InstallJammer::CommandLineOptions

::InstallJammer::InitializeCommandLineOptions

set head --
if {$conf(windows)} { set head / }

set usage ""

if {$message ne ""} { append usage "$message\n\n" }
append usage "Usage: [file tail [info nameofexecutable]] ?options ...?"
append usage "\n\nAvailable Options:"

set len 0
foreach option [array names CommandLineOptions] {
if {$option eq "PREFIX"} { continue }

lassign $CommandLineOptions($option) name var type x hide values desc

if {$type eq "Boolean"} {
set desc "$name Yes|No"
} elseif {$type eq "Prefix"} {
set desc "$name<OPTION> <VALUE>"
} elseif {$type eq "Switch"} {
set desc $name
} else {
set var  [string toupper [string trimleft $option -/]]
set desc "$name $var"
}

set options($option) $desc

if {[string length $desc] > $len} {
set len [string length $desc]
}
}

incr len 2

foreach option [lsort -dict [array names options]] {
lassign $CommandLineOptions($option) name var type x hide values desc

if {$hide} { continue }

set desc   [::InstallJammer::SubstText $desc]
set values [::InstallJammer::SubstText $values]

set line "  [format %-${len}s $head$options($option)] $desc"

append usage "\n[::InstallJammer::WrapText $line 0 [expr {$len + 3}]]"

if {$type eq "Choice"} {
set values  [lsort -dict $values]
set last    [lindex $values end]
set values  [lrange $values 0 end-1]
set choices [string tolower "[join $values ", "] or $last"]

set line "    Available values: $choices"
append usage "\n[::InstallJammer::WrapLine $line 0 22]"
}
}

append usage \n

if {$conf(windows) || !$info(HaveTerminal)} {
SourceCachedFile gui.tcl
InitGui

::InstallJammer::MessageBox -icon error -font "Courier 8"  -title "In-valid Arguments" -message $usage
} else {
puts $usage
}

::exit [expr {$message eq "" ? 0 : 1}]
}

proc ::InstallJammer::ParseCommandLineArguments { argv } {
global conf
global info

variable ::InstallJammer::CommandLineOptions
variable ::InstallJammer::PassedCommandLineOptions
variable ::InstallJammer::VirtualTextSetByCommandLine

::InstallJammer::ExecuteActions "Command Line Actions"

::InstallJammer::InitializeCommandLineOptions

set len [llength $argv]
for {set i 0} {$i < $len} {incr i} {
set arg [lindex $argv $i]
set opt [string tolower [string trimleft $arg -/]]

if {$i == 0 && [file normalize $arg] eq [file normalize [info name]]} {
continue
}

if {$opt eq "help" || $opt eq "?"} {
::InstallJammer::ShowUsageAndExit
}

if {$opt eq "v" || $opt eq "version"} {
set    message "InstallJammer Installer version $conf(version)\n\n"
append message [::InstallJammer::SubstText "<%VersionHelpText%>"]

if {$conf(windows)} {
SourceCachedFile gui.tcl
InitGui
::InstallJammer::MessageBox -default ok  -title "InstallJammer Installer" -message $message
} else {
set version "<%Version%> (<%InstallVersion%>)\n"
puts [::InstallJammer::SubstText $version]
puts $message
}

::exit 0
}

if {![info exists CommandLineOptions($opt)]} {
set found 0

if {[info exists CommandLineOptions(PREFIX)]} {
foreach prefix $CommandLineOptions(PREFIX) {
if {[string match -nocase $prefix* $opt]} {
set found 1

set opt       [string trimleft $arg -/]
set xlen      [string length $prefix]
set prefixopt [string range $opt $xlen end]

set opt $prefix
break
}
}
}

if {!$found} {
::InstallJammer::ShowUsageAndExit "invalid option '$arg'"
return
}
}

lassign $CommandLineOptions($opt) name var type debug hide value desc
set choices [::InstallJammer::SubstText $value]

if {$type eq "Switch"} {
if {$value eq ""} {
set val 1
} else {
set val $value
}
} else {
if {[incr i] == $len} {
::InstallJammer::ShowUsageAndExit  "no argument given for option '$arg'"
}

set val [lindex $argv $i]

if {$type eq "Choice"} {
set val  [string tolower $val]
set vals [string tolower $choices]
if {[set x [lsearch -exact $vals $val]] < 0} {
::InstallJammer::ShowUsageAndExit  "invalid value given for option '$arg'"
}

set val [lindex $choices $x]
} elseif {$type eq "Boolean"} {
if {![string is boolean -strict $val]} {
::InstallJammer::ShowUsageAndExit  "invalid value given for option '$arg'"
}

if {$value ne ""} {
if {[string is true $val]} {
set val [lindex $value 0]
} else {
set val [lindex $value 1]
}
}
} elseif {$type eq "Prefix"} {
if {![info exists prefixopt]}  {
::InstallJammer::ShowUsageAndExit  "no option specified for '$arg'"
}

set suffix $prefixopt

if {$value ne ""} {
set opt     [string tolower $prefixopt]
set choices [string tolower $choices]
if {[set x [lsearch -exact $choices $opt]] < 0} {
::InstallJammer::ShowUsageAndExit  "invalid option '$prefixopt'"
}

set suffix [lindex $value $x]
}

append var $suffix
}
}

set info($var) $val
set PassedCommandLineOptions($opt) $val
set VirtualTextSetByCommandLine($var) $val
}

if {[lsearch -exact $conf(modes) $info($conf(mode))] < 0} {
debug "Bad $conf(mode) \"$info($conf(mode))\": using Standard mode"
set info($conf(mode)) [lindex $conf(modes) 0]
}

set mode $info($conf(mode))
set info(GuiMode)     [expr {$mode eq "Default" || $mode eq "Standard"}]
set info(SilentMode)  [string equal $mode "Silent"]
set info(DefaultMode) [string equal $mode "Default"]
set info(ConsoleMode) [string equal $mode "Console"]

::InstallJammer::ExecuteActions "Setup Actions"

if {$info(ShowConsole)} {
SourceCachedFile gui.tcl
InitGui

if {!$conf(windows)} { SourceCachedFile console.tcl }
console show
}

if {!$info(GuiMode) && !$conf(windows)} {
if {![catch { exec stty size } result]
&& [scan $result "%d %d" height width] == 2} {
set conf(ConsoleWidth)  $width
set conf(ConsoleHeight) $height
}
}
}

proc ::InstallJammer::CommonExit {} {
global conf

catch {
if {$conf(windows) && $conf(UpdateWindowsRegistry)} {
registry broadcast Environment -timeout 1
}

if {[info exists conf(RestartGnomePanel)]} {
set pid [::InstallAPI::FindProcesses -name gnome-panel]
if {$pid ne ""} {
catch { exec kill -HUP $pid }
}
}

::InstallJammer::WriteDoneFile

::InstallJammer::CleanupTmpDirs

if {[info exists ::debugfp]} {
catch { close $::debugfp }
}
}
}

proc ::InstallJammer::WrapText { string {width 0} {start 0} } {
global conf

if {$width == 0} { set width $conf(ConsoleWidth) }

set splitstring {}
foreach line [split $string "\n"] {
lappend splitstring [::InstallJammer::WrapLine $line $width $start]
}
return [join $splitstring "\n"]
}

proc ::InstallJammer::WrapLine { line {width 0} {start 0} } {
global conf

if {$width == 0} { set width $conf(ConsoleWidth) }

set slen  0
set words [split $line " "]
set line  [lindex $words 0]
set lines [list]
foreach word [lrange $words 1 end] {
if {[string length $line] + [string length " $word"] > $width} {
lappend lines $line

set slen $start
set line [string repeat " " $slen]$word
} else {
append line " $word"
}
}

if {$line ne ""} { lappend lines $line }

return [join $lines "\n"]
}

proc ::InstallJammer::DisplayConditionFailure { id } {
set string [::InstallJammer::SubstText [$id get FailureMessage]]
set list   [split $string |]

set icon    ""
set title   ""
set message [string trim $string]

if {[llength $list] == 2} {
set title   [string trim [lindex $list 0]]
set message [string trim [lindex $list 1]]
} elseif {[llength $list] >= 3} {
set icon    [string trim [lindex $list 0]]
set title   [string trim [lindex $list 1]]
set message [string trim [join [lrange $list 2 end] |]]
}

if {$icon eq ""} { set icon "error" }
if {$title eq ""} { set title "Install Error" }

if {$message ne ""} {
::InstallJammer::Message -icon $icon -title $title -message $message
}

if {[::InstallJammer::InGuiMode]} {
set focus [::InstallJammer::GetWidget [$id get FailureFocus]]
if {[winfo exists $focus]} { focus -force $focus }
}
}

proc ::InstallJammer::GetAllTreeNodes { tree {parent "root"} } {
set nodes {}
foreach node [$tree nodes $parent] {
lappend nodes $node
eval lappend nodes [::InstallJammer::GetAllTreeNodes $tree $node]
}
return $nodes
}

proc ::InstallJammer::IsValidFilename {name} {
return [expr {[regexp {[:\*\?\"<>|]} $name] == 0}]
}

proc ::InstallJammer::IsValidPath {path} {
global conf

set list [file split $path]
if {$conf(windows) && [string match {[a-zA-Z]:/} [lindex $list 0]]} {
set list [lrange $list 1 end]
}
foreach name $list {
if {![::InstallJammer::IsValidFilename $name]} { return 0 }
}
return 1
}

proc ::InstallJammer::InGuiMode {} {
return [info exists ::tk_patchLevel]
}

package require Itcl

proc ::InstallJammer::Class { name body } {
set matches [regexp -all -inline {\s+writable attribute\s+([^\s]+)} $body]
foreach {match varName} $matches {
append body "method $varName {args} { cfgvar $varName \$args }\n"
}

set matches [regexp -all -inline {\s+readable attribute\s+([^\s]+)} $body]
foreach {match varName} $matches {
append body "method $varName {args} { set $varName }\n"
}

set map [list]
lappend map "writable attribute" "public variable"
lappend map "readable attribute" "private variable"

set body [string map $map $body]

itcl::class ::$name $body
}

::itcl::class Object {
constructor {args} {
eval configure $args
set ::InstallJammer::ObjMap([namespace tail $this]) [incr objc]
}

destructor {
unset ::InstallJammer::ObjMap([namespace tail $this])
}

method destroy {} {
::itcl::delete object $this
}

method cfgvar { args } {
set option -[lindex $args 0]
if {[llength $args] == 2} {
configure $option [lindex $args 1]
if {![catch {$this type} type] && $type eq "file"} {
lappend ::conf(modifiedFiles) $this
}
}
return [cget $option]
}

method serialize {} {
set return [list]
foreach list [configure] {
set opt [lindex $list 0]
set def [lindex $list end-1]
set val [lindex $list end]
if {$def == $val} { continue }
lappend return $opt $val
}
return $return
}

common objc 0
} ; ## ::itcl::class Object

::itcl::class TreeObject {
inherit Object

constructor { args } {
set id [namespace tail $this]

eval configure $args

if {!$temp && $parent ne ""} {
if {![::InstallJammer::ObjExists $parent]} {
destroy
} else {
$parent children insert $index $id
}
}
}

destructor {
if {!$temp && $parent ne "" && [::InstallJammer::ObjExists $parent]} {
$parent children remove $id
}

foreach child $children {
$child destroy
}

if {!$temp} { CleanupAlias }
}

method serialize {} {
set return [list]
foreach list [configure] {
set opt [lindex $list 0]
if {$opt eq "-id" || $opt eq "-index"} { continue }
set def [lindex $list end-1]
set val [lindex $list end]
if {$opt eq "-name" && $val eq [string tolower $id]} { continue }
if {$def == $val} { continue }
lappend return $opt $val
}
return $return
}

method CleanupAlias {} {
variable ::InstallJammer::aliases
variable ::InstallJammer::aliasmap

if {[info exists aliasmap($id)]} {
unset -nocomplain aliases($aliasmap($id))
unset aliasmap($id)
set ::InstallJammer::Properties($id,Alias) ""
}
}

method parent { args } {
if {[lempty $args]} { return $parent }

if {![string equal $args "recursive"]} {
return [set parent [lindex $args 0]]
}

set x    $parent
set list [list]
while {[string length $x]} {
set list [linsert $list 0 $x]
set x [$x parent]
}
return $list
}

method reparent { newParent } {
if {$parent eq $newParent} { return }

if {$parent ne ""} { $parent children remove $id }

set parent $newParent
if {$parent ne ""} { $parent children add $id }
}

method children { args } {
if {![llength $args]} { return $children }

lassign $args command obj
switch -- $command {
"add" {
children insert end $obj
}

"index" {
return [lsearch -exact $children $obj]
}

"insert" {
lassign $args command index obj
if {$index eq "end"} {
lappend children $obj
} else {
set children [linsert $children $index $obj]
}
}

"remove" - "delete" {
set children [lremove $children $obj]
}

"reorder" {
if {[llength $obj]} { set children $obj }
}

"recursive" {
return [::InstallJammer::ObjectChildrenRecursive $this]
}
}
}

method is { args } {
if {[llength $args] == 1} {
return [string equal [type] [lindex $args 0]]
} else {
return [expr {[lsearch -exact $args [type]] > -1}]
}
}

method index {} {
if {[string length $parent]} { return [$parent children index $id] }
}

method component {} {
return "ClassObject"
}

method id        { args } { eval cfgvar id        $args }
method name      { args } { eval cfgvar name      $args }
method type      { args } { eval cfgvar type      $args }
method alias     { args } { eval cfgvar alias     $args }
method active    { args } { eval cfgvar active    $args }
method comment   { args } { eval cfgvar comment   $args }
method platforms { args } { eval cfgvar platforms $args }

public variable id      ""
public variable temp    0
public variable name    ""
public variable type    ""
public variable index   "end"
public variable active  1
public variable parent  ""
public variable comment ""

public variable platforms [list]

protected variable children [list]

private variable oldalias ""
public variable alias "" {
if {$oldalias ne ""} {
$this CleanupAlias
}
set oldalias $alias

if {$alias ne ""} {
set ::InstallJammer::aliases($alias) $id
set ::InstallJammer::aliasmap($id) $alias
set ::InstallJammer::Properties($id,Alias) $alias
}
}
}

::itcl::class InstallType {
inherit TreeObject

constructor { args } {
eval configure $args
} {
set type installtype
eval configure $args
}

method widget { args } {}
method setup  { args } { eval cfgvar setup $args }
method component {} {}

public variable setup  ""
}

itcl::class File {
inherit TreeObject

constructor {args} {
eval configure $args
} {
eval configure $args
}

method srcfile {} {
return [file join $::conf(vfs) $id]
}

method checkFileMethod { dest } {
::set method [filemethod]
if {$method eq ""} { ::set method [$parent filemethod] }

::set doInstall 1

if {![info exists exists] && $method ne "Always overwrite"} {
::set exists [file exists $dest]
}

switch -- $method {
"Update files with more recent dates" {
if {$exists && [file mtime $dest] >= $mtime} {
::set doInstall 0
}
}

"Update files with a newer version" {
global versions
if {$exists && [info exists versions($dest)]} {
::set c [package vcompare $version $versions($dest)]
if {$c == 0 || $c == -1} { ::set doInstall 0 }
}
}

"Always overwrite files" {
}

"Never overwrite files" {
if {$exists} { ::set doInstall 0 }
}

"Prompt user" {
if {$exists} {
::set txt "<%FileOverwriteText%>"
::set msg [::InstallJammer::SubstText $txt]
::set ans [::InstallJammer::MessageBox -type yesno  -name FileOverwrite -title "File Exists"  -message $msg]
::set doInstall [expr {$ans eq "yes"}]
}
}
}

return $doInstall
}

method destdir {} {
::set dir [::InstallJammer::SubstText [destdirname]]
if {[file pathtype $dir] eq "relative"} {
::set dir [::InstallJammer::SubstText <%InstallDir%>/[destdirname]]
}
return $dir
}

method destdirname {} {
return $directory
}

method destfile {} {
return [file join [destdir] [destfilename]]
}

method destfilename {} {
if {$targetfilename eq ""} {
return [file tail $name]
} else {
return [::InstallJammer::SubstText $targetfilename]
}
}

method srcfilename {} {
return [file tail $name]
}

method createdir {} {
::InstallJammer::CreateDir [destdir]
}

method install {} {
global conf

if {![::InstallJammer::PauseCheck]} { return 0 }

::set dest [install[type]]

if {![::InstallJammer::PauseCheck]} { return 0 }

if {$conf(windows)} {
::InstallJammer::SetPermissions $dest $attributes
} else {
if {[type] eq "dir"} {
if {$permissions eq ""} {
::set permissions $::info(DefaultDirectoryPermission)
}

if {[info commands output] eq "output"} {
output [list :DIR $dest $permissions]
}

::InstallJammer::SetPermissions $dest 00777
}
}

return 1
}

method installdir {} {
createdir
}

method installlink {} {
::set dest [destfile]

if {![checkFileMethod $dest]} { return }

createdir

if {[file exists $dest] && [catch { file delete -force $dest } error]} {
return -code error $error
}

if {[catch { exec ln -s $linktarget $dest } error]} {
return -code error $error
}

if {$version eq ""} {
::set version $::info(InstallVersion)
} else {
::set version [::InstallJammer::SubstText $version]
}

::InstallJammer::LogFile $dest
::InstallJammer::SetVersionInfo $dest $version

return $dest
}

method installfile { {dest ""} {createDir 1} {checkMethod 1} {logFile 1} } {
global conf
global info

if {$createDir} {
createdir
}

::set src [srcfile]
if {$dest eq ""} { ::set dest [destfile] }

if {$version eq ""} {
::set version $::info(InstallVersion)
} else {
::set version [::InstallJammer::SubstText $version]
}

::set doInstall 1
if {$checkMethod} {
::set doInstall [checkFileMethod $dest]
}

::set info(FileSize) $size
if {!$doInstall} {
::set progress ::InstallJammer::IncrProgress
if {[::InstallJammer::CommandExists $progress]} { $progress $size }
return $dest
}

if {$permissions eq ""} {
if {$conf(windows)} {
::set permissions 0666
} else {
::set permissions $info(DefaultFilePermission)
}
}

if {!$size} {
if {[catch { open $dest w $permissions } err]} {
return -code error $err
}
close $err
} else {
::InstallJammer::unpack $src $dest $permissions
}

if {$info(InstallStopped)} { return }

if {$mtime} {
file mtime $dest $mtime
}

if {$logFile} {
::InstallJammer::LogFile $dest
::InstallJammer::SetVersionInfo $dest $version
}

return $dest
}

method group {} {
return [lindex [parent recursive] 1]
}

method set { args } {
return [eval ::InstallJammer::SetObjectProperties $id $args]
}

method get { property {varName ""} } {
if {[string length $varName]} {
upvar 1 $varName var
return [::InstallJammer::GetObjectProperty $id $property var]
} else {
return [::InstallJammer::GetObjectProperty $id $property]
}
}

method isfile {} {
return [is file link]
}

method object {} {
return ::FileObject
}

method filemethod { {newMethod ""} } {
if {$newMethod ne ""} {
if {![info exists ::InstallJammer]} {
variable ::InstallJammer::PropertyMap
::set n [lsearch -exact $PropertyMap(FileUpdateMethod)  $newMethod]
if {$n < 0} {
return -code error [BWidget::badOptionString method  $newMethod $PropertyMap(FileUpdateMethod)]
}
::set newMethod $n
}
::set filemethod $newMethod
}

if {[string is integer -strict $filemethod]} {
return [lindex $::InstallJammer::PropertyMap(FileUpdateMethod)  $filemethod]
}
return $filemethod
}

method component {} {}

method name               { args } { eval cfgvar name              $args }
method size               { args } { eval cfgvar size              $args }
method mtime              { args } { eval cfgvar mtime             $args }
method version            { args } { eval cfgvar version           $args }
method location           { args } { eval cfgvar location          $args }
method directory          { args } { eval cfgvar directory         $args }
method linktarget         { args } { eval cfgvar linktarget        $args }
method attributes         { args } { eval cfgvar attributes        $args }
method permissions        { args } { eval cfgvar permissions       $args }
method targetfilename     { args } { eval cfgvar targetfilename    $args }
method compressionmethod  { args } { eval cfgvar compressionmethod $args }

public variable type               "file"
public variable name               ""
public variable size               0
public variable mtime              0
public variable version            ""
public variable location           ""
public variable directory          ""
public variable linktarget         ""
public variable filemethod         ""
public variable attributes         ""
public variable permissions        ""
public variable targetfilename     ""
public variable compressionmethod  ""

private variable exists

} ; ## itcl::class File

::itcl::class InstallComponent {
inherit TreeObject

constructor { args } {
eval configure $args
} {
::set name [string tolower $id]

eval configure $args

if {$temp} {
if {[string length $parent]} { $parent children remove $id }
return
}

if {![info exists ::InstallJammer] && [get Include incl]} {
if {$::info(Testing) && $incl eq "Include only when not testing"
|| !$::info(Testing) && $incl eq "Include only when testing"} {
destroy
return
}
}

if {[info exists ::InstallJammer::Properties($id,Alias)]
&& [string length $::InstallJammer::Properties($id,Alias)]} {
$this set Alias $::InstallJammer::Properties($id,Alias)
}

if {![info exists ::InstallJammer] && [ispane]} {
::set install $parent
::set wizard  $::info(Wizard)

::set node $parent
if {[$parent is installtype]} { ::set node root }

if {[string equal $install "Common"]} {
::InstallJammer::CreateWindow $wizard $id
} elseif {[string equal $install $::info($::conf(mode))]} {
::set create  [list ::InstallJammer::CreateWindow $wizard $id]

get WizardOptions stepopts
eval [list $wizard insert step end $node $id  -createcommand $create] $stepopts

if {[is window]} {
$wizard itemconfigure $id -appendorder 0
}
}
}
}

destructor {
if {!$temp} {
array unset ::InstallJammer::Properties $id,*

foreach lang [::InstallJammer::GetLanguageCodes] {
::msgcat::mcunset $lang $id,*
}

foreach condition $conditions {
catch { $condition destroy }
}
}
}

method set { args } {
if {[llength $args] == 0} { return }
if {[llength $args] == 1} { ::set args [lindex $args 0] }
eval [list ::InstallJammer::SetObjectProperties $id] $args
}

method get { property {varName ""} } {
if {[string length $varName]} {
upvar 1 $varName var
return [::InstallJammer::GetObjectProperty $id $property var]
} else {
return [::InstallJammer::GetObjectProperty $id $property]
}
}

method getText { field args } {
eval [list ::InstallJammer::GetText $id $field] $args
}

method setText { languages args } {
if {[llength $args] == 0} { return }
if {[llength $args] == 1} { ::set args [lindex $args 0] }
eval [list ::InstallJammer::SetVirtualText $languages $id] $args
}

method properties { arrayName args } {
upvar 1 $arrayName array
return [eval ::InstallJammer::ObjectProperties $id array $args]
}

method ispane {} {
return [expr {[is "pane"] || [is "window"]}]
}

method object {} {
if {[ispane]} {
variable ::InstallJammer::panes
return $panes($component)
} elseif {[is action]} {
variable ::InstallJammer::actions
return $actions($component)
} elseif {[is actiongroup]} {
return ActionGroupObject
}
}

method initialize {} {
[object] initialize $id
}

method widget { command widget args } {
switch -- $command {
"get" {
if {[info exists widgetData($widget,widget)]} {
return $widgetData($widget,widget)
}
}

"set" {
if {[lsearch -exact $widgets $widget] < 0} {
lappend widgets $widget
}

foreach [list opt val] $args {
::set widgetData($widget,[string range $opt 1 end]) $val
}
}

"type" {
if {[info exists widgetData($widget,type)]} {
return $widgetData($widget,type)
}
return text
}
}
}

method widgets {} {
return $widgets
}

method conditions { args } {
if {[lempty $args]} { return $conditions }

lassign $args command obj
switch -- $command {
"add" {
conditions insert end $obj
}

"index" {
return [lsearch -exact $conditions $obj]
}

"insert" {
lassign $args command index obj
if {[lsearch -exact $conditions $obj] > -1} { return }

if {$index eq "end"} {
lappend conditions $obj
} else {
::set conditions [linsert $conditions $index $obj]
}
}

"remove" - "delete" {
::set conditions [lremove $conditions $obj]
}

"reorder" {
::set conditions $obj
}
}

return
}

method checkConditions { {when ""} } {
if {[ispane]} {
global info
::set info(CurrentPane) $id
}

::set return 1
if {[llength $conditions]} {
::set conditionlist [list]

foreach cid $conditions {
if {![::InstallJammer::ObjExists $cid]} { continue }

if {$when eq "" || [$cid get CheckCondition] eq $when} {
lappend conditionlist $cid
}
}

if {[llength $conditionlist]} {
::set msg "Checking conditions for $id - $title"
if {$when ne ""} { append msg " - $when" }
debug $msg $id

foreach cid $conditionlist {
if {![$cid active]} {
debug "Skipping condition $cid - [$cid title] - condition is inactive" $cid
continue
}

debug "Checking condition $cid - [$cid title]" $cid
::set result [$cid check 0]

if {!$result} {
debug "Condition failed"
::set return 0
lappend failures $cid
if {$operator eq "AND"} {
break
}
} else {
debug "Condition passed"
if {$operator eq "OR"} {
::set return 1
break
}
}
}
}
}

if {!$return} {
::InstallJammer::DisplayConditionFailure [lindex $failures 0]
}

return $return
}

method execute {} {
if {$type eq "action"} {
debug "Executing action $id - [$id title]" $id

::set ::info(CurrentAction) $id
::InstallJammer::CurrentObject push $id

if {[file exists .]} { ::set pwd [pwd] }

::set err [catch {::InstallJammer::actions::$component $this} res]

if {[file exists .] && [info exists pwd] && $pwd ne [pwd]} {
cd $pwd
}

::InstallJammer::CurrentObject pop

if {$err && ![get IgnoreErrors]} {
::set msg "Error in action $component: $res"
if {[debugging state]} {
::set msg "Error in action $component\n\n$::errorInfo"
}
return -code error $msg
}

return $res
}
}

method setup       { args } { eval cfgvar setup       $args }
method title       { args } { eval cfgvar title       $args }
method window      { args } { eval cfgvar window      $args }
method created     { args } { eval cfgvar created     $args }
method command     { args } { eval cfgvar command     $args }
method operator    { args } { eval cfgvar operator    $args }
method component   { args } { eval cfgvar component   $args }
method arguments   { args } { eval cfgvar arguments   $args }
method description { args } { eval cfgvar description $args }

public variable type        "installcomponent"
public variable setup       ""
public variable title       ""
public variable window      ""
public variable created     0

public variable command     ""
public variable operator    "AND"
public variable component   ""
public variable arguments   ""
public variable conditions  [list]
public variable description ""

private variable widgets    [list]
private variable widgetData
} ; ## ::itcl::class InstallComponent

::itcl::class FileGroup {
inherit InstallComponent

constructor { args } {
eval configure $args
} {
eval configure $args
::set setup Install
}

method install {} {
global conf

::set dir [directory]

::InstallJammer::CreateDir $dir

if {$conf(windows)} {
::InstallJammer::SetPermissions $dir [get Attributes]
} else {
::InstallJammer::SetPermissions $dir [get Permissions]
}
}

method destdirname {} {
return [get Destination]
}

method directory {} {
return [::InstallJammer::SubstText [destdirname]]
}

method version {} {
return [get Version]
}

method filemethod {} {
return [get FileUpdateMethod]
}

method object {} {
return ::FileGroupObject
}

method compressionmethod {} {
return [get CompressionMethod]
}

public variable type "filegroup"
} ; ## ::itcl::class FileGroup

::itcl::class Component {
inherit InstallComponent

constructor { args } {
eval configure $args
} {
eval configure $args
::set setup Install
}

method object {} {
return ::ComponentObject
}

public variable type "component"
} ; ## ::itcl::class Component

::itcl::class SetupType {
inherit InstallComponent

constructor { args } {
eval configure $args
} {
eval configure $args
::set setup Install
}

method object {} {
return ::SetupTypeObject
}

public variable type "setuptype"
} ; ## ::itcl::class SetupType

::itcl::class Condition {
inherit TreeObject

constructor { args } {
::set id [namespace tail $this]
eval configure $args

if {[::InstallJammer::ObjExists $parent]} {
$parent conditions add $id
}
}

destructor {
if {[::InstallJammer::ObjExists $parent]} {
$parent conditions remove $id
}
}

method serialize {} {
::set return [list]
foreach list [configure] {
::set opt [lindex $list 0]
if {$opt eq "-id"} { continue }

::set def [lindex $list end-1]
::set val [lindex $list end]
if {$def == $val} { continue }
lappend return $opt $val
}
return $return
}

method set { args } {
return [eval ::InstallJammer::SetObjectProperties $id $args]
}

method get { property {varName ""} } {
if {[string length $varName]} {
upvar 1 $varName var
return [::InstallJammer::GetObjectProperty $id $property var]
} else {
return [::InstallJammer::GetObjectProperty $id $property]
}
}

method properties { arrayName args } {
upvar 1 $arrayName array
return [eval ::InstallJammer::ObjectProperties $id array $args]
}

method object {} {
return $::InstallJammer::conditions($component)
}

method check { {showError 1} } {
::set ::info(CurrentCondition) $id
::InstallJammer::CurrentObject push $id

::set res [string is true [::InstallJammer::conditions::$component $id]]
if {!$res && $showError} {
::InstallJammer::DisplayConditionFailure $id
}

::InstallJammer::CurrentObject pop

return $res
}

method name {} {
}

method type {} {
return $type
}

method id        { args } { eval cfgvar id        $args }
method title     { args } { eval cfgvar title     $args }
method active    { args } { eval cfgvar active    $args }
method parent    { args } { eval cfgvar parent    $args }
method component { args } { eval cfgvar component $args }

public variable id        ""
public variable type      "condition"
public variable title     ""
public variable active    1
public variable parent    ""
public variable component ""
} ; ## ::itcl::class Condition


proc ::installkit::base { {installkit ""} } {
global conf
global info

if {[info exists conf(BuildingInstallkit)]} {
vwait ::conf(BuildingInstallkit)
}

set conf(BuildingInstallkit) 1

if {$installkit eq ""} {
set installkit [::InstallJammer::TmpDir installkit$info(Ext)]
}

if {![file exists $installkit]} {
set installkit [::InstallJammer::Wrap -o $installkit]
}

unset conf(BuildingInstallkit)

return [::InstallJammer::Normalize $installkit]
}

proc ::installkit::Mount { crapFile mountPoint } {
crapvfs::mount $crapFile $mountPoint
}

proc ::installkit::Unmount { mountPoint } {
crapvfs::unmount $mountPoint
}

proc ::InstallAPI::EncodeURL {args} {
::InstallAPI::ParseArgs _args $args {
-url { string 1 }
}

global conf

variable urlEncodeMap

if {![info exists urlEncodeMap]} {
for {set i 0} {$i < 256} {incr i} {
set c [format %c $i]

if {$c eq "/" || $c eq "."} { continue }
if {$::tcl_platform(platform) eq "windows" && $c eq ":"} {
continue
}

if {![string match {[a-zA-Z0-9]} $c]} {
lappend urlEncodeMap $c %[format %02x $i]
}
}
}

set url [string map $urlEncodeMap $_args(-url)]

if {[file exists $_args(-url)]} {
if {$conf(windows)} {
return "file:///$url"
} else {
return "file://$url"
}
}

return $url
}

proc ::InstallAPI::FindProcesses {args} {
global conf

::InstallAPI::ParseArgs _args $args {
-pid   { string  0 }
-glob  { boolean 0 0}
-name  { string  0 }
-user  { string  0 }
-group { string  0 }
}

if {$conf(windows)} {
if {[info exists _args(-pid)]} {
set pid $_args(-pid)
return [expr {[twapi::process_exists $pid] ? $pid : ""}]
}

set opts {}

if {$_args(-glob)} {
lappend opts -glob
}

if {[info exists _args(-name)]} {
lappend opts -name $_args(-name)
}

if {[info exists _args(-user)]} {
lappend opts -user $_args(-user)
}

return [eval twapi::get_process_ids $opts]
} else {
if {![info exists conf(OldPS)]} {
set conf(OldPS) [catch { exec ps -C ps }]
}

set ps     [list ps]
set all    0
set format "pid"

if {[info exists _args(-pid)]} {
lappend ps -p $_args(-pid)
}

if {[info exists _args(-name)]} {
if {$conf(OldPS)} {
set all 1
lappend format comm
} else {
lappend ps -C $_args(-name)
}
}

if {[info exists _args(-user)]} {
set all 0
lappend ps -U $_args(-user)
}

if {[info exists _args(-group)]} {
set all 0
lappend ps -G $_args(-group)
}

if {$all} { lappend ps -ae }

lappend ps -o $format

if {![catch { eval exec $ps } result]} {
set pids [list]
foreach list [lrange [split [string trim $result] \n] 1 end] {
if {[llength $list] > 1} {
set command [file tail [lindex $list 1]]
if {$_args(-name) ne $command} { continue }
}
lappend pids [lindex $list 0]
}
return $pids
}
}
}

proc ::InstallAPI::PromptForDirectory {args} {
global conf

::InstallJammer::SetDialogArgs ChooseDirectory _args

::InstallAPI::ParseArgs _args $args {
-title         { string 0 "<%PromptForDirectoryTitle%>"}
-message       { string 0 "<%PromptForDirectoryMessage%>"}
-newfoldertext { string 0 "<%PromptForDirectoryNewFolderText%>"}
-variable      { string 0 }
-initialdir    { string 0 }
-normalize     { string 0 "platform" }
-virtualtext   { string 0 }
}

set normalize $_args(-normalize)
unset _args(-normalize)

if {[info exists _args(-virtualtext)]} {
set _args(-variable) ::info($_args(-virtualtext))
unset _args(-virtualtext)
}

if {[info exists _args(-variable)]} {
set varName $_args(-variable)
upvar 1 $varName dir
unset _args(-variable)
}

if {[info exists _args(-initialdir)]} {
set dir $_args(-initialdir)
} elseif {[info exists dir]} {
set _args(-initialdir) $dir
}

foreach x {-title -message -newfoldertext} {
set _args($x) [::InstallJammer::SubstText $_args($x)]
}
set _args(-oktext)      [::InstallJammer::SubstText "<%OK%>"]
set _args(-canceltext)  [::InstallJammer::SubstText "<%Cancel%>"]

if {$_args(-usenative)} {
set res [eval ::ij_chooseDirectory [array get _args]]
} else {
unset -nocomplain _args(-usenative)
if {[llength $conf(ParentWindow)] > 1} {
wm withdraw [lindex $conf(ParentWindow) end]
set _args(-parent) [::InstallJammer::TransientParent]
}

set res [eval ::ChooseDirectory .__choose_directory [array get _args]]

if {[llength $conf(ParentWindow)] > 1} {
wm deiconify [lindex $conf(ParentWindow) end]
}
}

if {$res ne ""} {
set dir $res
if {$conf(windows) && [file exists $dir]} {
set dir [file attributes $dir -longname]
}

set dir [::InstallJammer::Normalize $dir $normalize]

if {[info exists varName]} { set $varName $dir }

::InstallJammer::UpdateWidgets

return $dir
}
}

proc ::InstallAPI::SetActiveSetupType {args} {
global info

::InstallAPI::ParseArgs _args $args {
-setuptype  { string  1 }
}

if {[::InstallJammer::ObjExists $_args(-setuptype)]} {
set obj  $_args(-setuptype)
set name [$obj name]

if {![$obj is setuptype]} {
return -code error "$obj is not a valid Setup Type object"
}
} else {
set name $_args(-setuptype)

set setups [SetupTypes children]
set obj [::InstallJammer::FindObjByName $name [SetupTypes children]]
if {$obj eq ""} {
return -code error "Could not find Setup Type '$name'"
}
}

set info(InstallType)   $name
set info(InstallTypeID) $obj

array unset ::InstallJammer::Components $info(InstallTypeID),*
set components [$info(InstallTypeID) get Components]
foreach component [Components children recursive] {
if {[lsearch -exact $components $component] < 0} {
$component active 0
} else {
$component active 1
}
}

::InstallJammer::UpdateInstallInfo

return $obj
}

proc ::InstallAPI::SetUpdateWidgets {args} {
global conf

::InstallAPI::ParseArgs _args $args {
-widgets  { string 1 }
}

set conf(UpdateWidgets) {}
foreach widget $_args(-widgets) {
lappend conf(UpdateWidgets) [join $widget ""]
}
}

proc ::InstallAPI::SetVirtualText {args} {
variable ::InstallJammer::UpdateVarCmds
variable ::InstallJammer::AutoUpdateVars

::InstallAPI::ParseArgs _args $args {
-action      { string  0 }
-autoupdate  { boolean 0 }
-command     { string  0 }
-language    { string  0 None }
-object      { string  0 }
-value       { string  0 }
-virtualtext { string  1 }
}

set val  ""
set var  $_args(-virtualtext)
set lang $_args(-language)

if {$lang eq "None"} {
upvar #0 ::InstallJammer::UpdateVarCmds  cmds
upvar #0 ::InstallJammer::AutoUpdateVars vars
} else {
if {[string equal -nocase $lang "all"]} {
set langs [::InstallJammer::GetLanguageCodes]
} else {
set langs [::InstallJammer::GetLanguageCode $lang]
}
if {![llength $langs]} {
return -code error "invalid language '$lang'"
}
upvar #0 ::InstallJammer::UpdateTextCmds cmds
upvar #0 ::InstallJammer::AutoUpdateText vars
}

if {[info exists _args(-object)]} {
set object [::InstallJammer::ID $_args(-object)]
set var $object,$var
}

if {[info exists _args(-value)]} {
set val $_args(-value)

if {$lang eq "None"} {
set ::info($var) $val
} else {
foreach lang $langs {
::msgcat::mcset $lang $var $val
}
if {[info exists cmds($var)]} {
uplevel #0 $cmds($var)
}
}
}

if {[info exists _args(-action)] && $_args(-action) ne ""} {
set command [list ::InstallJammer::ExecuteActions $_args(-action)]
}

if {[info exists _args(-command)] && $_args(-command) ne ""} {
set command $_args(-command)
}

if {[info exists command]} {
lappend cmds($var) $command

if {$lang eq "None"} {
if {[info exists ::info($var)]} {
uplevel #0 $command
}
} else {
foreach lang $langs {
if {[::msgcat::mcexists $var $lang]} {
uplevel #0 $command
break
}
}
}
}

if {[info exists _args(-autoupdate)]} {
set auto $_args(-autoupdate)
if {$auto && ![info exists vars($var)]} {
set vars($var) $val
::InstallJammer::UpdateWidgets -updateidletasks 1
} elseif {!$auto && [info exists vars($var)]} {
unset vars($var)
::InstallJammer::UpdateWidgets -updateidletasks 1
}
}
}

proc ::InstallAPI::ParseArgs {_arrayName _arglist optionspec} {
debug "API Call: [info level -1]"

upvar 1 $_arrayName array

if {[expr {[llength $_arglist] % 2}]} {
if {$_arglist ne "-?"} {
set proc [lindex [info level -1] 0]
return -code error "invalid number of arguments passed to $proc: all arguments must be key-value pairs"
}
}

array set options {
-subst       { string  0 0 }
-errorvar    { string  0 }
-returnerror { boolean 0 }
}

array set options $optionspec

set optionlist [lsort [array names options]]

set required [list]
foreach option $optionlist {
if {[lindex $options($option) 1]} {
lappend required $option
} elseif {[llength $options($option)] > 2} {
set array($option) [lindex $options($option) 2]
}
}

if {(![llength $_arglist] && [llength $required]) || $_arglist eq "-?"} {
set help "Usage: [lindex [info level -1] 0] ?option value ...?"
append help "\n\nOptions:"
foreach option $optionlist {
set type     [lindex $options($option) 0]
set required [lindex $options($option) 1]
set default  [lindex $options($option) 2]
set choices  [lindex $options($option) 3]

append help "\n\t"

if {!$required} { append help ? }
append help $option

if {$type eq "choice"} {
append help " [join $choices " | "]"
} elseif {$type eq "boolean"} {
append help " 0 | 1"
} else {
append help " [string range $option 1 end]"
}

if {$default ne ""} { append help " (Default: $default)" }

if {!$required} { append help ? }
}

return -code error $help
}

if {[expr {[llength $_arglist] % 2}]} {
return -code error "invalid number of arguments"
}

foreach {option value} $_arglist {
set option [string tolower $option]

if {![info exists options($option)]} {
return -code error "invalid option $option"
}

set array($option) $value

set type [lindex $options($option) 0]
if {$type eq "string"} {
if {$array(-subst)} {
set array($option) [::InstallJammer::SubstText $value]
}
} elseif {$type eq "boolean"} {
if {![string is boolean -strict $value]} {
return -code error "invalid boolean value for $option"
}
} elseif {$type eq "choice"} {
set values [lindex $options($option) 3]
if {[lsearch -exact $values $value] < 0} {
set x "[string range $option 1 end] value"
return -code error [BWidget::badOptionString $x $value $values]
}
}
}

foreach option $required {
if {![info exists array($option)]} {
return -code error "missing required option $option"
}
}

unset array(-subst)

if {![info exists array(-returnerror)]} {
set array(-returnerror) 1
if {[info exists array(-errorvar)]} {
set array(-returnerror) 0
uplevel 1 [list upvar 1 $array(-errorvar) error]
}
}
}
} uninstall.tcl {
if {[info exists ::InstallJammer]} { return }

namespace eval ::InstallAPI {}
namespace eval ::InstallJammer {}

set ::debug   0
set ::verbose 0

set ::conf(osx)      [string equal $::tcl_platform(os) "Darwin"]
set ::conf(unix)     [string equal $::tcl_platform(platform) "unix"]
set ::conf(windows)  [string equal $::tcl_platform(platform) "windows"]

set ::conf(threaded) [info exists ::tcl_platform(threaded)]

set ::info(Testing)   0
set ::info(Debugging) 0

trace add variable ::info write ::InstallJammer::VirtualTextTrace

proc ::InstallJammer::VirtualTextTrace { name1 name2 op } {
upvar #0 ::info($name2) var

if {[info exists ::InstallJammer::UpdateVarCmds($name2)]} {
foreach cmd $::InstallJammer::UpdateVarCmds($name2) {
uplevel #0 $cmd
}
}

if {[info exists ::InstallJammer::AutoUpdateVars($name2)]
&& $var ne $::InstallJammer::AutoUpdateVars($name2)} {
set ::InstallJammer::AutoUpdateVars($name2) $var
::InstallJammer::UpdateWidgets -updateidletasks 1
}
}

proc ::InstallJammer::SourceCachedFile { file {namespace "::"} } {
if {[info exists ::InstallJammer::files($file)]} {
namespace eval $namespace $::InstallJammer::files($file)
return 1
}
return 0
}
array set ::InstallJammer::CommandLineOptions {
debugconsole
{ShowConsole Switch Yes No {} {run uninstaller with a debug console open}}

mode
{UninstallMode Choice No No {Console Silent Standard} {set the mode to run the uninstaller in}}

test
{Testing Switch Yes No {} {run uninstaller without uninstalling any files}}

}

set PaneList {Uninstall UninstallComplete UninstallDetails}
array set ::InstallJammer::Properties {
04EBA609-5B24-46C1-A727-6D4BCEE47532,Active
Yes

04EBA609-5B24-46C1-A727-6D4BCEE47532,Component
{}

04EBA609-5B24-46C1-A727-6D4BCEE47532,Conditions
{}

04EBA609-5B24-46C1-A727-6D4BCEE47532,Default
Yes

04EBA609-5B24-46C1-A727-6D4BCEE47532,ExecuteAction
1

04EBA609-5B24-46C1-A727-6D4BCEE47532,ID
{}

04EBA609-5B24-46C1-A727-6D4BCEE47532,IgnoreErrors
No

04EBA609-5B24-46C1-A727-6D4BCEE47532,Include
0

04EBA609-5B24-46C1-A727-6D4BCEE47532,Prompt
<%UninstallStartupText%>

04EBA609-5B24-46C1-A727-6D4BCEE47532,VirtualText
Answer

16BB9D62-382F-4718-A4FF-3324824370A9,Active
Yes

16BB9D62-382F-4718-A4FF-3324824370A9,AllowQuit
Yes

16BB9D62-382F-4718-A4FF-3324824370A9,Component
{}

16BB9D62-382F-4718-A4FF-3324824370A9,Conditions
{}

16BB9D62-382F-4718-A4FF-3324824370A9,ExecuteAction
1

16BB9D62-382F-4718-A4FF-3324824370A9,ID
{}

16BB9D62-382F-4718-A4FF-3324824370A9,IgnoreErrors
No

16BB9D62-382F-4718-A4FF-3324824370A9,Include
0

16BB9D62-382F-4718-A4FF-3324824370A9,Message,subst
1

16BB9D62-382F-4718-A4FF-3324824370A9,PaginateMessage
Yes

16BB9D62-382F-4718-A4FF-3324824370A9,WrapText
Yes

3956C52B-8918-4C01-86A6-293452079DD7,Active
Yes

3956C52B-8918-4C01-86A6-293452079DD7,Alias
{Setup Actions}

3956C52B-8918-4C01-86A6-293452079DD7,Conditions
{}

3956C52B-8918-4C01-86A6-293452079DD7,ID
{}

3CBBB764-3C18-4E64-B7B6-28AADD8C0599,Action
{Uninstall Actions}

3CBBB764-3C18-4E64-B7B6-28AADD8C0599,Active
Yes

3CBBB764-3C18-4E64-B7B6-28AADD8C0599,Component
{}

3CBBB764-3C18-4E64-B7B6-28AADD8C0599,Conditions
{}

3CBBB764-3C18-4E64-B7B6-28AADD8C0599,EvaluateConditions
Yes

3CBBB764-3C18-4E64-B7B6-28AADD8C0599,ExecuteAction
1

3CBBB764-3C18-4E64-B7B6-28AADD8C0599,ID
{}

3CBBB764-3C18-4E64-B7B6-28AADD8C0599,IgnoreErrors
No

3CBBB764-3C18-4E64-B7B6-28AADD8C0599,Include
0

4160048A-9C4E-43BA-A8F4-3D45CAE7A787,Active
Yes

4160048A-9C4E-43BA-A8F4-3D45CAE7A787,Component
{}

4160048A-9C4E-43BA-A8F4-3D45CAE7A787,Conditions
{}

4160048A-9C4E-43BA-A8F4-3D45CAE7A787,ExecuteAction
1

4160048A-9C4E-43BA-A8F4-3D45CAE7A787,ID
{}

4160048A-9C4E-43BA-A8F4-3D45CAE7A787,IgnoreErrors
No

4160048A-9C4E-43BA-A8F4-3D45CAE7A787,Include
0

41EC040C-5F66-4A2F-8CED-91D603432622,Active
Yes

41EC040C-5F66-4A2F-8CED-91D603432622,Alias
{Startup Actions}

41EC040C-5F66-4A2F-8CED-91D603432622,Conditions
{}

41EC040C-5F66-4A2F-8CED-91D603432622,ID
{}

47EC0F76-8D70-4BF5-B8BD-809F0F2A2865,Active
Yes

47EC0F76-8D70-4BF5-B8BD-809F0F2A2865,Component
{}

47EC0F76-8D70-4BF5-B8BD-809F0F2A2865,Conditions
{}

47EC0F76-8D70-4BF5-B8BD-809F0F2A2865,ExecuteAction
1

47EC0F76-8D70-4BF5-B8BD-809F0F2A2865,ExitType
Cancel

47EC0F76-8D70-4BF5-B8BD-809F0F2A2865,ID
{}

47EC0F76-8D70-4BF5-B8BD-809F0F2A2865,IgnoreErrors
No

47EC0F76-8D70-4BF5-B8BD-809F0F2A2865,Include
0

509E17E9-D0B6-401B-A111-35B43A1768CF,Active
Yes

509E17E9-D0B6-401B-A111-35B43A1768CF,CheckCondition
6

509E17E9-D0B6-401B-A111-35B43A1768CF,Component
{}

509E17E9-D0B6-401B-A111-35B43A1768CF,FailureFocus
{}

509E17E9-D0B6-401B-A111-35B43A1768CF,FailureMessage
{}

509E17E9-D0B6-401B-A111-35B43A1768CF,ID
{}

509E17E9-D0B6-401B-A111-35B43A1768CF,Include
0

509E17E9-D0B6-401B-A111-35B43A1768CF,Operator
true

509E17E9-D0B6-401B-A111-35B43A1768CF,String
<%GuiMode%>

5A9AB28A-139C-406A-8F53-94EDA701192B,Active
Yes

5A9AB28A-139C-406A-8F53-94EDA701192B,CheckCondition
6

5A9AB28A-139C-406A-8F53-94EDA701192B,Component
{}

5A9AB28A-139C-406A-8F53-94EDA701192B,DefaultButton
Yes

5A9AB28A-139C-406A-8F53-94EDA701192B,FailureFocus
{}

5A9AB28A-139C-406A-8F53-94EDA701192B,FailureMessage
{}

5A9AB28A-139C-406A-8F53-94EDA701192B,ID
{}

5A9AB28A-139C-406A-8F53-94EDA701192B,Icon
info

5A9AB28A-139C-406A-8F53-94EDA701192B,Include
0

5A9AB28A-139C-406A-8F53-94EDA701192B,Message,subst
1

5A9AB28A-139C-406A-8F53-94EDA701192B,ResultVirtualText
Answer

5A9AB28A-139C-406A-8F53-94EDA701192B,Title,subst
1

5A9AB28A-139C-406A-8F53-94EDA701192B,TrueValue
No

5F23D154-6797-499A-AEE4-E14BE6DB46B4,Active
Yes

5F23D154-6797-499A-AEE4-E14BE6DB46B4,Alias
{Finish Actions}

5F23D154-6797-499A-AEE4-E14BE6DB46B4,Conditions
{}

5F23D154-6797-499A-AEE4-E14BE6DB46B4,ID
{}

761101CD-B1D6-480A-9B3C-EAC7879A5576,Active
Yes

761101CD-B1D6-480A-9B3C-EAC7879A5576,BackButton,subst
1

761101CD-B1D6-480A-9B3C-EAC7879A5576,Buttons
Next/Cancel

761101CD-B1D6-480A-9B3C-EAC7879A5576,CancelButton,subst
1

761101CD-B1D6-480A-9B3C-EAC7879A5576,Caption,subst
1

761101CD-B1D6-480A-9B3C-EAC7879A5576,Component
{}

761101CD-B1D6-480A-9B3C-EAC7879A5576,Conditions
{1 condition}

761101CD-B1D6-480A-9B3C-EAC7879A5576,ID
{}

761101CD-B1D6-480A-9B3C-EAC7879A5576,Icon
<%Icon%>

761101CD-B1D6-480A-9B3C-EAC7879A5576,Include
0

761101CD-B1D6-480A-9B3C-EAC7879A5576,Message,subst
1

761101CD-B1D6-480A-9B3C-EAC7879A5576,NextButton,subst
1

761101CD-B1D6-480A-9B3C-EAC7879A5576,Subtitle,subst
1

761101CD-B1D6-480A-9B3C-EAC7879A5576,Text,subst
1

761101CD-B1D6-480A-9B3C-EAC7879A5576,Title,subst
1

7BCBB06C-6BB2-4F43-BDFA-0683BA805A0E,Active
Yes

7BCBB06C-6BB2-4F43-BDFA-0683BA805A0E,Component
{}

7BCBB06C-6BB2-4F43-BDFA-0683BA805A0E,Conditions
{}

7BCBB06C-6BB2-4F43-BDFA-0683BA805A0E,ExecuteAction
1

7BCBB06C-6BB2-4F43-BDFA-0683BA805A0E,ID
{}

7BCBB06C-6BB2-4F43-BDFA-0683BA805A0E,IgnoreErrors
No

7BCBB06C-6BB2-4F43-BDFA-0683BA805A0E,Include
0

83025D41-BC90-4E38-B864-42839441C553,Active
Yes

83025D41-BC90-4E38-B864-42839441C553,CheckCondition
6

83025D41-BC90-4E38-B864-42839441C553,Component
{}

83025D41-BC90-4E38-B864-42839441C553,FailureFocus
{}

83025D41-BC90-4E38-B864-42839441C553,FailureMessage
{}

83025D41-BC90-4E38-B864-42839441C553,ID
{}

83025D41-BC90-4E38-B864-42839441C553,Include
0

83025D41-BC90-4E38-B864-42839441C553,Operator
false

83025D41-BC90-4E38-B864-42839441C553,String
<%Answer%>

890E2588-9587-41B2-AB58-F912364F99BE,Active
Yes

890E2588-9587-41B2-AB58-F912364F99BE,AllowQuit
Yes

890E2588-9587-41B2-AB58-F912364F99BE,Component
{}

890E2588-9587-41B2-AB58-F912364F99BE,Conditions
{}

890E2588-9587-41B2-AB58-F912364F99BE,ExecuteAction
1

890E2588-9587-41B2-AB58-F912364F99BE,ID
{}

890E2588-9587-41B2-AB58-F912364F99BE,IgnoreErrors
No

890E2588-9587-41B2-AB58-F912364F99BE,Include
0

890E2588-9587-41B2-AB58-F912364F99BE,Message,subst
1

890E2588-9587-41B2-AB58-F912364F99BE,PaginateMessage
Yes

890E2588-9587-41B2-AB58-F912364F99BE,WrapText
Yes

8DE28FB2-3277-43CD-9DDF-1CF83CFB0178,Active
Yes

8DE28FB2-3277-43CD-9DDF-1CF83CFB0178,Alias
{Uninstall Actions}

8DE28FB2-3277-43CD-9DDF-1CF83CFB0178,Conditions
{}

8DE28FB2-3277-43CD-9DDF-1CF83CFB0178,ID
{}

902A4E10-4E5B-40CA-88C2-C5BF8FFBAC91,Active
Yes

902A4E10-4E5B-40CA-88C2-C5BF8FFBAC91,Alias
{Cancel Actions}

902A4E10-4E5B-40CA-88C2-C5BF8FFBAC91,Conditions
{}

902A4E10-4E5B-40CA-88C2-C5BF8FFBAC91,ID
{}

9CF70E2B-31E0-4FF5-B918-6E882DD6322F,Active
Yes

9CF70E2B-31E0-4FF5-B918-6E882DD6322F,Component
{}

9CF70E2B-31E0-4FF5-B918-6E882DD6322F,Conditions
{}

9CF70E2B-31E0-4FF5-B918-6E882DD6322F,ExecuteAction
1

9CF70E2B-31E0-4FF5-B918-6E882DD6322F,ExitType
Finish

9CF70E2B-31E0-4FF5-B918-6E882DD6322F,ID
{}

9CF70E2B-31E0-4FF5-B918-6E882DD6322F,IgnoreErrors
No

9CF70E2B-31E0-4FF5-B918-6E882DD6322F,Include
0

A501DBDD-0DF3-4C82-8907-5166A0747D9F,Active
Yes

A501DBDD-0DF3-4C82-8907-5166A0747D9F,Component
{}

A501DBDD-0DF3-4C82-8907-5166A0747D9F,Conditions
{}

A501DBDD-0DF3-4C82-8907-5166A0747D9F,ExecuteAction
1

A501DBDD-0DF3-4C82-8907-5166A0747D9F,ExitType
Finish

A501DBDD-0DF3-4C82-8907-5166A0747D9F,ID
{}

A501DBDD-0DF3-4C82-8907-5166A0747D9F,IgnoreErrors
No

A501DBDD-0DF3-4C82-8907-5166A0747D9F,Include
0

AD9342B8-7264-4430-8193-E8ECDA0A608D,Action
{Uninstall Actions}

AD9342B8-7264-4430-8193-E8ECDA0A608D,Active
Yes

AD9342B8-7264-4430-8193-E8ECDA0A608D,Component
{}

AD9342B8-7264-4430-8193-E8ECDA0A608D,Conditions
{}

AD9342B8-7264-4430-8193-E8ECDA0A608D,EvaluateConditions
Yes

AD9342B8-7264-4430-8193-E8ECDA0A608D,ExecuteAction
1

AD9342B8-7264-4430-8193-E8ECDA0A608D,ID
{}

AD9342B8-7264-4430-8193-E8ECDA0A608D,IgnoreErrors
No

AD9342B8-7264-4430-8193-E8ECDA0A608D,Include
0

AIX-ppc,Active
No

AIX-ppc,DefaultDirectoryPermission
0755

AIX-ppc,DefaultFilePermission
0755

AIX-ppc,Executable
<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>

AIX-ppc,FallBackToConsole
Yes

AIX-ppc,InstallDir
<%Home%>/<%ShortAppName%>

AIX-ppc,InstallMode
Standard

AIX-ppc,InstallType
Typical

AIX-ppc,ProgramExecutable
{}

AIX-ppc,ProgramFolderAllUsers
No

AIX-ppc,ProgramFolderName
<%AppName%>

AIX-ppc,ProgramLicense
<%InstallDir%>/LICENSE.txt

AIX-ppc,ProgramName
{}

AIX-ppc,ProgramReadme
<%InstallDir%>/README.txt

AIX-ppc,PromptForRoot
Yes

AIX-ppc,RequireRoot
No

AIX-ppc,RootInstallDir
/usr/local/<%ShortAppName%>

B07B6C31-8A4D-4A77-AF27-150B2E6ADAAC,Action
{Uninstall Actions}

B07B6C31-8A4D-4A77-AF27-150B2E6ADAAC,Active
Yes

B07B6C31-8A4D-4A77-AF27-150B2E6ADAAC,Component
{}

B07B6C31-8A4D-4A77-AF27-150B2E6ADAAC,Conditions
{}

B07B6C31-8A4D-4A77-AF27-150B2E6ADAAC,EvaluateConditions
Yes

B07B6C31-8A4D-4A77-AF27-150B2E6ADAAC,ExecuteAction
1

B07B6C31-8A4D-4A77-AF27-150B2E6ADAAC,ID
{}

B07B6C31-8A4D-4A77-AF27-150B2E6ADAAC,IgnoreErrors
No

B07B6C31-8A4D-4A77-AF27-150B2E6ADAAC,Include
0

BB26CF22-4AA5-4DE7-9A7F-4C74579A1B58,Active
Yes

BB26CF22-4AA5-4DE7-9A7F-4C74579A1B58,Comment
{Ask the user if they want to proceed with the uninstall.}

BB26CF22-4AA5-4DE7-9A7F-4C74579A1B58,Component
{}

BB26CF22-4AA5-4DE7-9A7F-4C74579A1B58,Conditions
{}

BB26CF22-4AA5-4DE7-9A7F-4C74579A1B58,ExecuteAction
1

BB26CF22-4AA5-4DE7-9A7F-4C74579A1B58,ExitType
Cancel

BB26CF22-4AA5-4DE7-9A7F-4C74579A1B58,ID
{}

BB26CF22-4AA5-4DE7-9A7F-4C74579A1B58,IgnoreErrors
No

BB26CF22-4AA5-4DE7-9A7F-4C74579A1B58,Include
0

C44ED22A-F9ED-46FE-B276-C45D197EBD67,Active
Yes

C44ED22A-F9ED-46FE-B276-C45D197EBD67,BackButton,subst
1

C44ED22A-F9ED-46FE-B276-C45D197EBD67,Buttons
Next/Cancel

C44ED22A-F9ED-46FE-B276-C45D197EBD67,CancelButton,subst
1

C44ED22A-F9ED-46FE-B276-C45D197EBD67,Caption,subst
1

C44ED22A-F9ED-46FE-B276-C45D197EBD67,Component
{}

C44ED22A-F9ED-46FE-B276-C45D197EBD67,Conditions
{0 conditions}

C44ED22A-F9ED-46FE-B276-C45D197EBD67,FileValue,subst
1

C44ED22A-F9ED-46FE-B276-C45D197EBD67,ID
{}

C44ED22A-F9ED-46FE-B276-C45D197EBD67,Icon
<%Icon%>

C44ED22A-F9ED-46FE-B276-C45D197EBD67,Include
0

C44ED22A-F9ED-46FE-B276-C45D197EBD67,Message,subst
1

C44ED22A-F9ED-46FE-B276-C45D197EBD67,NextButton,subst
1

C44ED22A-F9ED-46FE-B276-C45D197EBD67,ProgressValue,subst
1

C44ED22A-F9ED-46FE-B276-C45D197EBD67,Subtitle,subst
1

C44ED22A-F9ED-46FE-B276-C45D197EBD67,Title,subst
1

E9C6B194-416D-44C0-BDF8-DFB7CB9055CB,Active
Yes

E9C6B194-416D-44C0-BDF8-DFB7CB9055CB,Component
{}

E9C6B194-416D-44C0-BDF8-DFB7CB9055CB,Conditions
{}

E9C6B194-416D-44C0-BDF8-DFB7CB9055CB,ExecuteAction
1

E9C6B194-416D-44C0-BDF8-DFB7CB9055CB,ID
{}

E9C6B194-416D-44C0-BDF8-DFB7CB9055CB,IgnoreErrors
No

E9C6B194-416D-44C0-BDF8-DFB7CB9055CB,Include
0

E9C6B194-416D-44C0-BDF8-DFB7CB9055CB,State
disabled

E9C6B194-416D-44C0-BDF8-DFB7CB9055CB,Text
{}

E9C6B194-416D-44C0-BDF8-DFB7CB9055CB,Widget
{NextButton; CancelButton}

EDCABD7B-7770-4EF5-A2C9-B976C9067A3F,Active
Yes

EDCABD7B-7770-4EF5-A2C9-B976C9067A3F,CheckCondition
3

EDCABD7B-7770-4EF5-A2C9-B976C9067A3F,Component
{}

EDCABD7B-7770-4EF5-A2C9-B976C9067A3F,FailureFocus
{}

EDCABD7B-7770-4EF5-A2C9-B976C9067A3F,FailureMessage
{}

EDCABD7B-7770-4EF5-A2C9-B976C9067A3F,ID
{}

EDCABD7B-7770-4EF5-A2C9-B976C9067A3F,Include
0

EDCABD7B-7770-4EF5-A2C9-B976C9067A3F,Operator
true

EDCABD7B-7770-4EF5-A2C9-B976C9067A3F,String
<%ErrorsOccurred%>

FEF5CE97-BF58-472B-9CEC-3AADF9AC1A54,Active
Yes

FEF5CE97-BF58-472B-9CEC-3AADF9AC1A54,BackButton,subst
1

FEF5CE97-BF58-472B-9CEC-3AADF9AC1A54,Buttons
Next/Cancel

FEF5CE97-BF58-472B-9CEC-3AADF9AC1A54,CancelButton,subst
1

FEF5CE97-BF58-472B-9CEC-3AADF9AC1A54,Caption,subst
1

FEF5CE97-BF58-472B-9CEC-3AADF9AC1A54,Component
{}

FEF5CE97-BF58-472B-9CEC-3AADF9AC1A54,Conditions
{0 conditions}

FEF5CE97-BF58-472B-9CEC-3AADF9AC1A54,ID
{}

FEF5CE97-BF58-472B-9CEC-3AADF9AC1A54,Image
<%Image%>

FEF5CE97-BF58-472B-9CEC-3AADF9AC1A54,Include
0

FEF5CE97-BF58-472B-9CEC-3AADF9AC1A54,Message,subst
1

FEF5CE97-BF58-472B-9CEC-3AADF9AC1A54,NextButton,subst
1

FEF5CE97-BF58-472B-9CEC-3AADF9AC1A54,WizardOptions
{-bg white -separator 0}

FreeBSD-4-x86,Active
No

FreeBSD-4-x86,DefaultDirectoryPermission
0755

FreeBSD-4-x86,DefaultFilePermission
0755

FreeBSD-4-x86,Executable
<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>

FreeBSD-4-x86,FallBackToConsole
Yes

FreeBSD-4-x86,InstallDir
<%Home%>/<%ShortAppName%>

FreeBSD-4-x86,InstallMode
Standard

FreeBSD-4-x86,InstallType
Typical

FreeBSD-4-x86,ProgramExecutable
{}

FreeBSD-4-x86,ProgramFolderAllUsers
No

FreeBSD-4-x86,ProgramFolderName
<%AppName%>

FreeBSD-4-x86,ProgramLicense
<%InstallDir%>/LICENSE.txt

FreeBSD-4-x86,ProgramName
{}

FreeBSD-4-x86,ProgramReadme
<%InstallDir%>/README.txt

FreeBSD-4-x86,PromptForRoot
Yes

FreeBSD-4-x86,RequireRoot
No

FreeBSD-4-x86,RootInstallDir
/usr/local/<%ShortAppName%>

FreeBSD-x86,Active
No

FreeBSD-x86,DefaultDirectoryPermission
0755

FreeBSD-x86,DefaultFilePermission
0755

FreeBSD-x86,Executable
<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>

FreeBSD-x86,FallBackToConsole
Yes

FreeBSD-x86,InstallDir
<%Home%>/<%ShortAppName%>

FreeBSD-x86,InstallMode
Standard

FreeBSD-x86,InstallType
Typical

FreeBSD-x86,ProgramExecutable
{}

FreeBSD-x86,ProgramFolderAllUsers
No

FreeBSD-x86,ProgramFolderName
<%AppName%>

FreeBSD-x86,ProgramLicense
<%InstallDir%>/LICENSE.txt

FreeBSD-x86,ProgramName
{}

FreeBSD-x86,ProgramReadme
<%InstallDir%>/README.txt

FreeBSD-x86,PromptForRoot
Yes

FreeBSD-x86,RequireRoot
No

FreeBSD-x86,RootInstallDir
/usr/local/<%ShortAppName%>

HPUX-hppa,Active
No

HPUX-hppa,DefaultDirectoryPermission
0755

HPUX-hppa,DefaultFilePermission
0755

HPUX-hppa,Executable
<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>

HPUX-hppa,FallBackToConsole
Yes

HPUX-hppa,InstallDir
<%Home%>/<%ShortAppName%>

HPUX-hppa,InstallMode
Standard

HPUX-hppa,InstallType
Typical

HPUX-hppa,ProgramExecutable
{}

HPUX-hppa,ProgramFolderAllUsers
No

HPUX-hppa,ProgramFolderName
<%AppName%>

HPUX-hppa,ProgramLicense
<%InstallDir%>/LICENSE.txt

HPUX-hppa,ProgramName
{}

HPUX-hppa,ProgramReadme
<%InstallDir%>/README.txt

HPUX-hppa,PromptForRoot
Yes

HPUX-hppa,RequireRoot
No

HPUX-hppa,RootInstallDir
/usr/local/<%ShortAppName%>

Linux-x86,Active
No

Linux-x86,DefaultDirectoryPermission
0755

Linux-x86,DefaultFilePermission
0755

Linux-x86,Executable
<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>

Linux-x86,FallBackToConsole
Yes

Linux-x86,InstallDir
<%Home%>/<%ShortAppName%>

Linux-x86,InstallMode
Standard

Linux-x86,InstallType
Typical

Linux-x86,ProgramExecutable
{}

Linux-x86,ProgramFolderAllUsers
No

Linux-x86,ProgramFolderName
<%AppName%>

Linux-x86,ProgramLicense
<%InstallDir%>/LICENSE.txt

Linux-x86,ProgramName
{}

Linux-x86,ProgramReadme
<%InstallDir%>/README.txt

Linux-x86,PromptForRoot
Yes

Linux-x86,RequireRoot
No

Linux-x86,RootInstallDir
/usr/local/<%ShortAppName%>

Solaris-sparc,Active
No

Solaris-sparc,DefaultDirectoryPermission
0755

Solaris-sparc,DefaultFilePermission
0755

Solaris-sparc,Executable
<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>

Solaris-sparc,FallBackToConsole
Yes

Solaris-sparc,InstallDir
<%Home%>/<%ShortAppName%>

Solaris-sparc,InstallMode
Standard

Solaris-sparc,InstallType
Typical

Solaris-sparc,ProgramExecutable
{}

Solaris-sparc,ProgramFolderAllUsers
No

Solaris-sparc,ProgramFolderName
<%AppName%>

Solaris-sparc,ProgramLicense
<%InstallDir%>/LICENSE.txt

Solaris-sparc,ProgramName
{}

Solaris-sparc,ProgramReadme
<%InstallDir%>/README.txt

Solaris-sparc,PromptForRoot
Yes

Solaris-sparc,RequireRoot
No

Solaris-sparc,RootInstallDir
/usr/local/<%ShortAppName%>

TarArchive,Active
No

TarArchive,CompressionLevel
6

TarArchive,DefaultDirectoryPermission
0755

TarArchive,DefaultFilePermission
0755

TarArchive,Executable
<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>

TarArchive,FallBackToConsole
Yes

TarArchive,InstallDir
<%Home%>/<%ShortAppName%>

TarArchive,InstallMode
Standard

TarArchive,InstallType
Typical

TarArchive,OutputFileName
<%ShortAppName%>-<%Version%>.tar.gz

TarArchive,ProgramExecutable
{}

TarArchive,ProgramFolderAllUsers
No

TarArchive,ProgramFolderName
<%AppName%>

TarArchive,ProgramLicense
<%InstallDir%>/LICENSE.txt

TarArchive,ProgramName
{}

TarArchive,ProgramReadme
<%InstallDir%>/README.txt

TarArchive,PromptForRoot
Yes

TarArchive,RequireRoot
No

TarArchive,RootInstallDir
/usr/local/<%ShortAppName%>

TarArchive,VirtualTextMap
{<%InstallDir%> <%ShortAppName%>}

Windows,Active
Yes

Windows,Executable
<%AppName%>-Setup<%Ext%>

Windows,IncludeTWAPI
No

Windows,InstallDir
<%PROGRAM_FILES%>/<%AppName%>

Windows,InstallMode
Standard

Windows,InstallType
Typical

Windows,ProgramExecutable
{}

Windows,ProgramFolderAllUsers
No

Windows,ProgramFolderName
<%AppName%>

Windows,ProgramLicense
<%InstallDir%>/LICENSE

Windows,ProgramName
{}

Windows,ProgramReadme
<%InstallDir%>/README.html

Windows,WindowsIcon
{Setup Blue Screen.ico}

ZipArchive,Active
No

ZipArchive,CompressionLevel
6

ZipArchive,DefaultDirectoryPermission
0755

ZipArchive,DefaultFilePermission
0755

ZipArchive,Executable
<%AppName%>-<%Version%>-<%Platform%>-Install<%Ext%>

ZipArchive,FallBackToConsole
Yes

ZipArchive,InstallDir
<%Home%>/<%ShortAppName%>

ZipArchive,InstallMode
Standard

ZipArchive,InstallType
Typical

ZipArchive,OutputFileName
<%ShortAppName%>-<%Version%>.zip

ZipArchive,ProgramExecutable
{}

ZipArchive,ProgramFolderAllUsers
No

ZipArchive,ProgramFolderName
<%AppName%>

ZipArchive,ProgramLicense
<%InstallDir%>/LICENSE.txt

ZipArchive,ProgramName
{}

ZipArchive,ProgramReadme
<%InstallDir%>/README.txt

ZipArchive,PromptForRoot
Yes

ZipArchive,RequireRoot
No

ZipArchive,RootInstallDir
/usr/local/<%ShortAppName%>

ZipArchive,VirtualTextMap
{<%InstallDir%> <%ShortAppName%>}

}
namespace eval ::InstallJammer::actions {}
namespace eval ::InstallJammer::conditions {}
proc ::InstallJammer::conditions::AskYesOrNo {obj} {
global info

if {$info(SilentMode)} {
debug "Ask Yes or No condition not valid in Silent mode."
debug "Skipping condition and returning $props(TrueValue)."
return $props(TrueValue)
}

$obj properties props

set id [$obj id]

if {$info(ConsoleMode)} {
debug "Using Console Ask Yes or No action in place of Ask Yes or No condition for console install."

$obj set Default     $props(DefaultButton)
$obj set Prompt      [::InstallJammer::GetText $id Message -subst 0]
$obj set VirtualText $props(ResultVirtualText)

set result [::InstallJammer::actions::ConsoleAskYesOrNo $obj]
return [string equal -nocase $result $props(TrueValue)]
}

set title   [::InstallJammer::GetText $id Title]
set message [::InstallJammer::GetText $id Message]

set args [list -type yesno -title $title -message $message]
lappend args -icon $props(Icon)
lappend args -default [string tolower $props(DefaultButton)]
lappend args -parent [::InstallJammer::TransientParent]

set result [eval ::InstallJammer::MessageBox $args]

if {[string length $props(ResultVirtualText)]} {
global info
set info($props(ResultVirtualText)) $result
}

return [string equal -nocase $result $props(TrueValue)]
}

proc ::InstallJammer::actions::ConsoleAskYesOrNo {obj} {
$obj properties props -subst 1

set prompt \n$props(Prompt)

if {$props(Default) eq "" || $props(Default) eq "None"} {
append prompt { [y/n]}
} elseif {$props(Default) eq "Yes"} {
append prompt { [n/Y]}
} else {
append prompt { [y/N]}
}

append prompt " "

while {1} {
puts -nonewline stdout [::InstallJammer::WrapText $prompt]
flush stdout

set ans [string trim [string tolower [gets stdin]]]

puts  stdout ""
flush stdout

if {$ans eq "" && $props(Default) ne "None"} {
set ans $props(Default)
break
}

if {$ans eq "n"} { set ans "no" }
if {$ans eq "y"} { set ans "yes" }

if {$ans eq "yes" || $ans eq "no"} { break }
}

if {$props(VirtualText) ne ""} {
set ::info($props(VirtualText)) $ans
}

return $ans
}

proc ::InstallJammer::actions::ConsoleMessage {obj} {
global conf

$obj properties props
set message [::InstallJammer::GetText [$obj id] Message]

if {$props(PaginateMessage)} {
set command [list ::more -allowquit $props(AllowQuit)]

if {$props(WrapText)} {
lappend command -width $conf(ConsoleWidth)
}
} else {
set command [list puts stdout]

if {$props(WrapText)} {
set message [::InstallJammer::WrapText $message]
}
}

eval $command [list $message]
}

proc ::InstallJammer::actions::ExecuteAction {obj} {
set id [$obj id]

$obj properties props -subst 1

if {$props(Action) eq ""} {
return -code error "Error in Execute Action: Action is empty"
}

set eval   $props(EvaluateConditions)
set action [::InstallJammer::ID $props(Action)]

if {![::InstallJammer::ObjExists $action]} {
return -code error "Error in Execute Action: Action \"$action\" does not exist"
}

if {![$action is action actiongroup]} {
return -code error "Error in Execute Action: \"$action\" is not an action or action group"
}

if {[$action is action]} {
::InstallJammer::ExecuteActions $action -parent $id -conditions $eval
return
}


set when "Before Action is Executed"
if {$eval && ![$action checkConditions $when]} {
debug "Skipping action group $id - [$id title] - conditions failed"
return
}

set when "Before Next Action is Executed"
while {1} {
::InstallJammer::ExecuteActions $action -parent $id -conditions $eval
if {!$eval || [$action checkConditions $when]} { break }
}
}

proc ::InstallJammer::actions::Exit {obj} {
global info

if {[$obj get ExitType] eq "Cancel"} {
set info(WizardCancelled) 1
}

foreach command [list ::Exit ::InstallJammer::exit ::exit] {
if {[::InstallJammer::CommandExists $command]} {
$command
}
}
}

proc ::InstallJammer::actions::ModifyWidget {obj} {
global conf
global info

variable hidden

set id     [$obj id]
set parent [$obj parent]

if {![$parent ispane]} {
set parent $info(CurrentPane)
}

$obj properties props

if {![string length $props(Widget)]} { return }

set allArgs   {}
set labelArgs {}

if {$props(Text) ne ""}  {
lappend labelArgs -text $props(Text)
}

if {$props(State) ne "" && $props(State) ne "hidden"} {
lappend allArgs -state $props(State)
}

set widgets [split $props(Widget) \;]

for {set i 0} {$i < [llength $widgets]} {incr i} {
set name [string trim [lindex $widgets $i]]
set name [::InstallJammer::ID $name]
set w [join $name ""]
set widget $w

set button 0
if {[lsearch -exact $conf(ButtonWidgets) $widget] > -1} {
set button 1
set w [string tolower [string map {Button ""} $widget]]
}

if {$button} {
set w [$info(Wizard) widget get $w]
} else {
set w [$parent widget get $widget]
}

if {$w eq ""} {
return -code error "bad widget \"$name\""
}

if {$props(Text) ne ""} {
::InstallJammer::SetVirtualText all $parent $widget $props(Text)
}

set class [winfo class $w]
if {$class eq "Frame" || $class eq "TFrame"} {
foreach child [winfo children $w] {
set class [winfo class $child]
if {$class eq "Label" || $class eq "TLabel"} {
eval [list $child configure] $labelArgs
}
eval [list $child configure] $allArgs
}
} else {
eval [list $w configure] $allArgs $labelArgs
}

if {$props(State) eq "hidden" && ![info exists hidden($w)]} {
set manager [winfo manager $w]
set options [$manager info $w]
set hidden($w) [concat $manager configure $w $options]
$manager forget $w
} elseif {$props(State) eq "normal" && [info exists hidden($w)]} {
eval $hidden($w)
unset hidden($w)
}
}

::InstallJammer::UpdateWidgets -buttons 1 -updateidletasks 1
}

proc ::InstallJammer::actions::MoveForward {obj} {
global info

set next [$info(Wizard) step next]

if {![string length $next]} {
debug "No more panes left to move forward... exiting"
::InstallJammer::actions::Exit $obj
} else {
debug "Moving forward to $next"
after 0 [list $info(Wizard) next 1]
}
}

proc ::InstallJammer::conditions::StringIsCondition {obj} {
$obj properties props

debug "Checking to see if $props(String) is $props(Operator)"

set string [::InstallJammer::SubstText $props(String)]

if {$props(Operator) eq "empty"} {
return [expr {[string trim $string] eq ""}]
} elseif {$props(Operator) eq "not empty"} {
return [expr {[string trim $string] ne ""}]
} else {
return [string is $props(Operator) -strict $string]
}
}

proc ::InstallJammer::actions::UninstallSelectedFiles {obj {force 0}} {
global conf
global info

if {[string is true -strict $info(Testing)]} { return }

set id     [$obj id]
set parent [$obj parent]

set info(Errors)                ""
set info(FileBeingUninstalled)  ""
set info(GroupBeingUninstalled) ""
set info(Status)                ""

::InstallAPI::SetUpdateWidgets -widgets  [::InstallJammer::FindUpdateWidgets {Status FileBeingUninstalled  GroupBeingUninstalled UninstallPercentComplete}]

if {!$force} {
set info(Status) "Preparing to uninstall..."

::InstallJammer::GetUninstallInfo

upvar #0 ::uninstall array

if {[info exists conf(AddToUninstall)]} {
foreach line $conf(AddToUninstall) {
lappend array([lindex $line 0]) [lrange $line 1 end]
}
}
} else {
upvar #0 ::leftovers array
}

set fileLen 0
if {[info exists array(:FILE)]} {
set fileLen [llength $array(:FILE)]
}

set dirLen 0
if {[info exists array(:DIR)]} {
set dirLen [llength $array(:DIR)]
}

set regLen 0
if {[info exists array(:REGISTRY)]} {
set regLen [llength $array(:REGISTRY)]
}

set conf(total) [expr $fileLen + $dirLen + $regLen]

set info(GroupBeingUninstalled) "files"
set info(Status) "<%FileBeingUninstalledText%>"

set checkRemove 0
if {[info exists conf(RemoveFromUninstall)]} {
set checkRemove 1
set pattern [join $conf(RemoveFromUninstall) |]
}

for {set i [expr $fileLen -1]} {$i >= 0} {incr i -1} {
set list [lindex $array(:FILE) $i]
set file [lindex $list 0]
set tail [file tail $file]

set info(FileBeingUninstalled) $tail
::InstallJammer::UpdateUninstallProgress

if {$checkRemove && [regexp $pattern $file]} {
if {$::verbose} {
debug "$file removed from uninstall by action."
}
continue
}

if {$::verbose} {
debug "Uninstalling file $file."
}

if {[catch {::InstallJammer::UninstallFile $file} error]} {
debug "Failed to delete $file."
lappend ::leftovers(:FILE) $list
append info(Errors) "$error\n"
}
}

if {$info(Errors) eq ""} {
set conf(UninstallRemoved) 1
::InstallJammer::UninstallFile $conf(uninstall)
}

set info(GroupBeingUninstalled) "directories"
::InstallJammer::UpdateWidgets -update 1

set p $::tcl_platform(platform)
set installdir [::InstallJammer::Normalize $info(InstallDir)]
foreach list [lsort -index 0 -decreasing $array(:DIR)] {
lassign $list dir forcedir

if {$checkRemove && [regexp $pattern $dir]} {
if {$::verbose} {
debug "$dir removed from uninstall by action."
}
continue
}

set forceDelete $force
if {$forcedir ne ""} {
set forceDelete 1
}

if {$forceDelete} {
set forcedir -force
}

set info(FileBeingUninstalled) [file tail $dir]
::InstallJammer::UpdateUninstallProgress

if {!$forceDelete && ![::InstallJammer::DirIsEmpty $dir]} {
if {[lindex [file split $dir] end] ne $info(Company)} {
lappend ::leftovers(:DIR) $list
append info(Errors) "[::InstallJammer::Normalize $dir $p] "
append info(Errors) "is not empty\n"
}

debug "Skipping non-empty directory $dir."

continue
}

if {$::verbose} {
if {$forceDelete} {
debug "Forcefully deleting directory $dir."
} else {
debug "Deleting directory $dir."
}
}

if {[catch {::InstallJammer::UninstallDirectory $dir $forcedir} err]} {
debug "Failed to delete directory $dir."
append info(Errors) "$err\n"
}
}

if {[info exists array(:ENV)]} {
set info(GroupBeingUninstalled) "environment variables"
::InstallJammer::UpdateWidgets -update 1

if {$conf(windows)} {
foreach list [lreverse $array(:ENV)] {
set conf(UpdateWindowsRegistry) 1

lassign $list var level
set key "<%REG_[string toupper $level]_ENV%>"
set key [::InstallJammer::SubstText $key]

if {[llength $list] == 3} {
set value [lindex $list 2]
debug "Restoring environment variable $var to $value"
catch { registry set $key $var $value expand_sz }
} else {
debug "Deleting environment variable $var."
catch { registry delete $key $var }
}
}
} else {
set ids $conf(UninstallIDs)

foreach list $array(:ENV) {
lappend levels [lindex $list 1]
}

set    pat {; # ADDED BY INSTALLER - DO NOT EDIT OR DELETE}
append pat { THIS COMMENT - ([A-Z0-9-]+) ([A-Z0-9-]+)}

foreach level [lsort -unique $levels] {
set files $conf([string toupper $level 0]RCFiles)

foreach file $files {
if {![file exists $file]} { continue }
if {[catch { read_file $file } contents]} { continue }

set lines {}
foreach line [split $contents \n] {
if {![regexp $pat $line -> appid instid]
|| [lsearch -exact $ids $instid] < 0} {
lappend lines $line
} else {
if {[lindex $lines end] eq ""} {
set lines [lreplace $lines end end]
}
}
}

if {![catch { open $file w } fp]} {
puts  $fp [join $lines \n]
close $fp
}
}
}
}
}

if {[info exists array(:PATH)]} {
set info(GroupBeingUninstalled) "environment variables"
::InstallJammer::UpdateWidgets -update 1

foreach list [lreverse $array(:PATH)] {
set conf(UpdateWindowsRegistry) 1

lassign $list var dirs level sep
if {$sep eq ""} { set sep \; }

set key   "<%REG_[string toupper $level]_ENV%>"
set key   [::InstallJammer::SubstText $key]
set path  [::installkit::Windows::GetKey $key $var]
set list  [split $path $sep]
set lower [split [string tolower $path] $sep]

set indexes {}
foreach dir [split $dirs $sep] {
set dir [::InstallJammer::Normalize $dir windows]
set chk [string tolower $dir]

eval lappend indexes [lsearch -exact -all $lower $chk]
}

if {[llength $indexes]} {
foreach x [lsort -integer -decreasing $indexes] {
set list [lreplace $list $x $x]
}

set path [join $list $sep]

registry set $key $var $path expand_sz
}
}
}

if {$conf(windows)} {
set info(GroupBeingUninstalled) "registry entries"
::InstallJammer::UpdateWidgets -update 1

set command ::InstallJammer::UninstallRegistryKey
for {set i [expr $regLen -1]} {$i >= 0} {incr i -1} {
set list [lindex $array(:REGISTRY) $i]
lassign $list key value
::InstallJammer::UpdateUninstallProgress

if {[catch {eval $command $list} error]} {
lappend ::leftovers(:REGISTRY) $list
append info(Errors) "Could not remove $list: $error\n"
}
}
} elseif {[info exists array(:XDGRESOURCE)]} {
set info(GroupBeingUninstalled) "shortcuts"
::InstallJammer::UpdateWidgets -update 1

if {[::InstallJammer::GetDesktopEnvironment] eq "Gnome"} {
set conf(RestartGnomePanel) 1
}

foreach list [lreverse $array(:XDGRESOURCE)] {
set which [lindex $list 0]
set files [lindex $list 1]
if {$which eq "desktop"} {
catch { eval exec xdg-desktop-icon uninstall --novendor $files }
} elseif {$which eq "menu"} {
set dirfiles  [list]
set deskfiles [list]
foreach file $files {
if {[string match "*.directory" $file]} {
lappend dirfiles $file
} else {
lappend deskfiles $file
}
}

lappend menuUninstall($dirfiles) $deskfiles
}
}

foreach {dirfiles deskfiles} [array get menuUninstall] {
set files [concat $dirfiles $deskfiles]
catch { eval exec xdg-desktop-menu uninstall --novendor $files } res
}
}

set script [::InstallJammer::TmpDir install-cleanup]

set fp [open $script w 0755]
puts $fp "#!/bin/sh\n"

if {[info exists array(:RPM)]} {
foreach list [lreverse $array(:RPM)] {
set db RPM
set package [lindex $list 0]
if {![file exists /tmp/.installjammer.rpm.$package]} {
puts $fp "rpm -e $package"
}
}
}

if {[info exists array(:DPKG)]} {
foreach list [lreverse $array(:DPKG)] {
set db DPKG
set package [lindex $list 0]
puts $fp "dpkg -P $package"
}
}

close $fp

if {[info exists db]} {
set info(FileBeingUninstalled)  "$db database entries"
set info(GroupBeingUninstalled) "package entries"
::InstallJammer::UpdateWidgets -update 1

if {!$info(UserIsRoot)} {
::InstallJammer::ExecAsRoot [list $script] -wait 1
} else {
catch { exec $script } error
}
}

::InstallJammer::CleanupInstallInfoDirs

set info(ErrorsOccurred) [expr {[string length $info(Errors)] > 0}]

::InstallAPI::SetUpdateWidgets -widgets {}

return 1
}


proc CreateWindow.UninstallDetails {wizard id} {
CreateWindow.CustomTextPane1 $wizard $id
}

proc CreateWindow.UninstallComplete {wizard id} {
CreateWindow.CustomBlankPane1 $wizard $id
}

proc CreateWindow.Uninstall {wizard id} {
CreateWindow.CustomBlankPane2 $wizard $id

set base [$id widget get ClientArea]

grid rowconfigure    $base 0 -weight 1
grid columnconfigure $base 0 -weight 1

set frame [frame $base.frame]
grid $frame -row 0 -column 0 -sticky new

grid rowconfigure    $frame 1 -weight 1
grid columnconfigure $frame 0 -weight 1

label $frame.file -anchor w
grid  $frame.file -row 0 -column 0 -sticky new
$id widget set FileValue -widget $frame.file

ttk::progressbar $frame.progress
grid $frame.progress -row 1 -column 0 -sticky ew
$id widget set ProgressValue -widget $frame.progress -type progress
}

proc CreateWindow.CustomTextPane1 {wizard id} {
CreateWindow.CustomBlankPane2 $wizard $id

set base [$id widget get ClientArea]

grid rowconfigure    $base 0 -weight 1
grid columnconfigure $base 0 -weight 1

frame $base.frame
grid  $base.frame -row 0 -column 0 -sticky news

grid rowconfigure    $base.frame 0 -weight 1
grid columnconfigure $base.frame 0 -weight 1

if {![$id get TextFont font]} { set font TkTextFont }

text $base.frame.text  -bg white -font $font -wrap word -highlightthickness 0  -yscrollcommand "$base.frame.vs set"  -xscrollcommand "$base.frame.hs set"
grid $base.frame.text -row 0 -column 0 -sticky news
$id widget set Text -widget $base.frame.text

ttk::scrollbar $base.frame.vs -command "$base.frame.text yview"
grid $base.frame.vs -row 0 -column 1 -sticky ns

ttk::scrollbar $base.frame.hs -command "$base.frame.text xview"  -orient horizontal
grid $base.frame.hs -row 1 -column 0 -sticky ew
}

proc CreateWindow.CustomBlankPane2 {wizard id} {
set base  [$wizard widget get $id]
set frame $base.titleframe

grid rowconfigure    $base 3 -weight 1
grid columnconfigure $base 0 -weight 1

frame $frame -bd 0 -relief flat -background white
grid  $frame -row 0 -column 0 -sticky nsew

grid rowconfigure    $frame 1 -weight 1
grid columnconfigure $frame 0 -weight 1

Label $frame.title -background white -anchor nw -justify left -autowrap 1  -font TkCaptionFont -textvariable [$wizard variable $id -text1]
grid $frame.title -row 0 -column 0 -sticky new -padx 5 -pady 5
$id widget set Title -widget $frame.title

Label $frame.subtitle -background white -anchor nw -autowrap 1  -justify left -textvariable [$wizard variable $id -text2]
grid $frame.subtitle -row 1 -column 0 -sticky new -padx [list 20 5]
$id widget set Subtitle -widget $frame.subtitle

label $frame.icon -borderwidth 0 -background white -anchor c
grid  $frame.icon -row 0 -column 1 -rowspan 2
$id widget set Icon -widget $frame.icon -type image

Separator $base.separator -relief groove -orient horizontal
grid $base.separator -row 1 -column 0 -sticky ew

Label $base.caption -anchor nw -justify left -autowrap 1  -textvariable [$wizard variable $id -text3]
grid $base.caption -row 2 -sticky nsew -padx 8 -pady [list 8 4]
$id widget set Caption -widget $base.caption

frame $base.clientarea
grid  $base.clientarea -row 3 -sticky nsew -padx 8 -pady 4
$id widget set ClientArea -widget $base.clientarea -type frame

Label $base.message -anchor nw -justify left -autowrap 1  -textvariable [$wizard variable $id -text4]
grid $base.message -row 4 -sticky nsew -padx 8 -pady [list 4 8]
$id widget set Message -widget $base.message
}

proc CreateWindow.CustomBlankPane1 {wizard id} {
set base [$wizard widget get $id]

grid rowconfigure    $base 1 -weight 1
grid columnconfigure $base 1 -weight 1

label $base.image -borderwidth 0 -background white
grid  $base.image -row 0 -column 0 -rowspan 2 -sticky nw
$id widget set Image -type image -widget $base.image

Label $base.title -height 3 -bg white -font TkCaptionFont  -autowrap 1 -anchor nw -justify left
grid $base.title -row 0 -column 1 -sticky ew -padx 20 -pady [list 20 10]
$id widget set Caption -type text -widget $base.title

Label $base.message -bg white -autowrap 1 -anchor nw -justify left
grid  $base.message -row 1 -column 1 -sticky news -padx 20
$id widget set Message -type text -widget $base.message

Separator $base.sep -orient horizontal
grid $base.sep -row 2 -column 0 -columnspan 2 -sticky ew
}


proc ThemeInit {} {
global info

Wizard $info(Wizard)  -raisecommand  [list RaiseStep %W %S]  -width [::InstallJammer::SubstText "<%WizardWidth%>"]  -height [::InstallJammer::SubstText "<%WizardHeight%>"]  -title [::InstallJammer::SubstText "<%UninstallTitleText%>"]  -separatortext [::InstallJammer::SubstText "<%SeparatorText%>"]

bind $info(Wizard) <<WizardFinish>> [list ::InstallJammer::exit 1]

if {$::tcl_platform(platform) eq "unix"} {
$info(Wizard) configure -bg [style configure . -background]
}
}


if {[info exists ::InstallJammer]} { return }

proc ::InstallJammer::UpdateUninstallProgress {} {
global conf
global info

incr0 conf(num)
set pct [expr ($conf(num) * 100) / $conf(total)]
set info(UninstallPercentComplete) $pct

::InstallJammer::UpdateSelectedWidgets
update
}

proc ::InstallJammer::GetUninstallInfo {} {
global conf
global info

set dir   $::installkit::root
set files [glob -nocomplain -dir $dir *.info]
set conf(LogsInUninstaller) 1

if {![llength $files]} {
set conf(LogsInUninstaller) 0
set dir   [::InstallJammer::GetInstallInfoDir]
set files [glob -nocomplain -dir $dir *.info]
}

set uninstaller $info(Uninstaller)

if {$conf(windows)} {
set uninstaller [string tolower [Normalize $uninstaller]]
}

set conf(uninstall)        $uninstaller
set conf(UninstallRemoved) 0

set sort [list]
foreach file $files {
if {[file exists [file root $file].dead]} { continue }

set id [file root [file tail $file]]
::InstallJammer::ReadPropertyFile $file tmp

if {![info exists tmp(Uninstaller)]} {
lappend sort [list $tmp(Date) $id]
continue
}

set tmpuninstaller $tmp(Uninstaller)
if {$conf(windows)} {
set tmpuninstaller [string tolower [Normalize $tmpuninstaller]]
}

if {$uninstaller eq $tmpuninstaller} {
lappend sort [list $tmp(Date) $id]
}
}

set data ""
foreach list [lsort -integer -index 0 $sort] {
set id [lindex $list 1]

lappend conf(UninstallIDs) $id

set file [file join $dir $id.log]
if {[file exists $file]} {
append data [read_file $file]
}
}

foreach line [split [string trim $data] \n] {
if {[info exists done($line)]} { continue }
set done($line) 1
lappend ::uninstall([lindex $line 0]) [lrange $line 1 end]
}
}

proc ::InstallJammer::CleanupInstallInfoDirs {} {
global info
global conf

if {[string is true -strict $info(Testing)]} { return }

if {![info exists conf(UninstallIDs)]} { return }
if {[file exists $info(Uninstaller)]
&& ![file writable $info(Uninstaller)]} { return }
if {[file exists $info(InstallInfoDir)]
&& ![file writable $info(InstallInfoDir)]} { return }

debug "Cleaning up install registry..."

set info(Status) "Cleaning up install registry..."
::InstallJammer::UpdateWidgets -update 1

if {!$conf(UninstallRemoved)} {

debug "Uninstaller was not removed."

if {$conf(LogsInUninstaller)} {
debug "Found logs in uninstaller.  Moving them  to new uninstaller."

foreach id $conf(UninstallIDs) {
set file [file join $::installkit::root $id.info]

if {![info exists found]} {
set found $id
file copy -force $file [::InstallJammer::TmpDir]
} else {
close [open [::InstallJammer::TmpDir $id.dead] w]
}
}

set id $found
} else {
debug "Storing install IDs in uninstaller."

foreach id $conf(UninstallIDs) {
set file [file join $info(InstallInfoDir) $id.info]
if {[file exists $file]} {
file copy -force $file [::InstallJammer::TmpDir]
break
}
}
}

set fp [open [::InstallJammer::TmpDir $id.log] w]

foreach var [array names ::leftovers] {
foreach list [lreverse $::leftovers($var)] {
puts $fp [concat $var $list]
}
}

close $fp

::InstallJammer::StoreLogsInUninstall
}

foreach id $conf(UninstallIDs) {
foreach ext {.log .ver .info} {
set file [file join $info(InstallInfoDir) $id$ext]
if {[file exists $file]} {
debug "Deleting $file"
file delete $file
}
}
}

if {[::InstallJammer::DirIsEmpty $info(InstallInfoDir)]} {
debug "Deleting empty registry directory $info(InstallInfoDir)."
catch { file delete -force $info(InstallInfoDir) }
} else {
debug "Will not delete non-empty directory $info(InstallInfoDir)."
}
}

proc ::InstallJammer::exit { {prompt 0} } {
global conf
global info

if {$info(WizardStarted) && !$info(WizardCancelled)} {
::InstallJammer::ExecuteActions "Finish Actions"
} else {
::InstallJammer::ExecuteActions "Cancel Actions"
}

::InstallJammer::CommonExit

if {$conf(windows) && !$conf(windows98)} {

set tmp [file dirname [::InstallJammer::TmpDir]]
set bat [file join $tmp [pid]cleanup.bat]
set vbs [file join $tmp [pid]sleep.vbs]

set fp [open $vbs w]
puts $fp "WScript.Sleep(3000)"
close $fp

set fp [open $bat w]
puts $fp "start /w wscript [file tail $vbs]"
puts $fp "rmdir /S /Q \"[::InstallJammer::TmpDir]\""
puts $fp "del [file tail $bat] [file tail $vbs]"
close $fp
cd $tmp
exec $bat &
}

::exit 0
}

proc ::InstallJammer::UninstallMain {} {
global conf
global info

if {$::tcl_platform(platform) eq "unix"} {
if {$info(RequireRoot) && !$info(UserIsRoot)} {
::InstallJammer::Message -title "Root Required" -message  "You must be root to run uninstall this application."
exit 1
}
}

if {$info(SilentMode)} {
if {$conf(windows)} {
after 1000
}

::InstallJammer::ExecuteActions "Startup Actions"
::InstallJammer::ExecuteActions Silent
} elseif {$info(ConsoleMode)} {
::InstallJammer::ExecuteActions "Startup Actions"
::InstallJammer::ExecuteActions Console
} else {
::InstallJammer::ExecuteActions "Startup Actions"

set info(WizardStarted) 1
::InstallJammer::CenterWindow $info(Wizard)
::InstallJammer::Wizard next
}
}

proc ::InstallJammer::InitUninstall {} {
global conf
global info
global argv

catch { wm withdraw . }

SourceCachedFile common.tcl

unset -nocomplain info(Temp)
unset -nocomplain info(TempRoot)

set info(RunningInstaller)   0
set info(RunningUninstaller) 1

::InstallJammer::CommonInit

if {$conf(windows)} {
set uninstall $conf(exe)
set test [file join [file dirname $uninstall] .uninstall]
if {![file exists $test]} {
set new [::InstallJammer::TmpDir [file tail $uninstall]]
file copy $uninstall $new
close [open [::InstallJammer::TmpDir .uninstall] w]
eval exec [list $new] $argv &
::exit
}

set info(Temp) [file dirname $uninstall]
cd $info(Temp)
}

::InstallJammer::ReadMessageCatalog messages

set conf(mode)  "UninstallMode"
set conf(stop)  [::InstallJammer::TmpDir .stop]
set conf(pause) [::InstallJammer::TmpDir .pause]

set conf(modes) "Standard Silent"
if {!$conf(windows)} { lappend conf(modes) "Console" }

array set info {
ErrorsOccurred            0
RunningUninstaller        1
FileBeingUninstalled      ""
GroupBeingUninstalled     ""
UninstallPercentComplete  0
}

set info(Status) "Preparing to uninstall..."

SafeArraySet info {
FileBeingUninstalledText  "Removing <%FileBeingUninstalled%>"
GroupBeingUninstalledText "Removing <%GroupBeingUninstalled%>"
}

::InstallJammer::ParseCommandLineArguments $::argv

::InstallJammer::LoadTwapi

if {$info(GuiMode)} {
SourceCachedFile gui.tcl
InitGui
}

::InstallJammer::ConfigureBidiFonts
}

::InstallJammer::InitUninstall




proc RaiseStep { wizard id } {
set widget [$id widget get Caption]
if {$widget ne ""} {
if {![string length [::InstallJammer::GetText $id Caption]]} {
grid remove $widget
} else {
grid $widget
}
}

set widget [$id widget get Message]
if {$widget ne ""} {
if {![string length [::InstallJammer::GetText $id Message]]} {
grid remove $widget
} else {
grid $widget
}
}

set widget [$id widget get ClientArea]
if {$widget ne ""} {
grid configure $wizard.buttons -pady {18 5}
} else {
grid configure $wizard.buttons -pady 5
}
}

InstallType ::Common
InstallType ::Standard
InstallComponent C44ED22A-F9ED-46FE-B276-C45D197EBD67 -setup Uninstall -type pane -title Uninstall -component Uninstall -active Yes -parent Standard
InstallComponent E9C6B194-416D-44C0-BDF8-DFB7CB9055CB -setup Uninstall -type action -title {Modify Widget} -component ModifyWidget -active Yes -parent C44ED22A-F9ED-46FE-B276-C45D197EBD67
InstallComponent 3CBBB764-3C18-4E64-B7B6-28AADD8C0599 -setup Uninstall -type action -title {Execute Action} -component ExecuteAction -active Yes -parent C44ED22A-F9ED-46FE-B276-C45D197EBD67
InstallComponent 7BCBB06C-6BB2-4F43-BDFA-0683BA805A0E -setup Uninstall -type action -title {Move Forward} -component MoveForward -active Yes -parent C44ED22A-F9ED-46FE-B276-C45D197EBD67
InstallComponent 761101CD-B1D6-480A-9B3C-EAC7879A5576 -setup Uninstall -type pane -conditions EDCABD7B-7770-4EF5-A2C9-B976C9067A3F -title {Uninstall Details} -component UninstallDetails -command insert -active Yes -parent Standard
Condition EDCABD7B-7770-4EF5-A2C9-B976C9067A3F -active Yes -parent 761101CD-B1D6-480A-9B3C-EAC7879A5576 -title {String Is Condition} -component StringIsCondition -TreeObject::id EDCABD7B-7770-4EF5-A2C9-B976C9067A3F
InstallComponent FEF5CE97-BF58-472B-9CEC-3AADF9AC1A54 -setup Uninstall -type pane -title {Uninstall Complete} -component UninstallComplete -active Yes -parent Standard
InstallType ::Default
InstallType ::Console
InstallComponent 04EBA609-5B24-46C1-A727-6D4BCEE47532 -setup Uninstall -type action -title {Console Ask Yes Or No} -component ConsoleAskYesOrNo -active Yes -parent Console
InstallComponent 47EC0F76-8D70-4BF5-B8BD-809F0F2A2865 -setup Uninstall -type action -conditions 83025D41-BC90-4E38-B864-42839441C553 -title Exit -component Exit -command insert -active Yes -parent Console
Condition 83025D41-BC90-4E38-B864-42839441C553 -active Yes -parent 47EC0F76-8D70-4BF5-B8BD-809F0F2A2865 -title {String Is Condition} -component StringIsCondition -TreeObject::id 83025D41-BC90-4E38-B864-42839441C553
InstallComponent 16BB9D62-382F-4718-A4FF-3324824370A9 -setup Uninstall -type action -title {Console Message} -component ConsoleMessage -active Yes -parent Console
InstallComponent B07B6C31-8A4D-4A77-AF27-150B2E6ADAAC -setup Uninstall -type action -title {Execute Action} -component ExecuteAction -active Yes -parent Console
InstallComponent 890E2588-9587-41B2-AB58-F912364F99BE -setup Uninstall -type action -title {Console Message} -component ConsoleMessage -active Yes -parent Console
InstallComponent A501DBDD-0DF3-4C82-8907-5166A0747D9F -setup Uninstall -type action -title Exit -component Exit -active Yes -parent Console
InstallType ::Silent
InstallComponent AD9342B8-7264-4430-8193-E8ECDA0A608D -setup Uninstall -type action -title {Execute Action} -component ExecuteAction -active Yes -parent Silent
InstallComponent 9CF70E2B-31E0-4FF5-B918-6E882DD6322F -setup Uninstall -type action -title Exit -component Exit -active Yes -parent Silent
InstallType ::ActionGroups
InstallComponent 3956C52B-8918-4C01-86A6-293452079DD7 -setup Uninstall -type actiongroup -title {Setup Actions} -alias {Setup Actions} -active Yes -parent ActionGroups
InstallComponent 41EC040C-5F66-4A2F-8CED-91D603432622 -setup Uninstall -type actiongroup -title {Startup Actions} -alias {Startup Actions} -active Yes -parent ActionGroups
InstallComponent BB26CF22-4AA5-4DE7-9A7F-4C74579A1B58 -setup Uninstall -type action -conditions {509E17E9-D0B6-401B-A111-35B43A1768CF 5A9AB28A-139C-406A-8F53-94EDA701192B} -title Exit -component Exit -command insert -active Yes -parent 41EC040C-5F66-4A2F-8CED-91D603432622
Condition 509E17E9-D0B6-401B-A111-35B43A1768CF -active Yes -parent BB26CF22-4AA5-4DE7-9A7F-4C74579A1B58 -title {String Is Condition} -component StringIsCondition -TreeObject::id 509E17E9-D0B6-401B-A111-35B43A1768CF
Condition 5A9AB28A-139C-406A-8F53-94EDA701192B -active Yes -parent BB26CF22-4AA5-4DE7-9A7F-4C74579A1B58 -title {Ask Yes or No} -component AskYesOrNo -TreeObject::id 5A9AB28A-139C-406A-8F53-94EDA701192B
InstallComponent 8DE28FB2-3277-43CD-9DDF-1CF83CFB0178 -setup Uninstall -type actiongroup -title {Uninstall Actions} -alias {Uninstall Actions} -active Yes -parent ActionGroups
InstallComponent 4160048A-9C4E-43BA-A8F4-3D45CAE7A787 -setup Uninstall -type action -title {Uninstall Selected Files} -component UninstallSelectedFiles -active Yes -parent 8DE28FB2-3277-43CD-9DDF-1CF83CFB0178
InstallComponent 5F23D154-6797-499A-AEE4-E14BE6DB46B4 -setup Uninstall -type actiongroup -title {Finish Actions} -alias {Finish Actions} -active Yes -parent ActionGroups
InstallComponent 902A4E10-4E5B-40CA-88C2-C5BF8FFBAC91 -setup Uninstall -type actiongroup -title {Cancel Actions} -alias {Cancel Actions} -active Yes -parent ActionGroups


proc ::ThemeMain {} {
::InstallJammer::UninstallMain
}

if {![info exists ::InstallJammer]} { ThemeMain }
} components.tcl {namespace eval ::InstallJammer::actions {}
namespace eval ::InstallJammer::conditions {}
proc ::InstallJammer::actions::AddDirectoryToPath {obj} {
global conf

$obj properties props -subst 1

set var $props(Variable)
set sep $props(Separator)

if {$conf(windows)} {
set conf(UpdateWindowsRegistry) 1

set key   "<%REG_[string toupper $props(Level)]_ENV%>"
set key   [::InstallJammer::SubstText $key]
set path  [::installkit::Windows::GetKey $key $var]
set list  [split $path $sep]
set check [split [string tolower $path] $sep]
} else {
set list  {}
set path  $::env(PATH)
set check [split $path $sep]
}

set added {}
foreach dir [split $props(Directory) \;] {
if {$props(NormalizePaths)} {
set dir [::InstallJammer::Normalize $dir platform]
}

set chk $dir
if {$conf(windows)} { set chk [string tolower $dir] }

if {[lsearch -exact $check $chk] < 0} {
lappend added $dir
lappend check $chk

if {$props(Location) eq "end"} {
lappend list $dir
} else {
set list [linsert $list 0 $dir]
}
}
}

if {[llength $added]} {
if {$conf(windows)} {
registry set $key $var [join $list $sep] expand_sz

if {$props(AddToUninstall)} {
::InstallJammer::InstallLog [list :PATH $var  [join $added $sep] $props(Level) $sep]
}
} else {
if {$props(Location) eq "end"} {
$obj set Value "\$$var$sep[join $list $sep]"
} else {
$obj set Value "[join $list $sep]${sep}\$$var"
}

::InstallJammer::actions::AddEnvironmentVariable $obj
}
}
}

proc ::InstallJammer::actions::AddEnvironmentVariable {obj} {
global conf
global info

$obj properties props -subst 1

if {$props(Variable) eq ""} {
return -code error "Error in Add Environment Variable: Variable is empty"
}

set val $props(Value)
set var $props(Variable)

if {$conf(windows)} {
set conf(UpdateWindowsRegistry) 1

set lvl $props(Level)
set key "<%REG_[string toupper $props(Level)]_ENV%>"
set key [::InstallJammer::SubstText $key]

if {$props(RestoreOnUninstall)} {
if {[catch { registry get $key $var } oldval]} {
::InstallJammer::InstallLog [list :ENV $var $lvl]
} else {
::InstallJammer::InstallLog [list :ENV $var $lvl $oldval]
}
} elseif {$props(AddToUninstall)} {
::InstallJammer::InstallLog [list :ENV $var $lvl]
}

registry set $key $props(Variable) $props(Value) expand_sz
} else {
set files $conf([string toupper $props(Level) 0]RCFiles)

set line "\; # ADDED BY INSTALLER - DO NOT EDIT OR DELETE THIS COMMENT - $info(ApplicationID) $info(InstallID)"

set found 0
foreach file $files {
if {[file exists $file] && ![catch { open $file a+ } fp]} {
set found 1

puts $fp ""

if {[string match "*csh*" $file]} {
puts -nonewline $fp "setenv $var $val"
} else {
puts -nonewline $fp "$var=$val\;export $var"
}

puts $fp $line

close $fp
}
}

if {$found && $props(AddToUninstall)} {
::InstallJammer::InstallLog [list :ENV $var $props(Level)]
}
}
}

proc ::InstallJammer::actions::AddWindowsUninstallEntry {obj} {
global conf

if {!$conf(windows)} { return }

set properties {
UninstallString
QuietUninstallString
DisplayName
DisplayIcon
DisplayVersion
Comments
Contact
HelpLink
HelpTelephone
InstallDate
InstallLocation
InstallSource
Publisher
Readme
URLInfoAbout
URLUpdateInfo
}

eval $obj properties props -subst 1 [lsort $properties]

set appkey [::InstallJammer::SubstText [$obj get RegistryKeyName]]
set key {HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion}
append key "\\Uninstall\\$appkey"

if {[catch { registry set $key NoModify 1 dword } error]} {
set key {HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion}
append key "\\Uninstall\\$appkey"

registry set $key NoModify 1 dword
}

registry set $key NoRepair 1 dword

foreach var [array names props] {
registry set $key $var $props($var)
}

::InstallJammer::LogRegistry $key
}

proc ::InstallJammer::conditions::AskYesOrNo {obj} {
global info

if {$info(SilentMode)} {
debug "Ask Yes or No condition not valid in Silent mode."
debug "Skipping condition and returning $props(TrueValue)."
return $props(TrueValue)
}

$obj properties props

set id [$obj id]

if {$info(ConsoleMode)} {
debug "Using Console Ask Yes or No action in place of Ask Yes or No condition for console install."

$obj set Default     $props(DefaultButton)
$obj set Prompt      [::InstallJammer::GetText $id Message -subst 0]
$obj set VirtualText $props(ResultVirtualText)

set result [::InstallJammer::actions::ConsoleAskYesOrNo $obj]
return [string equal -nocase $result $props(TrueValue)]
}

set title   [::InstallJammer::GetText $id Title]
set message [::InstallJammer::GetText $id Message]

set args [list -type yesno -title $title -message $message]
lappend args -icon $props(Icon)
lappend args -default [string tolower $props(DefaultButton)]
lappend args -parent [::InstallJammer::TransientParent]

set result [eval ::InstallJammer::MessageBox $args]

if {[string length $props(ResultVirtualText)]} {
global info
set info($props(ResultVirtualText)) $result
}

return [string equal -nocase $result $props(TrueValue)]
}

proc ::InstallJammer::actions::CheckForPreviousInstall {obj} {
::InstallJammer::ReadPreviousInstall
}

proc ::InstallJammer::actions::ConsoleAskYesOrNo {obj} {
$obj properties props -subst 1

set prompt \n$props(Prompt)

if {$props(Default) eq "" || $props(Default) eq "None"} {
append prompt { [y/n]}
} elseif {$props(Default) eq "Yes"} {
append prompt { [n/Y]}
} else {
append prompt { [y/N]}
}

append prompt " "

while {1} {
puts -nonewline stdout [::InstallJammer::WrapText $prompt]
flush stdout

set ans [string trim [string tolower [gets stdin]]]

puts  stdout ""
flush stdout

if {$ans eq "" && $props(Default) ne "None"} {
set ans $props(Default)
break
}

if {$ans eq "n"} { set ans "no" }
if {$ans eq "y"} { set ans "yes" }

if {$ans eq "yes" || $ans eq "no"} { break }
}

if {$props(VirtualText) ne ""} {
set ::info($props(VirtualText)) $ans
}

return $ans
}

proc ::InstallJammer::actions::ConsoleGetUserInput {obj} {
$obj properties props -subst 1

fconfigure stdin -buffering line

set prompt \n$props(Prompt)

set virtual "<%$props(VirtualText)%>"
set default [::InstallJammer::SubstText $virtual]
if {$default ne $virtual} { append prompt " \[$default\]" }

append prompt " "

while {1} {
puts -nonewline stdout [::InstallJammer::WrapText $prompt]
flush stdout

if {!$props(EchoInput)} {
catch { exec stty -echo }
}

gets stdin result

if {!$props(EchoInput)} {
catch { exec stty echo }
}

puts  stdout ""
flush stdout

if {$props(RequireResponse) && [string trim $result] eq ""} { continue }
break
}

if {$props(TrimResult)} { set result [string trim $result] }

if {$default ne $virtual && $result eq ""} {
set result $default
}

if {$result ne ""} {
set ::info($props(VirtualText)) $result
}
}

proc ::InstallJammer::actions::ConsoleMessage {obj} {
global conf

$obj properties props
set message [::InstallJammer::GetText [$obj id] Message]

if {$props(PaginateMessage)} {
set command [list ::more -allowquit $props(AllowQuit)]

if {$props(WrapText)} {
lappend command -width $conf(ConsoleWidth)
}
} else {
set command [list puts stdout]

if {$props(WrapText)} {
set message [::InstallJammer::WrapText $message]
}
}

eval $command [list $message]
}

proc ::InstallJammer::actions::CreateInstallPanes {obj} {
global conf
global info

set parent      [$obj parent]
set progressbar [$parent widget get ProgressBar]
if {![string length $progressbar]} { set progressbar noop }

set children [$info($conf(mode)) children recursive]
set total    [llength $children]
foreach id $children {
$progressbar configure -value [expr {[incr0 i] * 100 / $total}]
update
if {[$id ispane]} {
$info(Wizard) createstep $id
}
}
}

proc ::InstallJammer::actions::ExecuteAction {obj} {
set id [$obj id]

$obj properties props -subst 1

if {$props(Action) eq ""} {
return -code error "Error in Execute Action: Action is empty"
}

set eval   $props(EvaluateConditions)
set action [::InstallJammer::ID $props(Action)]

if {![::InstallJammer::ObjExists $action]} {
return -code error "Error in Execute Action: Action \"$action\" does not exist"
}

if {![$action is action actiongroup]} {
return -code error "Error in Execute Action: \"$action\" is not an action or action group"
}

if {[$action is action]} {
::InstallJammer::ExecuteActions $action -parent $id -conditions $eval
return
}


set when "Before Action is Executed"
if {$eval && ![$action checkConditions $when]} {
debug "Skipping action group $id - [$id title] - conditions failed"
return
}

set when "Before Next Action is Executed"
while {1} {
::InstallJammer::ExecuteActions $action -parent $id -conditions $eval
if {!$eval || [$action checkConditions $when]} { break }
}
}

proc ::InstallJammer::actions::ExecuteExternalProgram {obj} {
global conf
global info

set id [$obj id]

$obj properties props -subst {ConsoleTitle}

set resultVarName [::InstallJammer::SubstText $props(ResultVirtualText)]
set statusVarName [::InstallJammer::SubstText $props(StatusVirtualText)]

set resultVar ::conf(ExternalResult)
if {[string length $resultVarName]} { set resultVar ::info($resultVarName) }

set statusVar ::conf(ExternalStatus)
if {[string length $statusVarName]} { set statusVar ::info($statusVarName) }

set $statusVar 0
set $resultVar ""

::InstallJammer::UpdateWidgets -update 1

set workdir [::InstallJammer::SubstText $props(WorkingDirectory)]
if {$workdir ne "" && [file exists $workdir]} {
debug "Changing to working directory $workdir"
set pwd [pwd]
cd $workdir
}

set cmdline $props(ProgramCommandLine)

if {$props(ShowProgressiveOutput)} {
debug "Executing with progressive output"

set proc   ::ReadOutput${id}
set watch  $props(WatchProgressiveOutput)
set widget [join $props(ProgressiveOutputWidget) ""]
set widget [[$obj parent] widget get $widget]

if {!$info(GuiMode) || ![winfo exists $widget]
|| [winfo class $widget] ne "Text"} {
set widget ""
} else {
$widget delete 1.0 end

$widget configure -maxundo 1
}

if {$watch} {
debug "Watching progressive output for special syntax."
}

proc ::CloseProgressive { fp statusVar resultVar } {
fconfigure $fp -blocking 1
if {[catch { close $fp } error]} {
if {[lindex $::errorCode 0] eq "CHILDSTATUS"} {
set $statusVar [lindex $::errorCode 2]
} else {
set $statusVar 1
}

set $resultVar $error
} else {
set $statusVar 0
}
}

proc $proc { fp statusVar resultVar widget watch } {
if {[llength $watch]} {
gets $fp data

if {[fblocked $fp]} { return }

if {$::conf(windows)} {
set data [string map [list \r ""] $data]
}

if {[eof $fp]} {
CloseProgressive $fp $statusVar $resultVar
return
}

lassign $watch pattern var
set matches [regexp -inline -- $pattern $data]
set len [llength $matches]
if {$len == 1 || $len == 2} {
set val [lindex $matches end]
} elseif {$len == 3} {
set var [lindex $matches 1]
set val [lindex $matches 2]
}

if {$len && $var ne ""} {
set ::info($var) [::InstallJammer::SubstText $val]
::InstallJammer::UpdateWidgets -update 1
return
}

append data \n
} else {
set data [read $fp]

if {$::conf(windows)} {
set data [string map [list \r ""] $data]
}

if {[eof $fp]} {
CloseProgressive $fp $statusVar $resultVar
return
}
}

set data [::InstallJammer::SubstText $data]

append $resultVar $data

if {$::info(ConsoleMode)} {
puts -nonewline stdout $data
flush stdout
} elseif {$widget ne ""} {
set auto [expr {[lindex [$widget yview] 1] == 1}]

$widget configure -state normal
$widget insert end $data
$widget configure -state disabled

if {$auto} { $widget yview moveto 1.0 }

update idletasks
}
}

set cmd [::InstallJammer::SubstForPipe $cmdline]

if {$props(IncludeStderr)} { lappend cmd "2>@1" }

debug "Executing Command Line: $cmd"

if {[catch { open "|$cmd" } fp]} {
set $statusVar 1
set $resultVar $fp
if {[lindex $::errorCode 0] eq "CHILDSTATUS"} {
set $statusVar [lindex $::errorCode 2]
}

return -code error [set $resultVar]
} else {
if {$watch} {
debug "Watching progressive output for matches"
set watch [list $props(WatchRegularExpression)  $props(WatchVirtualText)]
} else {
set watch ""
}

fconfigure $fp -buffering none -blocking 0 -translation lf
fileevent $fp readable  [list $proc $fp $statusVar $resultVar $widget $watch]

if {$props(WaitForProgram)} { vwait $statusVar }
}
} else {
set cmd [::InstallJammer::SubstForPipe $cmdline]

if {$props(ExecuteInConsole)} {
debug "Executing in console"

if {$conf(windows)} {
set cmd [linsert $cmd 0 $::env(COMSPEC) /c]
} else {
set title Console
if {$props(ConsoleTitle) ne ""} {
set title $props(ConsoleTitle)
}

set t       -T
set konsole 0
set desktop [::InstallJammer::GetDesktopEnvironment]

if {$desktop eq "KDE" && [auto_execok konsole] ne ""} {
set konsole 1
set term konsole
} elseif {$desktop eq "Gnome"
&& [auto_execok gnome-terminal] ne ""} {
set t -t
set term gnome-terminal
} else {
set term xterm
}

if {[auto_execok $term] eq ""} {
return -code error "Execute External Program failled: Cannot execute program in console because a suitable terminal program could not be found."
}

if {$konsole} {
set cmd [concat [list $term $t $title] -e $cmd]
} else {
set cmd [list $term $t $title -e $cmd]
}

if {$props(ExecuteAsRoot) && !$info(UserIsRoot)} {
set msg [::InstallJammer::SubstText "<%PromptForRootText%>"]
set cmd [join [::InstallJammer::SubstForPipe $cmdline]]
if {$konsole} {
set cmd [concat [list $term $t $title]  [list -e echo '$msg' && su -c '$cmd']]
} else {
set cmd [list $term $t $title  -e "echo '$msg' && su -c '$cmd'"]
}
}
}

if {!$props(WaitForProgram)} { lappend cmd & }

debug "Executing Command Line: $cmd"

if {[catch { eval exec $cmd } $resultVar]} {
debug "Error while executing: [set $resultVar]"

set $statusVar 1
if {[lindex $::errorCode 0] eq "CHILDSTATUS"} {
set $statusVar [lindex $::errorCode 2]
}
}
} elseif {$props(ExecuteAsRoot) && !$info(UserIsRoot)
&& !$conf(windows)} {
debug "Executing as root"
set cmd [::InstallJammer::SubstForPipe $cmdline]

if {$props(IncludeStderr)} { lappend cmd "2>@1" }

debug "Executing Command Line: $cmd"
::InstallJammer::ExecAsRoot $cmd -wait $props(WaitForProgram)
} else {
if {$props(IncludeStderr)} { lappend cmd "2>@1" }

if {!$props(WaitForProgram)} { lappend cmd & }

debug "Executing Command Line: $cmd"
if {[catch { eval exec $cmd } $resultVar]} {
debug "Error while executing: [set $resultVar]"

set $statusVar 1
if {[lindex $::errorCode 0] eq "CHILDSTATUS"} {
set $statusVar [lindex $::errorCode 2]
}
}
}
}

::InstallJammer::UpdateWidgets -updateidletasks 1

if {[info exists pwd]} { cd $pwd }
}

proc ::InstallJammer::actions::ExecuteScript {obj} {
$obj properties props -subst {ResultVirtualText}

set varName result
if {$props(ResultVirtualText) ne ""} {
set varName ::info($props(ResultVirtualText))
}

set script [::InstallJammer::SubstForEval $props(TclScript)]
if {[uplevel #0 [list catch $script $varName]] == 1} {
return -code error [set $varName]
}
}

proc ::InstallJammer::conditions::ExecuteScriptCondition {obj} {
$obj properties props -subst {ResultVirtualText}

set varName result
if {$props(ResultVirtualText) ne ""} {
set varName ::info($props(ResultVirtualText))
}

set script [::InstallJammer::SubstForEval $props(Script)]
if {[uplevel #0 [list catch $script $varName]] == 1} {
return -code error [set $varName]
}

return [string is true -strict [set $varName]]
}

proc ::InstallJammer::actions::Exit {obj} {
global info

if {[$obj get ExitType] eq "Cancel"} {
set info(WizardCancelled) 1
}

foreach command [list ::Exit ::InstallJammer::exit ::exit] {
if {[::InstallJammer::CommandExists $command]} {
$command
}
}
}

proc ::InstallJammer::conditions::FileExistsCondition {obj} {
$obj properties props

debug "Checking to see if $props(Filename) $props(Operator)"

set file [::InstallJammer::SubstText $props(Filename)]

if {$props(Operator) eq "exists"} {
return [file exists $file]
} else {
return [expr {![file exists $file]}]
}
}

proc ::InstallJammer::conditions::FilePermissionCondition {obj} {
global conf
global info

$obj properties props

if {[string match "can*create" $props(Permission)]} {
debug "Checking to see if we $props(Permission) $props(Filename)"
} else {
debug "Checking to see if $props(Filename) $props(Permission)"
}

set file [::InstallJammer::SubstText $props(Filename)]

switch -- $props(Permission) {
"is readable" {
return [file readable $file]
}

"is writable" {
return [::InstallJammer::DirIsWritable $file]
}

"can create" {
set info(Dir) [file nativename $file]
while {[llength [file split $info(Dir)]]} {
if {[file exists $info(Dir)]} {
return [::InstallJammer::DirIsWritable $info(Dir)]
}

set dir [file dirname $info(Dir)]

if {$dir eq $info(Dir)} { break }

set info(Dir) $dir
}

return 0
}
}
}

proc ::InstallJammer::actions::InstallProgramFolderShortcut {obj} {
global conf

set allusers [::InstallJammer::SubstText [$obj get InstallForAllUsers]]

if {$conf(windows)} {
set folder [$obj get ProgramFolderName]

$obj set ShortcutDirectory "<%ProgramFolder%>"

if {$allusers ne ""} {
$obj set ShortcutDirectory "<%PROGRAMS%>/$folder"
if {[string is true $allusers]} {
$obj set ShortcutDirectory "<%COMMON_PROGRAMS%>/$folder"
}
}

::InstallJammer::actions::InstallWindowsShortcut $obj
} else {
$obj set ShortcutLocation "Program Folder"
::InstallJammer::actions::InstallUNIXShortcut $obj
}
}

proc ::InstallJammer::actions::InstallSelectedFiles {obj} {
global info
global conf

update

if {[string is true -strict $info(Testing)]} { return }

set setups [SetupTypes children]

if {![llength $setups]} { return }

set setuptype [::InstallJammer::FindObjByName $info(InstallType) $setups]

if {$setuptype eq ""} {
return -code error "Install Selected Files failed: could not find current Setup Type in list of available Setup Types"
}

set conf(stop)  [::InstallJammer::TmpDir .stop]
set conf(pause) [::InstallJammer::TmpDir .pause]

set id     [$obj id]
set parent [$obj parent]

set conf(InstallID) $parent

set total 0

set info(FileBeingInstalled)  ""
set info(GroupBeingInstalled) ""

set info(Status) "<%InstallPrepareText%>"

set groups [list]
foreach component [$setuptype get Components] {
if {![$component active]} {
debug "Skipping component $component - [$component name] - component is inactive" $component
continue
}

if {[info exists done($component)]} { continue }
set done($component) 1

foreach filegroup [$component get FileGroups] {
if {![$filegroup active]} {
debug "Skipping file group $filegroup - [$filegroup name] - filegroup is inactive" $component
continue
}

if {[info exists done($filegroup)]} { continue }
set done($filegroup) 1

lappend groups $filegroup

if {$::verbose} {
debug "Adding file group [$filegroup name] for installation..."
}

foreach file [$filegroup children] {
if {![$file active]} {
debug "Skipping file $file - [$file name] - file is inactive" $component
continue
}

if {[info exists done($file)]} { continue }
set done($file) 1

set total [expr {wide($total) + [$file size]}]

if {$::verbose} {
debug "Adding file [$file name] for installation..."
}

lappend files($filegroup) $file
}
}
}

if {![llength $groups]} {
set info(InstallFinished) 1
return
}

set info(TotalSize) $total

if {$info(InstallHasSolidArchives) && !$info(SolidArchivesExtracted)} {
::InstallJammer::UnpackSolidArchives 0
set info(InstallPercentComplete) 0
set info(Status) "<%InstallPrepareText%>"
}

set conf(InstallLog) [file join $info(InstallDir) install.log]

set unpackBin    [::installkit::base]
set unpackInf    [::InstallJammer::BuildUnpackInfo $groups files]
set unpackScript [::InstallJammer::BuildUnpack]

set info(Installing)     1
set info(InstallStarted) 1

set conf(LastPercent)          0
set conf(UpdateFileText)       [$obj get UpdateFileText]
set conf(UpdateFilePercent)    [$obj get UpdateFilePercentage]
set conf(directoryPermissions) {}

if {$conf(UpdateFileText)} {
set info(Status) "<%FileBeingInstalledText%>"
} else {
set info(Status) "<%GroupBeingInstalledText%>"
}

if {$conf(threaded)} {
set tid [installkit::newThread thread::wait]
thread::errorproc ::InstallJammer::HandleThreadError

set conf(UnpackThread) $tid
thread::send $tid [list source $unpackInf]
thread::send -async $tid [list source $unpackScript]
} else {
set cmd "|[list $unpackBin] [list $unpackScript] -- [list $unpackInf]"
set conf(UnpackBin) $unpackBin
set conf(UnpackFp)  [open $cmd]

fconfigure $conf(UnpackFp) -blocking 0
fileevent  $conf(UnpackFp) readable  [list ::InstallJammer::ReadUnpack $parent]
}

vwait ::info(Installing)

set info(Installing)      0
set info(InstallFinished) 1

if {$info(InstallStopped)} { return }

if {$conf(windows)} {
set conf(UpdateWindowsRegistry) 1
}

if {$conf(rollback) && $info(InstallStarted)} {
set info(Status)  "<%CleanupInstallText%>"

foreach {dir perms} $conf(directoryPermissions) {
::InstallJammer::SetPermissions $dir $perms
}

foreach file $conf(rollbackFiles) {
set roll [::InstallJammer::RollbackName $file]
if {[file exists $roll]} { file delete -force $roll }
}
}

set info(FileBeingInstalled)  ""
set info(GroupBeingInstalled) ""
}

proc ::InstallJammer::actions::InstallUNIXShortcut {obj} {
global conf
global info

if {![string match "Linux*" $info(Platform)]
&& ![string match "FreeBSD*" $info(Platform)]} { return }

$obj properties props -subst 1

if {$props(ShortcutLocation) eq "Directory"} {
set file [file join $props(ShortcutDirectory) $props(ShortcutName)]

if {![file exists $props(ShortcutDirectory)]} {
::InstallJammer::CreateDir $props(ShortcutDirectory)
}

::InstallJammer::LogFile $file
} else {
if {$props(FileName) eq ""} {
return -code error "Error in Install UNIX Shortcut: File Name property must not be empty"
}

set file [::InstallJammer::TmpDir $props(FileName)]
}

if {![string match *.desktop $file]} { append file .desktop }

set fp [open $file w]

puts $fp {[Desktop Entry]}
puts $fp "Version=1.0"
puts $fp "Type=$props(ShortcutType)"
puts $fp "Name=$props(ShortcutName)"

if {$props(TargetFileName) ne ""} {
if {$props(ShortcutType) eq "Link"} {
set target $props(TargetFileName)
if {![regexp {[a-z]+://} $target]} { set target "file://$target" }
puts $fp "URL=$target"
} else {
set target $props(TargetFileName)
if {[string first " " $target] > -1} { set target \"$target\" }
if {[info exists props(CommandLineArguments)]} {
append target " $props(CommandLineArguments)"
}
puts $fp "Exec=$target"
}
}

if {$props(IconPath) ne ""}  {
puts $fp "Icon=$props(IconPath)"
}

if {$props(AdditionalArguments) ne ""} {
puts $fp $props(AdditionalArguments)
}

close $fp

if {$props(ShortcutLocation) eq "Desktop"} {
catch { exec xdg-desktop-icon install --novendor $file }
::InstallJammer::InstallLog [list :XDGRESOURCE desktop $file]
} elseif {$props(ShortcutLocation) eq "Program Folder"} {

set files [list]
foreach folder [file split $props(ProgramFolderName)] {
set uuid    $info(ApplicationID)-[join $folder ""]
set dirfile [::InstallJammer::TmpDir $uuid.directory]

set fp [open $dirfile w]
puts $fp {[Desktop Entry]}
puts $fp "Version=1.0"
puts $fp "Type=Directory"
puts $fp "Name=$folder"
close $fp

lappend files $dirfile
}

if {![llength $files]} {
return -code error "Error in Install UNIX Shortcut: No program folder found to add icon to"
}

lappend files $file

catch { eval exec xdg-desktop-menu install --novendor $files }

foreach file $files {
lappend logfiles [file tail $file]
}

::InstallJammer::InstallLog [list :XDGRESOURCE menu $logfiles]

if {[::InstallJammer::GetDesktopEnvironment] eq "Gnome"} {
set conf(RestartGnomePanel) 1
}
}
}

proc ::InstallJammer::actions::InstallUninstaller {obj} {
global info
global conf

$obj properties props -subst 1

set info(Status) [$obj get Message]

set uninstallBin [file join $props(UninstallDirectory)  $props(UninstallFilename)]

set conf(uninstall)   $uninstallBin
set info(Uninstaller) $uninstallBin

if {[file exists $uninstallBin]} {

set tmp [::InstallJammer::TmpDir]
set dir [::InstallJammer::TmpMount]

if {![catch { installkit::Mount $uninstallBin $dir } error]} {
foreach pattern {*.info *.log} {
foreach file [glob -nocomplain -dir $dir $pattern] {
file copy -force $file $tmp
}
}

installkit::Unmount $dir
}
}

::InstallJammer::CreateDir [file dirname $uninstallBin]

set arrays [list info ::InstallJammer::Properties]

set uninstall [::InstallJammer::TmpDir uninstall.tcl]

set fp [open $uninstall w]
puts $fp "namespace eval ::InstallAPI {}"
puts $fp "namespace eval ::InstallJammer {}"

puts $fp "set info(Uninstaller) [list $info(Uninstaller)]"

foreach array $arrays {
puts $fp "array set $array [list [array get $array]]"
}

set filedata [array get ::InstallJammer::files gui.tcl]
if {!$conf(windows)} {
eval lappend filedata [array get ::InstallJammer::files console.tcl]
}

puts $fp "array set ::InstallJammer::files [list $filedata]"

foreach file {common.tcl uninstall.tcl} {
puts $fp $::InstallJammer::files($file)
}

close $fp

set opts [list -noinstall -o $uninstallBin -w [::installkit::base]]

if {$conf(windows)} {
set desc "Uninstall <%AppName%> <%Version%>"
lappend opts -filedescription [::InstallJammer::SubstText $desc]
}

set dirs [glob -nocomplain -type d -tails -dir [file join $conf(vfs) lib] *]
set rem  [list installkit itcl tcl tk thread tile]
set dirs [eval lremove [list $dirs] $rem]

foreach dir $dirs {
lappend opts -package [file join $conf(vfs) lib $dir]
}

lappend opts -catalog [file join $conf(vfs) catalogs messages]

eval ::InstallJammer::Wrap $opts [list $uninstall]

::InstallJammer::SetPermissions $uninstallBin 00755

return 1
}

proc ::InstallJammer::actions::InstallWindowsShortcut {obj} {
global conf

if {!$conf(windows)} { return }

$obj properties props -subst 1

set a(path) [file nativename $props(TargetFileName)]

if {$props(WorkingDirectory) ne ""} {
set a(work) $props(WorkingDirectory)
}

if {$props(IconPath) ne ""} {
set a(icon) $props(IconPath)
set a(idx) $props(IconPathIndex)
}

if {$props(CommandLineArguments) ne ""} {
set a(args) $props(CommandLineArguments)
}

set a(show) $props(WindowState)

set linkPath [file join $props(ShortcutDirectory) $props(ShortcutName)]
if {![string match *.lnk $linkPath]} { append linkPath .lnk }

set dir [file dirname $linkPath]
if {![file exists $dir]} { ::InstallJammer::CreateDir $dir }

if {$conf(twapi)} {
if {$a(path) eq ""} { set a(path) "C:/" }
set args [list $linkPath -path $a(path) -showcmd $a(show)]
if {[info exists a(args)]} { lappend args -args $a(args) }
if {[info exists a(work)]} { lappend args -workdir $a(work) }
if {[info exists a(icon)]} {
lappend args -iconpath $a(icon) -iconindex $a(idx)
}
debug "Creating shortcut $linkPath with these options: $args"
eval twapi::write_shortcut $args
} else {
set args [list $linkPath -objectpath $a(path) -showcommand $a(show)]
if {[info exists a(args)]} { lappend args -arguments $a(args) }
if {[info exists a(work)]} { lappend args -workingdirectory $a(work) }
if {[info exists a(icon)]} { lappend args -icon $a(icon) $a(idx) }
debug "Creating shortcut $linkPath with these options: $args"
eval ::installkit::Windows::createShortcut $args
}
::InstallJammer::LogFile $linkPath
}

proc ::InstallJammer::actions::LaunchWebBrowser {obj} {
global conf

$obj properties props -subst 1

set url [::InstallAPI::EncodeURL -url $props(URL)]

if {$conf(windows)} {
set cmd [list $::env(COMSPEC) /c start $url]
} else {
set cmd [list xdg-open $url]
}

eval exec $cmd &
}

proc ::InstallJammer::actions::ModifyWidget {obj} {
global conf
global info

variable hidden

set id     [$obj id]
set parent [$obj parent]

if {![$parent ispane]} {
set parent $info(CurrentPane)
}

$obj properties props

if {![string length $props(Widget)]} { return }

set allArgs   {}
set labelArgs {}

if {$props(Text) ne ""}  {
lappend labelArgs -text $props(Text)
}

if {$props(State) ne "" && $props(State) ne "hidden"} {
lappend allArgs -state $props(State)
}

set widgets [split $props(Widget) \;]

for {set i 0} {$i < [llength $widgets]} {incr i} {
set name [string trim [lindex $widgets $i]]
set name [::InstallJammer::ID $name]
set w [join $name ""]
set widget $w

set button 0
if {[lsearch -exact $conf(ButtonWidgets) $widget] > -1} {
set button 1
set w [string tolower [string map {Button ""} $widget]]
}

if {$button} {
set w [$info(Wizard) widget get $w]
} else {
set w [$parent widget get $widget]
}

if {$w eq ""} {
return -code error "bad widget \"$name\""
}

if {$props(Text) ne ""} {
::InstallJammer::SetVirtualText all $parent $widget $props(Text)
}

set class [winfo class $w]
if {$class eq "Frame" || $class eq "TFrame"} {
foreach child [winfo children $w] {
set class [winfo class $child]
if {$class eq "Label" || $class eq "TLabel"} {
eval [list $child configure] $labelArgs
}
eval [list $child configure] $allArgs
}
} else {
eval [list $w configure] $allArgs $labelArgs
}

if {$props(State) eq "hidden" && ![info exists hidden($w)]} {
set manager [winfo manager $w]
set options [$manager info $w]
set hidden($w) [concat $manager configure $w $options]
$manager forget $w
} elseif {$props(State) eq "normal" && [info exists hidden($w)]} {
eval $hidden($w)
unset hidden($w)
}
}

::InstallJammer::UpdateWidgets -buttons 1 -updateidletasks 1
}

proc ::InstallJammer::actions::MoveForward {obj} {
global info

set next [$info(Wizard) step next]

if {![string length $next]} {
debug "No more panes left to move forward... exiting"
::InstallJammer::actions::Exit $obj
} else {
debug "Moving forward to $next"
after 0 [list $info(Wizard) next 1]
}
}

proc ::InstallJammer::conditions::ScriptCondition {obj} {
return [::InstallJammer::EvalCondition [$obj get Script]]
}

proc ::InstallJammer::conditions::StringIsCondition {obj} {
$obj properties props

debug "Checking to see if $props(String) is $props(Operator)"

set string [::InstallJammer::SubstText $props(String)]

if {$props(Operator) eq "empty"} {
return [expr {[string trim $string] eq ""}]
} elseif {$props(Operator) eq "not empty"} {
return [expr {[string trim $string] ne ""}]
} else {
return [string is $props(Operator) -strict $string]
}
}
} unpack.tcl {
if {[info exists ::InstallJammer]} { return }

if {[info exists ::tcl_platform(threaded)]} {
proc output { line } {
thread::send $::parentThread [list ::InstallJammer::UnpackOutput $line]
}
} else {
proc output {string} {
global conf

catch { puts $conf(runlogFp) $string }
puts stdout $string

catch { flush $conf(runlogFp) }
flush stdout
}
}

proc ::InstallJammer::InstallFiles {} {
global conf
global info
global files
global groups

set conf(unpackTotal) 0

::InstallJammer::CreateDir $info(InstallDir)

foreach group $groups {
output [list :GROUP [$group name] [$group directory]]

$group install

if {![info exists files($group)]} { continue }

foreach file $files($group) {
output [list :FILE [$file destfile] [$file version]]
if {![$file install]} { return }
}
}
}

proc ::InstallJammer::IncrProgress { bytes } {
global conf
global info

if {$info(TotalSize) == 0} {
output ":PERCENT 100"
return
}

incr0 conf(unpackLeft) -$bytes
incr0 conf(unpackTotal) $bytes
incr0 conf(unpackSoFar) $bytes

if {$info(TotalSize) > 0} {
set x [expr round(($conf(unpackTotal) * wide(100.0))/$info(TotalSize))]
if {$x != $conf(lastPercent)} {
output ":PERCENT $x"
set conf(lastPercent) $x
}
}

}

proc ::InstallJammer::unpack { src dest {permissions ""} } {
global conf
global info

if {![PauseCheck]} { return }

if {$conf(rollback) && [file exists $dest]} {
output [list :ROLLBACK $dest]
::InstallJammer::SaveForRollback $dest
}

if {$permissions eq ""} { set permissions 0666 }

set fin [open $src r]
if {[catch {open $dest w $permissions} fout]} {
close $fin
return -code error $fout
}

set intrans  binary
set outtrans binary
if {[info exists conf(eol,[file extension $dest])]} {
set trans $conf(eol,[file extension $dest])
if {[llength $trans] == 2} {
set intrans  [lindex $trans 0]
set outtrans [lindex $trans 1]
} else {
set outtrans [lindex $trans 0]
}
}

fconfigure $fin  -translation $intrans  -buffersize $conf(chunk)
fconfigure $fout -translation $outtrans -buffersize $conf(chunk)

set conf(unpackLeft)  $info(FileSize)
set conf(unpackDone)  0
set conf(unpackSoFar) 0
set conf(unpackFin)   $fin
set conf(unpackFout)  $fout
set conf(lastPercent) 0

::InstallJammer::unpackfile $fin $fout 0

if {!$info(InstallStopped)} {
vwait ::conf(unpackDone)
}

return $dest
}

proc ::InstallJammer::unpackfile { in out bytes {error ""} } {
global conf

if {![PauseCheck]} {
set error "Install Stopped"
}

::InstallJammer::IncrProgress $bytes

if {$error ne "" || $conf(unpackLeft) <= 0 || [eof $in]} {
close $in
close $out
set conf(unpackDone) $conf(unpackTotal)
} else {
set size $conf(chunk)
if {$size > $conf(unpackLeft)} { set size $conf(unpackLeft) }
::fcopy $in $out -size $size -command [lrange [info level 0] 0 2]
}
}

proc ::InstallJammer::InstallLog { string } {
output [list :LOG $string]
}

proc ::InstallJammer::exit {} {
global info
global conf

if {!$conf(threaded)} {
::InstallJammer::WriteDoneFile $info(Temp)

catch { close $conf(runlogFp) }
catch { close $conf(unpackFin)  }
catch { close $conf(unpackFout) }

::exit
}

output ":PERCENT 100"
output ":DONE"
}

proc ::InstallJammer::UnpackMain {} {
global conf
global info

catch { wm withdraw . }

::InstallJammer::CommonInit

set conf(pwd) [file dirname [info nameofexe]]

if {!$conf(threaded)} {
set info(Temp) $conf(pwd)
uplevel #0 [list source [file join $conf(pwd) unpack.ini]]
}

set conf(stop)        [TmpDir .stop]
set conf(pause)       [TmpDir .pause]
set conf(chunk)       [expr {64 * 1024}]
set conf(lastPercent) 0

::InstallJammer::InitSetup
::InstallJammer::InitFiles
::InstallJammer::UpdateFiles

if {!$conf(threaded)} {
set conf(vfs) /installkitunpackvfs
::installkit::Mount $info(installer) $conf(vfs)
set conf(runlogFp) [open [TmpDir run.log] w]

if {$info(InstallHasSolidArchives)} {
foreach file [glob -nocomplain -dir [TmpDir] solid.*] {
installkit::Mount $file $conf(vfs)
}
}
}

set conf(rollback) [string match "*Rollback*" $info(CancelledInstallAction)]

::InstallJammer::InstallFiles

::InstallJammer::exit
}

::InstallJammer::UnpackMain
}}
::InstallJammer::SourceCachedFile common.tcl

proc ::ThemeInit {} {
variable info

Wizard $info(Wizard)  -raisecommand [list RaiseStep %W %S]  -width [::InstallJammer::SubstText "<%WizardWidth%>"]  -height [::InstallJammer::SubstText "<%WizardHeight%>"]  -title [::InstallJammer::SubstText "<%InstallTitleText%>"]  -separatortext [::InstallJammer::SubstText "<%SeparatorText%>"]

if {$::tcl_platform(platform) eq "unix"} {
$info(Wizard) configure -bg [style configure . -background]
}
}


InstallType ::Common
InstallType ::Standard
InstallType ::Default
InstallType ::Console
InstallType ::Silent
InstallType ::ActionGroups
InstallComponent F403ED4B-D2AB-4CA0-9AC0-1DCA4A1EBE5E -setup Install -type actiongroup -title {Setup Actions} -alias {Setup Actions} -active Yes -parent ActionGroups
InstallComponent 9C1BF614-0A4B-4B3E-82AA-32CA148FDA63 -setup Install -type actiongroup -title {Startup Actions} -alias {Startup Actions} -active Yes -parent ActionGroups
InstallComponent 8F0CC273-D105-4F82-8D7D-EB6618629BB7 -setup Install -type action -conditions {E20050A5-74E8-4DB3-82AC-ED90E44B3EDF F93C8E33-27CA-42EE-8D96-24856D5CA1AB} -title Exit -component Exit -command insert -active Yes -parent 9C1BF614-0A4B-4B3E-82AA-32CA148FDA63
Condition E20050A5-74E8-4DB3-82AC-ED90E44B3EDF -active Yes -parent 8F0CC273-D105-4F82-8D7D-EB6618629BB7 -title {String Is Condition} -component StringIsCondition -TreeObject::id E20050A5-74E8-4DB3-82AC-ED90E44B3EDF
Condition F93C8E33-27CA-42EE-8D96-24856D5CA1AB -active Yes -parent 8F0CC273-D105-4F82-8D7D-EB6618629BB7 -title {Ask Yes or No} -component AskYesOrNo -TreeObject::id F93C8E33-27CA-42EE-8D96-24856D5CA1AB
InstallComponent 7CACE910-41EE-4D16-B8DE-9D346336018F -setup Install -type action -title {Execute Script} -component ExecuteScript -active Yes -parent 9C1BF614-0A4B-4B3E-82AA-32CA148FDA63
InstallComponent 22B22D81-67CF-4BFD-A7FE-5FECA55B49A4 -setup Install -type action -title {Execute Script} -component ExecuteScript -active Yes -parent 9C1BF614-0A4B-4B3E-82AA-32CA148FDA63
InstallComponent 2B058846-92EC-4F3C-910C-E3203A5DFEC7 -setup Install -type action -title {Check for Previous Install} -component CheckForPreviousInstall -active Yes -parent 9C1BF614-0A4B-4B3E-82AA-32CA148FDA63
InstallComponent 2261441E-6BF0-47A7-8785-50CB585D25C1 -setup Install -type action -title {Create Install Panes} -component CreateInstallPanes -active Yes -parent 9C1BF614-0A4B-4B3E-82AA-32CA148FDA63
InstallComponent 81F49E9C-C47F-4165-B259-ED915E461415 -setup Install -type actiongroup -title {Install Actions} -alias {Install Actions} -active Yes -parent ActionGroups
InstallComponent A9CD20EB-9BAC-4E7D-9327-7724C2A7F535 -setup Install -type action -title {Add Environment Variable} -component AddEnvironmentVariable -active Yes -parent 81F49E9C-C47F-4165-B259-ED915E461415
InstallComponent 4B5ECD32-5DF6-420F-82CF-CB83E5F49A8D -setup Install -type action -title {Add Directory To Path} -component AddDirectoryToPath -active Yes -parent 81F49E9C-C47F-4165-B259-ED915E461415
InstallComponent C540F45D-8580-4AD9-94F7-9A75F09A6593 -setup Install -type action -title {Install Selected Files} -component InstallSelectedFiles -active Yes -parent 81F49E9C-C47F-4165-B259-ED915E461415
InstallComponent 44AD6793-47A7-4193-AE57-BDDB69799092 -setup Install -type action -conditions {F8696E5A-43F4-4369-B835-DB74A17A46CE C2089508-7FED-4F5A-8B2B-D77CC570FF4F} -title {Execute External Program} -component ExecuteExternalProgram -command insert -active Yes -parent 81F49E9C-C47F-4165-B259-ED915E461415
Condition F8696E5A-43F4-4369-B835-DB74A17A46CE -active Yes -parent 44AD6793-47A7-4193-AE57-BDDB69799092 -title {Execute Script Condition} -component ExecuteScriptCondition -TreeObject::id F8696E5A-43F4-4369-B835-DB74A17A46CE
Condition C2089508-7FED-4F5A-8B2B-D77CC570FF4F -active Yes -parent 44AD6793-47A7-4193-AE57-BDDB69799092 -title {File Exists Condition} -component FileExistsCondition -TreeObject::id C2089508-7FED-4F5A-8B2B-D77CC570FF4F
InstallComponent 0CF8A941-C6B7-4DF9-8DEB-BE87A57CA285 -setup Install -type action -conditions A7C66696-4708-4099-B907-EAE7B0C4C3AD -title {Install Uninstaller} -component InstallUninstaller -command insert -active Yes -parent 81F49E9C-C47F-4165-B259-ED915E461415
Condition A7C66696-4708-4099-B907-EAE7B0C4C3AD -active Yes -parent 0CF8A941-C6B7-4DF9-8DEB-BE87A57CA285 -title {String Is Condition} -component StringIsCondition -TreeObject::id A7C66696-4708-4099-B907-EAE7B0C4C3AD
InstallComponent 0B440438-4277-4EF2-AEC5-724E6AE64293 -setup Install -type action -conditions B8183471-3C13-4A0C-A155-C3FA70B2CB42 -title {Windows Uninstall Registry} -component AddWindowsUninstallEntry -command insert -active Yes -parent 81F49E9C-C47F-4165-B259-ED915E461415
Condition B8183471-3C13-4A0C-A155-C3FA70B2CB42 -active Yes -parent 0B440438-4277-4EF2-AEC5-724E6AE64293 -title {String Is Condition} -component StringIsCondition -TreeObject::id B8183471-3C13-4A0C-A155-C3FA70B2CB42
InstallComponent 6CF27022-0C55-43FA-95CF-821D60A3FDBE -setup Install -type action -conditions 80858315-2FDE-4485-AE60-DCB2A06271A2 -title {Uninstall Shortcut} -component InstallProgramFolderShortcut -command insert -active Yes -parent 81F49E9C-C47F-4165-B259-ED915E461415
Condition 80858315-2FDE-4485-AE60-DCB2A06271A2 -active Yes -parent 6CF27022-0C55-43FA-95CF-821D60A3FDBE -title {String Is Condition} -component StringIsCondition -TreeObject::id 80858315-2FDE-4485-AE60-DCB2A06271A2
InstallComponent FFD36C32-E334-4451-8B85-8EF64FC14A78 -setup Install -type actiongroup -title {Finish Actions} -alias {Finish Actions} -active Yes -parent ActionGroups
InstallComponent 7F977B76-1808-405B-9FEA-F30DAC0A8CB7 -setup Install -type actiongroup -title {Cancel Actions} -alias {Cancel Actions} -active Yes -parent ActionGroups


if {[info exists ::InstallJammer]} { return }

proc ::InstallJammer::UpdateInstallInfo {} {
global info

set info(SpaceRequired)      0
set info(SelectedComponents) [list]
set info(SelectedFileGroups) [list]

set setups    [SetupTypes children]
set setuptype [::InstallJammer::FindObjByName $info(InstallType) $setups]

set total 0
foreach component [$setuptype get Components] {
if {![$component active]} { continue }

set name [$component name]
if {[lsearch -exact $info(SelectedComponents) $name] < 0} {
lappend info(SelectedComponents) $name
}

set doSize 1
set size [$component get Size]
if {$size ne ""} {
set doSize 0
set total [expr {wide($total) + $size}]
}

foreach filegroup [$component get FileGroups] {
if {![$filegroup active]} { continue }

if {$doSize} {
set fsize [$filegroup get Size]
if {$fsize eq ""} { set fsize [$filegroup get FileSize] }

if {[string is integer -strict $fsize]} {
set total [expr {wide($total) + $fsize}]
}
}

set name [$filegroup name]
if {[lsearch -exact $info(SelectedFileGroups) $name] < 0} {
lappend info(SelectedFileGroups) $name
}
}
}

set info(SpaceRequired) $total

::InstallJammer::UpdateWidgets
}

proc ::InstallJammer::SelectComponent { paneId } {
global info

set id   $paneId
set tree [$id widget get ComponentTree]
set text [$id widget get DescriptionText]
set node [$tree selection get]
set desc [::InstallJammer::GetText $node Description]

::InstallJammer::SetText $text $desc

::InstallJammer::SetVirtualText $info(Language) $id  [list DescriptionText $desc]

::InstallJammer::UpdateInstallInfo
}

proc ::InstallJammer::ToggleComponent { tree id node } {
global info

if {[$node get RequiredComponent]} { return }

set type $info(InstallTypeID)

if {[$node active]} {
$node active 0

foreach component [$node children recursive] {
if {![$component get RequiredComponent]} { $component active 0 }

if {[$tree exists $component]} {
$tree itemconfigure $component -on 0

if {[$tree itemcget $component -type] eq "radiobutton"} {
set group [$component get ComponentGroup]
set ::InstallJammer::Components($type,$group) ""
}
}
}
} else {
$node active 1

foreach component [$node children recursive] {
$component active 1
if {[$tree exists $component]} {
$tree itemconfigure $component -on 1

if {[$tree itemcget $component -type] eq "radiobutton"} {
set group [$component get ComponentGroup]
if {[$component get Checked]} {
set ::InstallJammer::Components($type,$group) $component
} else {
$component active 0
}
}
}
}
}

if {[$tree itemcget $node -type] eq "radiobutton"} {
set group [$node get ComponentGroup]
foreach comp $::InstallJammer::Components($type,$group,ids) {
if {$comp ne $node} { $comp active 0 }
}
}

::InstallJammer::UpdateInstallInfo
}

proc ::InstallJammer::SelectSetupType { {node ""} } {
global info

set change 1
if {$node ne ""} {
set name   [$node name]
set change [expr {$info(InstallType) ne $name}]

set info(InstallType) $name

set id   [$info(Wizard) raise]
set text [$id widget get DescriptionText]
set desc [::InstallJammer::GetText $node Description]

::InstallJammer::SetText $text $desc

::InstallJammer::SetVirtualText $info(Language) $id  [list DescriptionText $desc]

[$id widget get SetupTypeListBox] selection set $node
}

if {$change} {
set setups [SetupTypes children]
set obj    [::InstallJammer::FindObjByName $info(InstallType) $setups]

if {$obj eq ""} { set obj [lindex $setups 0] }

::InstallAPI::SetActiveSetupType -setuptype $obj
}
}

proc ::InstallJammer::PopulateProgramFolders { step } {
global conf

set listbox [$step widget get ProgramFolderListBox]

if {$conf(windows)} {
set folder [list]
foreach dir {PROGRAMS COMMON_PROGRAMS} {
set dir [::InstallJammer::WindowsDir $dir]
eval lappend folders [glob -nocomplain -type d -dir $dir -tails *]
}
eval [list $listbox insert end] [lsort -dict -unique $folders]
}
}

proc ::InstallJammer::SetProgramFolder { {folder ""} } {
global conf
global info

if {![string length $folder]} {
set step $info(CurrentPane)
set listbox [$step widget get ProgramFolderListBox]
set folder  [$listbox get [$listbox curselection]]

set list [file split $info(OriginalProgramFolderName)]
if {[llength $list] > 1} {
set folder [file join $folder [lindex $list end]]
} else {
set folder [file join $folder $info(OriginalProgramFolderName)]
}
}

set info(ProgramFolderName) $folder
}

proc ::InstallJammer::ModifyProgramFolder {} {
global conf
global info

set all $info(ProgramFolderAllUsers)
if {$conf(vista)} { set all 1 }

if {!$all} {
set info(ProgramFolder) "<%PROGRAMS%>/<%ProgramFolderName%>"
} else {
set info(ProgramFolder) "<%COMMON_PROGRAMS%>/<%ProgramFolderName%>"
}
}

proc ::InstallJammer::ScrollLicenseTextBox { force args } {
global info

eval $args

if {!$force} { return }

set w   [lindex $args 0]
lassign [$w yview] y0 y1

if {$y1 == 1} {
$info(Wizard) itemconfigure next -state normal
} else {
$info(Wizard) itemconfigure next -state disabled
}
}

proc ::InstallJammer::exit { {prompt 0} } {
global conf
global info

if {$prompt} {
::InstallJammer::PauseInstall

set title   "Exit Setup"
set message [::InstallJammer::SubstText "<%ExitText%>"]
set ans [MessageBox -type yesno -default no  -parent [::InstallJammer::TransientParent]  -title $title -message $message]

if {$ans eq "no"} {
::InstallJammer::ContinueInstall
return
}

set id [$info(Wizard) raise]

if {$id ne ""} {
set when "After Pane is Cancelled"

::InstallJammer::ExecuteActions $id -when $when

if {![$id checkConditions $when]} { return }
}

set info(WizardCancelled) 1
}

if {$info(Installing)} {
::InstallJammer::StopInstall

vwait ::info(Installing)

if {[string match "*Continue*" $info(CancelledInstallAction)]} {
}
}

if {$info(InstallStarted)
&& $info(InstallStopped)
&& $info(CleanupCancelledInstall)} {
::InstallJammer::CleanupCancelledInstall
}

if {!$info(WizardCancelled) && ($info(WizardStarted) || !$info(GuiMode))} {
::InstallJammer::ExecuteActions "Finish Actions"

if {!$info(InstallStopped)} {
::InstallJammer::StoreVersionInfo
::InstallJammer::CreateInstallLog
::InstallJammer::CreateApplicationInstallLog

if {!$info(InstallRegistryInfo)} {
::InstallJammer::StoreLogsInUninstall
}
}
} else {
::InstallJammer::ExecuteActions "Cancel Actions"
}

::InstallJammer::CheckAndUpdateInstallRegistry

::InstallJammer::CommonExit

::exit 0
}

proc ::InstallJammer::UnpackOutput { line } {
global conf
global info

if {$::verbose >= 2} {
debug "Unpack Output: $line"
}

switch -- [lindex $line 0] {
":DONE" {
set info(FileBeingInstalled)  ""
set info(GroupBeingInstalled) ""

set info(Status) "File installation complete..."

if {[info exists ::tcl_platform(threaded)]} {
} else {
catch { close $conf(UnpackFp) }
}
set info(Installing) 0
}

":LOG" {
::InstallJammer::InstallLog [lindex $line 1]
}

":GROUP" {
set info(GroupBeingInstalled) [lindex $line 1]
::InstallJammer::UpdateWidgets -buttons 0 -updateidletasks 1

if {!$info(GuiMode) && !$info(SilentMode)} {
echo <%Status%> 1
}
}

":DIR" {
set dir   [lindex $line 1]
set perms [lindex $line 2]
lappend conf(directoryPermissions) $dir $perms
}

":FILE" {
set file [lindex $line 1]
set ::conf(TMPFILE) $file
set info(FileBeingInstalled) $file
::InstallJammer::SetVersionInfo $file [lindex $line 2]
if {$conf(UpdateFileText)} {
::InstallJammer::UpdateWidgets -buttons 0 -updateidletasks 1
}

if {$::verbose == 1} {
debug "Installing $file..."
}
}

":PERCENT" {
set info(InstallPercentComplete) [lindex $line 1]
if {$info(InstallPercentComplete) != $conf(LastPercent)} {
::InstallJammer::UpdateWidgets -buttons 0 -updateidletasks 1
set conf(LastPercent) $info(InstallPercentComplete)
}
}

":ROLLBACK" {
lappend conf(rollbackFiles) [lindex $line 1]
}

":FILEPERCENT" {
set info(FilePercentComplete) [lindex $line 1]
if {$conf(UpdateFilePercent)} {
::InstallJammer::UpdateWidgets -buttons 0 -updateidletasks 1
}
}

default {
debug "Unpack Error: $line"
append conf(unpackErrors) $line\n
}
}
}

proc ::InstallJammer::ReadUnpack { id } {
global conf
global info

if {[eof $conf(UnpackFp)]} {
catch { close $conf(UnpackFp) }
set info(Installing) 0
return
}

gets $conf(UnpackFp) line

::InstallJammer::UnpackOutput $line
}

proc ::InstallJammer::BuildUnpackInfo { groupList groupArray } {
global conf
global info
global versions

upvar 1 $groupArray groups

::InstallJammer::ReadVersionInfo

set unpack [TmpDir unpack.ini]

set fp [open $unpack w]

puts $fp "namespace eval ::InstallJammer {}"
puts $fp "set info(installer) [list [info nameofexecutable]]"
puts $fp "array set conf [list [array get conf eol,*]]"
puts $fp "array set info [list [array get info]]"
puts $fp "set groups [list $groupList]"
puts $fp "array set files [list [array get groups]]"
puts $fp ""
puts $fp "array set versions [list [array get versions]]"

puts -nonewline $fp "array set ::InstallJammer::Properties "
puts $fp "[list [array get ::InstallJammer::Properties]]"

puts $fp "proc ::InstallJammer::UpdateFiles {} {"
if {[info exists conf(modifiedFiles)]} {
foreach obj $conf(modifiedFiles) {
puts $fp "$obj configure [$obj serialize]"
}
unset conf(modifiedFiles)
}
puts $fp "}"

close $fp

return $unpack
}

proc ::InstallJammer::BuildUnpack {} {
global info
global conf

if {[info exists conf(UnpackBin)]} { return $conf(UnpackBin) }

set unpack [TmpDir unpack.tcl]
set conf(UnpackScript) $unpack

set fp [open $unpack w]
fconfigure $fp -translation lf
foreach file {common.tcl files.tcl setup.tcl components.tcl unpack.tcl} {
puts $fp $::InstallJammer::files($file)
}
close $fp

return $unpack
}

proc ::InstallJammer::CleanupCancelledInstall {} {
global conf
global info

if {$conf(TMPFILE) eq "" && ![llength $conf(LOG)]} { return }

set info(Status) "Cleaning up install..."

set dirs    {}
set files   {}
set regkeys {}
foreach line [lreverse $conf(LOG)] {
set type [lindex $line 0]
set args [lrange $line 1 end]
switch -- $type {
":FILE"	{
lappend files [lindex $args 0]
}

":DIR"	{
lappend dirs $args
}

":REGISTRY"	{
lappend regkeys $args
}
}
}

foreach file $files {
set roll [::InstallJammer::RollbackName $file]
if {[file exists $roll]} {
if {$::verbose == 1} {
debug "Rolling back file $file"
}
file rename -force $roll $file
} else {
if {$::verbose == 1} {
debug "Cleaning up file $file"
}
::InstallJammer::UninstallFile $file
}
}

if {[lsearch -exact $files $::conf(TMPFILE)] < 0} {
::InstallJammer::UninstallFile $::conf(TMPFILE)
}

foreach dir $dirs {
if {$::verbose == 1} {
debug "Cleaning up directory $dir"
}
eval ::InstallJammer::UninstallDirectory $dir
}

foreach regkey $regkeys {
if {$::verbose == 1} {
debug "Cleaning up registry key $regkey"
}
eval ::InstallJammer::UninstallRegistryKey $regkey
}
}

proc ::InstallJammer::CreateApplicationInstallLog {} {
global conf
global info

if {$info(InstallRegistryInfo)} {
set file [::InstallJammer::InstallInfoDir $info(InstallID).info]
} else {
set file [::InstallJammer::TmpDir $info(InstallID).info]
}

set fp [open $file w]
fconfigure $fp -translation lf

set    string ""
append string "ApplicationID: <%ApplicationID%>\n"
append string "Dir:           <%InstallDir%>\n"
append string "Date:          [clock seconds]\n"
append string "User:          <%Username%>\n"
append string "RealUser:      <%RealUsername%>\n"
append string "Version:       <%InstallVersion%>\n"
append string "VersionString: <%Version%>\n"
append string "Source:        <%InstallSource%>\n"
append string "Executable:    <%Installer%>\n"
append string "Uninstaller:   <%Uninstaller%>\n"
append string "UpgradeID:     <%UpgradeApplicationID%>\n"

puts $fp [::InstallJammer::SubstText $string]

if {[info exists conf(APPLOG)]} {
foreach {var val} $conf(APPLOG) {
puts $fp "$var: $val"
}
}

close $fp
}

proc ::InstallJammer::CreateInstallLog { {file ""} } {
global conf
global info

if {$file eq ""} {
if {$info(InstallRegistryInfo)} {
set file [::InstallJammer::InstallInfoDir $info(InstallID).log]
} else {
set file [::InstallJammer::TmpDir $info(InstallID).log]
}
}

if {[catch { open $file w } fp]} { return }

::InstallJammer::LogFile $file

set checkRemove 0
if {[info exists conf(RemoveFromUninstall)]} {
set checkRemove 1
set pattern [join $conf(RemoveFromUninstall) |]
}

foreach line $conf(LOG) {
if {![info exists done($line)]} {
set done($line) 1

if {$checkRemove} {
set type [lindex $line 0]
set dir  [lindex $line 1]
if {($type eq ":DIR" || $type eq ":FILE")
&& [regexp $pattern $dir]} { continue }
}

puts $fp $line
}
}
close $fp
}

proc ::InstallJammer::InstallLog {string} {
lappend ::conf(LOG) $string
}

proc ::InstallJammer::LogRegistry { args } {
::InstallJammer::InstallLog [concat :REGISTRY $args]
}

proc ::InstallJammer::CheckAndUpdateInstallRegistry {} {
global info

set dir [::InstallJammer::GetInstallInfoDir]

if {[file exists [file join $dir install.log]]} {

set newid [::InstallJammer::uuid]

set file [file join $dir .installinfo]
if {[file exists $file]} {
file delete $file
}

set file [file join $dir install.log]
if {[file exists $file]} {
file rename -force $file [file join $dir $newid.log]

set file [file join $dir $newid.log]
foreach x [split [string trim [read_file $file]] \n] {
if {[lindex $x 0] eq ":DIR"} {
set installdir [lindex $x 1]

set fp [open [file join $dir $newid.info] w]
fconfigure $fp -translation lf
puts  $fp "ApplicationID: $info(ApplicationID)"
puts  $fp "Dir:           $installdir"
puts  $fp "Date:          [file mtime $file]"
close $fp
break
}
}
}
}
}

proc ::InstallJammer::ReadPreviousInstall {} {
global conf
global info


variable ::InstallJammer::PreviousInstallInfo

if {[info exists PreviousInstallInfo]} { return }


set dir [::InstallJammer::GetInstallInfoDir]

::InstallJammer::CheckAndUpdateInstallRegistry


foreach file [glob -nocomplain -dir $info(InstallInfoDir) *.info] {
set info(PreviousInstallExists) 1

set id [file root [file tail $file]]
lappend PreviousInstallInfo(ids) $id

unset -nocomplain tmp

set tmp(ID) $id
::InstallJammer::ReadPropertyFile $file tmp

set mtime [file mtime $file]
if {[info exists tmp(Date)]} { set mtime $tmp(Date) }

lappend sort [list $mtime $id]

foreach var [array names tmp] {
set PreviousInstallInfo($id,$var) $tmp($var)
}
}

if {!$info(PreviousInstallExists)} { return }

unset -nocomplain tmp
set installdirs [list]
foreach list [lsort -integer -index 0 $sort] {
set id  [lindex $list 1]
set dir $PreviousInstallInfo($id,Dir)

if {$conf(windows)} {
set dir [string tolower [::InstallJammer::Normalize $dir]]
}

lappend installdirs $dir
}

foreach var [array names PreviousInstallInfo $id,*] {
set name [string range $var [string length $id,] end]
set info(PreviousInstall$name) $PreviousInstallInfo($var)
}

set info(PreviousInstallCount)     [llength [lsort -unique $installdirs]]
set info(PreviousInstallDirExists) [file exists $info(PreviousInstallDir)]
}

proc ::InstallJammer::StoreVersionInfo { {dir ""} {file ""} } {
global conf
global info
global versions

if {!$info(InstallVersionInfo)} { return }

if {$info(InstallRegistryInfo)} {
if {$dir eq ""} { set dir [::InstallJammer::InstallInfoDir] }
if {$file eq ""} { set file $info(InstallID).ver }
} else {
if {$dir eq ""} { set dir $info(InstallDir) }
if {$file eq ""} { set file .installinfo }
}

set file [file join $dir $file]

if {[file exists $file]} {
catch { file delete -force $file }
}

if {[catch { open $file w } fp]} { return }
fconfigure $fp -translation lf

::InstallJammer::LogFile $file

foreach filename [array names versions] {
puts $fp "Ver [list $filename] $versions($filename)"
}

close $fp

if {$conf(windows)} {
file attributes $file -hidden 1
}
}

proc ::InstallJammer::ReadVersionInfo {} {
global info
global versions

set dir  [::InstallJammer::GetInstallInfoDir]
set file [file join $dir $info(InstallID).ver]
if {![file exists $file]} {
set file [file join $info(InstallDir) .installinfo]
}

if {[file exists $file]} {
set fp [open $file]

while {[gets $fp line] != -1} {
switch -- [lindex $line 0] {
"Ver" {
lassign $line cmd file ver
set versions($file) $ver
}
}
}

close $fp
}
}

proc ::InstallJammer::UnpackSolidProgress { in out showGui bytes {error ""} } {
global conf
global info

set top .__solidExtract

if {$error ne "" || [eof $in]} {
set conf(solidUnpackDone) 1
} else {
set conf(solidDone) [expr {$conf(solidDone) + double($bytes)}]
if {$conf(solidTotal) > 0} {
set conf(solidLeft) [expr {wide($conf(solidTotal))
- $conf(solidDone)}]
set x [expr {round(($conf(solidDone) * wide(100))
/ $conf(solidTotal))}]
if {$showGui} {
$top.p configure -value $x
wm title $top "$x% Extracting"
update
} else {
set info(InstallPercentComplete) $x
::InstallJammer::UpdateWidgets -update 1
}
}

if {$conf(solidLeft) == 0} {
set conf(solidUnpackDone) 1
return
}

set size [expr {64 * 1024}]
if {$size > $conf(solidLeft)} {
set size [expr {round($conf(solidLeft))}]
}

::fcopy $in $out -size $size -command [lrange [info level 0] 0 3]
}
}

proc ::InstallJammer::UnpackSolidArchives { {showGui 0} } {
global conf
global info

if {!$info(InstallHasSolidArchives) || $info(SolidArchivesExtracted)} {
return
}

set files [list]
set conf(solidDone)  0
set conf(solidTotal) 0
foreach file [glob -nocomplain -dir $conf(vfs) solid.*] {
lappend files $file
set conf(solidTotal) [expr {wide($conf(solidTotal))
+ [file size $file]}]
}

if {![llength $files]} { return }

if {!$info(GuiMode)} { set showGui 0 }

if {$showGui} {
set top .__solidExtract
toplevel    $top
wm withdraw $top
wm title    $top "0% Extracting"
wm geometry $top 270x60
wm protocol $top WM_DELETE_WINDOW {#}

ttk::progressbar $top.p
pack $top.p -expand 1 -fill both -padx 10 -pady 20

BWidget::place $top 270 60 center

wm deiconify $top
update

grab $top
} else {
set info(Status) "Extracting setup files..."
}

if {!$info(GuiMode) && !$info(SilentMode)} {
puts  stdout [::InstallJammer::SubstText $info(Status)]
flush stdout
}

foreach file $files {
set temp [TmpDir [file tail $file]]

set ifp [open $file]
fconfigure $ifp -translation binary

set ofp [open $temp w]
fconfigure $ofp -translation binary

::InstallJammer::UnpackSolidProgress $ifp $ofp $showGui 0

vwait ::conf(solidUnpackDone)

close $ifp
close $ofp

installkit::Mount $temp $conf(vfs)
}

if {$showGui} {
grab release $top
destroy $top
}

set info(SolidArchivesExtracted) 1
}

proc ::InstallJammer::AskUserLanguage {} {
global conf
global info

set list [::InstallJammer::GetLanguages]

if {[llength $list] < 1} { return }

set top .__askLanguage

Dialog $top -title "Language Selection" -default ok -cancel 1
wm resizable $top 0 0
wm protocol  $top WM_DELETE_WINDOW {::InstallJammer::exit 1}

set f [$top getframe]

ttk::label $f.l -text "Please select the installation language"
pack $f.l -pady 10

ttk::combobox $f.cb -state readonly  -textvariable ::conf(Language) -values $list
pack $f.cb

$top add -name ok     -text "OK"
$top add -name cancel -text "Cancel"

foreach code [::msgcat::mcpreferences] {
set lang [::InstallJammer::GetLanguage $code]
if {$lang ne ""} {
set conf(Language) $lang
break
}
}

$top setfocus 0
if {[$top draw] == 1} {
set info(WizardCancelled) 1
::InstallJammer::exit
}

::msgcat::mclocale [::InstallJammer::GetLanguageCode $conf(Language)]
set info(Language) [::msgcat::mclocale]
}

proc ::InstallJammer::InstallMain {} {
global conf
global info

if {$info(SilentMode)} {
::InstallJammer::ExecuteActions "Startup Actions"
::InstallJammer::ExecuteActions Silent
} elseif {$info(ConsoleMode)} {
::InstallJammer::ConfigureBidiFonts
::InstallJammer::ExecuteActions "Startup Actions"
::InstallJammer::ExecuteActions Console
} else {
if {$info(AllowLanguageSelection)} {
::InstallJammer::AskUserLanguage
}

::InstallJammer::ConfigureBidiFonts

::InstallJammer::ExecuteActions "Startup Actions"

set info(WizardStarted) 1
::InstallJammer::CenterWindow $info(Wizard)
raise $info(Wizard)
::InstallJammer::Wizard next
}
}

proc ::InstallJammer::InitInstall {} {
global conf
global info

catch { wm withdraw . }

SourceCachedFile gui.tcl
SourceCachedFile setup.tcl
SourceCachedFile files.tcl
SourceCachedFile components.tcl

set info(InstallID) [::InstallJammer::uuid]

set info(RunningInstaller)   1
set info(RunningUninstaller) 0

::InstallJammer::CommonInit

array set info {
Installing             0
InstallStarted         0
InstallStopped         0
InstallFinished        0

LicenseAccepted         No
FileBeingInstalled      ""
GroupBeingInstalled     ""
InstallPercentComplete  0

PreviousInstallDir      ""
PreviousInstallCount    0
PreviousInstallExists   0

RunningInstaller        1

SolidArchivesExtracted  0
InstallHasSolidArchives 0
}

set conf(LOG)      {}
set conf(TMPFILE)  ""
set conf(mode)     "InstallMode"
set conf(rollback) [string match "*Rollback*" $info(CancelledInstallAction)]
set conf(rollbackFiles) {}

set conf(modes) "Standard Default Silent"
if {!$conf(windows)} { lappend conf(modes) "Console" }

set info(Installer)     $conf(exe)
set info(InstallSource) [file dirname $conf(exe)]

if {[llength [glob -nocomplain -dir $conf(vfs) solid.*]]} {
set info(InstallHasSolidArchives) 1
}

SafeSet info(UpgradeInstall)  [expr {[string trim $info(UpgradeApplicationID)] ne ""}]

::InstallJammer::ReadMessageCatalog messages

::InstallJammer::ParseCommandLineArguments $::argv

if {$info(GuiMode)} {
SourceCachedFile gui.tcl
InitGui
}

::InstallJammer::CommonPostInit

if {$info(ExtractSolidArchivesOnStartup)} {
::InstallJammer::UnpackSolidArchives 1
}

if {$::tcl_platform(platform) eq "unix"} {
if {$info(RequireRoot) && !$info(UserIsRoot)} {
if {!$info(PromptForRoot)} {
::InstallJammer::Message -title "Root Required" -message  [::InstallJammer::SubstText "<%RequireRootText%>"]
::exit 1
}

if {$info(PromptForRoot)} {
set msg [::InstallJammer::SubstText "<%PromptForRootText%>"]
set cmd [concat [list [info nameofexecutable]] $::argv]
::InstallJammer::ExecAsRoot $cmd -message $msg
::exit 0
}
}

variable ::InstallJammer::VirtualTextSetByCommandLine
if {$info(RootInstallDir) ne "" && $info(UserIsRoot)
&& ![info exists VirtualTextSetByCommandLine(InstallDir)]} {
set info(InstallDir) $info(RootInstallDir)
}
}

::InstallJammer::InitSetup
::InstallJammer::InitFiles

if {$conf(windows)} {
set key {HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion}
catch {
set info(UserInfoName)    [registry get $key RegisteredOwner]
set info(UserInfoCompany) [registry get $key RegisteredOrganization]
}
}

foreach var [list InstallDir ProgramFolderName] {
set info($var) [::InstallJammer::SubstText <%$var%>]
set info(Original$var) $info($var)
}

::InstallAPI::SetVirtualText -virtualtext ProgramFolderAllUsers  -command ::InstallJammer::ModifyProgramFolder

if {$info(UpgradeInstall)} {
::InstallJammer::ReadPreviousInstall
}

::InstallJammer::SelectSetupType

::InstallJammer::LoadTwapi

if {$conf(threaded)} {
set ::tid [installkit::newThread thread::wait]
thread::send $::tid [list set conf(windows) $conf(windows)]
thread::send $::tid [list set conf(threaded) $conf(threaded)]
thread::send $::tid [list set info(Ext) $info(Ext)]
thread::send $::tid [list set info(Temp) $info(Temp)]
thread::send $::tid [list set info(TempRoot) $info(TempRoot)]
thread::send $::tid [list set info(Platform) $info(Platform)]
thread::send $::tid [list eval $::InstallJammer::files(common.tcl)]
thread::send -async $::tid ::installkit::base
}
}

::InstallJammer::InitInstall

InstallComponent E3CE5D6E-1F59-45F5-AFFB-D154A771D21B -setup Install -type pane -title {Welcome Screen} -component Welcome -command reorder -active Yes -parent Standard
InstallComponent 36E6FB50-375B-4B44-A060-2120BC76845A -setup Install -type pane -conditions {7D6FCFEE-6237-44E5-A6C8-67C58D62AAC0 B0827C4F-72DE-4896-9D47-15D73177AD58} -title {Custom Text Pane 1} -component CustomTextPane1 -command insert -active Yes -parent Standard
Condition 7D6FCFEE-6237-44E5-A6C8-67C58D62AAC0 -active Yes -parent 36E6FB50-375B-4B44-A060-2120BC76845A -title {Execute Script Condition} -component ExecuteScriptCondition -TreeObject::id 7D6FCFEE-6237-44E5-A6C8-67C58D62AAC0
Condition B0827C4F-72DE-4896-9D47-15D73177AD58 -active Yes -parent 36E6FB50-375B-4B44-A060-2120BC76845A -title {File Exists Condition} -component FileExistsCondition -TreeObject::id B0827C4F-72DE-4896-9D47-15D73177AD58
InstallComponent F6F11D84-22F8-49A3-918D-03A8EF17D87B -setup Install -type action -title {Launch Web Browser} -component LaunchWebBrowser -command reorder -active Yes -parent 36E6FB50-375B-4B44-A060-2120BC76845A
InstallComponent FCF679A0-2B02-495D-BA7A-B4C99FEE93B8 -setup Install -type pane -conditions {81B7D747-99EA-4757-B9E3-CDC7CAC26EB0 DF91F224-3899-424E-879F-8E5F60C06E24} -title {Select Destination} -component SelectDestination -command insert -active Yes -parent Standard
Condition 81B7D747-99EA-4757-B9E3-CDC7CAC26EB0 -active Yes -parent FCF679A0-2B02-495D-BA7A-B4C99FEE93B8 -title {Script Condition} -component ScriptCondition -TreeObject::id 81B7D747-99EA-4757-B9E3-CDC7CAC26EB0
Condition DF91F224-3899-424E-879F-8E5F60C06E24 -active Yes -parent FCF679A0-2B02-495D-BA7A-B4C99FEE93B8 -title {File Permission Condition} -component FilePermissionCondition -TreeObject::id DF91F224-3899-424E-879F-8E5F60C06E24
InstallComponent AE0C668C-FB50-4AA0-924A-8A4EF992E7BD -setup Install -type pane -conditions 7CDC350B-9C0A-43BE-9C43-EFE450DE6185 -title {Custom Text Pane 1} -component CustomTextPane1 -command insert -active Yes -parent Standard
Condition 7CDC350B-9C0A-43BE-9C43-EFE450DE6185 -active Yes -parent AE0C668C-FB50-4AA0-924A-8A4EF992E7BD -title {Execute Script Condition} -component ExecuteScriptCondition -TreeObject::id 7CDC350B-9C0A-43BE-9C43-EFE450DE6185
InstallComponent C567D000-B29A-4EEF-9003-51BDE7CB5E95 -setup Install -type action -title {Execute External Program} -component ExecuteExternalProgram -active Yes -parent AE0C668C-FB50-4AA0-924A-8A4EF992E7BD
InstallComponent A06DD6A5-A619-4713-8EA7-C1010EB4800F -setup Install -type pane -title {Start Copying Files} -component StartCopyingFiles -active Yes -parent Standard
InstallComponent BC0409EB-AB66-4D71-895E-E9F8377574D8 -setup Install -type pane -title {Copying Files} -component CopyFiles -active Yes -parent Standard
InstallComponent BD8BB63B-39AB-4CD5-8A7D-B4226FD677A1 -setup Install -type action -title {Disable Buttons} -component ModifyWidget -active Yes -parent BC0409EB-AB66-4D71-895E-E9F8377574D8
InstallComponent 5896FAD3-E5EB-4488-BD20-4FA9615D4583 -setup Install -type action -title {Execute Action} -component ExecuteAction -active Yes -parent BC0409EB-AB66-4D71-895E-E9F8377574D8
InstallComponent BF950757-3DD1-4280-B6B0-1B6D0D5B6215 -setup Install -type action -title {Move Forward} -component MoveForward -active Yes -parent BC0409EB-AB66-4D71-895E-E9F8377574D8
InstallComponent 7DF6F9D7-CF7E-4A69-B0AB-440813123C44 -setup Install -type pane -title {Setup Complete} -component SetupComplete -active Yes -parent Standard
InstallComponent 68C6794D-56E8-4272-B2B2-62B1B81544C8 -setup Install -type pane -title {Copying Files} -component CopyFiles -active Yes -parent Default
InstallComponent AD4D435F-1633-4921-8003-469AF004E7F8 -setup Install -type action -title {Disable Buttons} -component ModifyWidget -active Yes -parent 68C6794D-56E8-4272-B2B2-62B1B81544C8
InstallComponent 3B468816-5F97-4C2B-AA2D-11CA99A2B3DF -setup Install -type action -title {Execute Action} -component ExecuteAction -active Yes -parent 68C6794D-56E8-4272-B2B2-62B1B81544C8
InstallComponent E3F39B14-0441-492F-AC14-CA3EAF4F0E27 -setup Install -type action -title {Move Forward} -component MoveForward -active Yes -parent 68C6794D-56E8-4272-B2B2-62B1B81544C8
InstallComponent 6B8FE306-976D-49F6-A84E-5CF7A80643EB -setup Install -type pane -title {Setup Complete} -component SetupComplete -active Yes -parent Default
InstallComponent B53D1E8D-8B34-4F6F-B894-78020CA6231D -setup Install -type action -title {Console Ask Yes Or No} -component ConsoleAskYesOrNo -active Yes -parent Console
InstallComponent 6A2A84CC-B4CD-44AB-B51A-8A589DB5D613 -setup Install -type action -conditions 4DA7EA73-19F5-4B17-A1DB-B7963F650223 -title Exit -component Exit -command insert -active Yes -parent Console
Condition 4DA7EA73-19F5-4B17-A1DB-B7963F650223 -active Yes -parent 6A2A84CC-B4CD-44AB-B51A-8A589DB5D613 -title {String Is Condition} -component StringIsCondition -TreeObject::id 4DA7EA73-19F5-4B17-A1DB-B7963F650223
InstallComponent 16C944AD-C102-410B-A75B-3C63E59429F4 -setup Install -type action -conditions 407A22BB-EB05-4A04-9855-B8FAF6A0EF41 -title {Console Get User Input} -component ConsoleGetUserInput -command insert -active Yes -parent Console
Condition 407A22BB-EB05-4A04-9855-B8FAF6A0EF41 -active Yes -parent 16C944AD-C102-410B-A75B-3C63E59429F4 -title {File Permission Condition} -component FilePermissionCondition -TreeObject::id 407A22BB-EB05-4A04-9855-B8FAF6A0EF41
InstallComponent 7BDE520D-4F83-4E61-946D-0D2A630FC6B1 -setup Install -type action -title {Console Message} -component ConsoleMessage -active Yes -parent Console
InstallComponent 3F05A986-ED3D-4D1E-A1C7-FE825393A1BC -setup Install -type action -title {Execute Action} -component ExecuteAction -active Yes -parent Console
InstallComponent E2CBC5B8-8152-442F-8D30-33F028FA0F28 -setup Install -type action -title {Console Message} -component ConsoleMessage -active Yes -parent Console
InstallComponent 3F2AAA22-FFD4-4CEA-A111-03D512B03978 -setup Install -type action -title Exit -component Exit -active Yes -parent Console
InstallComponent 8DB7EAB4-69DE-43A7-B1A0-07091D96E09A -setup Install -type action -title {Execute Action} -component ExecuteAction -active Yes -parent Silent
InstallComponent 95D2767E-F5AA-4A5E-BB8E-70920EFF1CC4 -setup Install -type action -title Exit -component Exit -active Yes -parent Silent


proc ::ThemeMain {} {
::InstallJammer::InstallMain
}

if {![info exists ::InstallJammer]} { ThemeMain }

