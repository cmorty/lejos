Archive member included because of file (symbol)

/usr/local/src/arm-elf-tools/bin/../arm-elf/lib/libc.a(memcpy.o)
                              memory.o (memcpy)

Allocating common symbols
Common symbol       size              file

installedBinary     0x4               language.o
last_sys_time       0x4               main.o
noSuchMethodError   0x4               exceptions.o
stackTop            0x4               interpreter.o
tempInt             0x2               interpreter.o
outOfMemoryError    0x4               exceptions.o
old_sensor_values   0x6               poll.o
throttle_count      0x1               poll.o
classCastException  0x4               exceptions.o
nullPointerException
                    0x4               exceptions.o
throttle            0x1               poll.o
gRequestCode        0x1               interpreter.o
illegalStateException
                    0x4               exceptions.o
gMakeRequest        0x1               interpreter.o
tempBytePtr         0x4               interpreter.o
threadQ             0x28              threads.o
region              0x4               main.o
tempConstRec        0x4               interpreter.o
tempWordPtr         0x4               interpreter.o
tempFloat           0x4               interpreter.o
illegalArgumentException
                    0x4               exceptions.o
currentThread       0x4               threads.o
arithmeticException
                    0x4               exceptions.o
last_time           0xc               sensors.o
bootThread          0x4               main.o
poller              0x4               poll.o
localsBase          0x4               interpreter.o
arrayIndexOutOfBoundsException
                    0x4               exceptions.o
error               0x4               exceptions.o
stackOverflowError  0x4               exceptions.o
gThreadCounter      0x1               threads.o
interruptedException
                    0x4               exceptions.o
pc                  0x4               interpreter.o
tempStackWord       0x4               interpreter.o
illegalMonitorStateException
                    0x4               exceptions.o
last_ad_time        0x4               main.o
old_button_state    0x2               poll.o
tempByte            0x1               interpreter.o
gProgramNumber      0x1               threads.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .text set to 0x202000
LOAD crt0.o
LOAD main.o
LOAD native.o
LOAD interpreter.o
LOAD threads.o
LOAD exceptions.o
LOAD memory.o
LOAD language.o
LOAD sensors.o
LOAD poll.o
LOAD /usr/local/src/arm-elf-tools/bin/../arm-elf/lib/libc.a
                0x00008000                PROVIDE (__executable_start, 0x8000)
                0x00008000                . = 0x8000

.interp
 *(.interp)

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)

.rela.dyn
 *(.rela.init)
 *(.rela.text .rela.text.* .rela.gnu.linkonce.t.*)
 *(.rela.fini)
 *(.rela.rodata .rela.rodata.* .rela.gnu.linkonce.r.*)
 *(.rela.data .rela.data.* .rela.gnu.linkonce.d.*)
 *(.rela.tdata .rela.tdata.* .rela.gnu.linkonce.td.*)
 *(.rela.tbss .rela.tbss.* .rela.gnu.linkonce.tb.*)
 *(.rela.ctors)
 *(.rela.dtors)
 *(.rela.got)
 *(.rela.bss .rela.bss.* .rela.gnu.linkonce.b.*)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.init
 *(.init)

.plt
 *(.plt)

.text           0x00202000     0x4f70
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00202000       0x10 crt0.o
                0x00202000                _start
 .text          0x00202010      0x1b0 main.o
                0x00202028                assert_hook
                0x00202024                switch_thread_hook
                0x0020202c                run
                0x00202020                handle_uncaught_exception
                0x00202174                nxt_main
                0x00202010                get_sys_time_impl
 .text          0x002021c0      0x4e0 native.o
                0x002021c0                dispatch_native
 .text          0x002026a0     0x1e38 interpreter.o
                0x0020286c                engine
                0x002027b4                array_store_helper
                0x00202708                array_load_helper
                0x002026a0                do_goto
                0x002026e0                do_isub
 .text          0x002044d8      0xb14 threads.o
                0x0020465c                dequeue_thread
                0x002046e8                enter_monitor
                0x00204778                monitor_wait
                0x00204504                update_stack_frame
                0x00204938                set_thread_priority
                0x002049e0                monitor_notify
                0x00204564                monitor_notify_unchecked
                0x00204af4                switch_thread
                0x00204658                join_thread
                0x002046b4                enqueue_thread
                0x00204638                exit_monitor
                0x002044d8                current_stackframe
                0x00204828                init_thread
                0x00204528                update_registers
 .text          0x00204fec      0x30c exceptions.o
                0x00204fec                throw_exception
                0x002051f0                init_exceptions
 .text          0x002052f8     0x1138 memory.o
                0x00205a34                new_primitive_array
                0x00206240                new_object_checked
                0x00205c28                reallocate_array
                0x00205868                new_object_for_class
                0x00205530                getRegionAddress
                0x00205480                memory_add_region
                0x00205cd0                new_multi_array
                0x0020551c                getHeapFree
                0x002053bc                store_word
                0x002054e4                deallocate
                0x002056ec                memcheck_allocate
                0x00205320                comp_array_size
                0x002053f0                make_word
                0x00205508                getHeapSize
                0x00205390                get_word
                0x002052f8                zero_mem
                0x00205460                memory_init
                0x00205540                free_array
                0x0020559c                allocate
                0x00205354                get_array_size
 .text          0x00206430      0x708 language.o
                0x0020659c                dispatch_special
                0x00206a4c                dispatch_special_checked
                0x00206438                find_method
                0x002064c8                do_return
                0x002068a4                instance_of
                0x002067dc                dispatch_static_initializer
                0x00206430                get_class_index
                0x0020690c                dispatch_virtual
 .text          0x00206b38      0x1f0 sensors.o
                0x00206b44                check_for_data
                0x00206cf8                init_sensors
                0x00206b38                read_buttons
                0x00206b50                activate
                0x00206c08                poll_sensors
                0x00206bac                passivate
 .text          0x00206d28      0x1a8 poll.o
                0x00206d70                poll_inputs
                0x00206d28                set_poller
 .text          0x00206ed0       0xa0 /usr/local/src/arm-elf-tools/bin/../arm-elf/lib/libc.a(memcpy.o)
                0x00206ed0                memcpy
 *(.text.*personality*)
 *(.gnu.warning)
 *(.glue_7t)
 .glue_7t       0x00206f70        0x0 crt0.o
 .glue_7t       0x00206f70        0x0 main.o
 .glue_7t       0x00206f70        0x0 native.o
 .glue_7t       0x00206f70        0x0 interpreter.o
 .glue_7t       0x00206f70        0x0 threads.o
 .glue_7t       0x00206f70        0x0 exceptions.o
 .glue_7t       0x00206f70        0x0 memory.o
 .glue_7t       0x00206f70        0x0 language.o
 .glue_7t       0x00206f70        0x0 sensors.o
 .glue_7t       0x00206f70        0x0 poll.o
 .glue_7t       0x00206f70        0x0 /usr/local/src/arm-elf-tools/bin/../arm-elf/lib/libc.a(memcpy.o)
 *(.glue_7)
 .glue_7        0x00206f70        0x0 crt0.o
 .glue_7        0x00206f70        0x0 main.o
 .glue_7        0x00206f70        0x0 native.o
 .glue_7        0x00206f70        0x0 interpreter.o
 .glue_7        0x00206f70        0x0 threads.o
 .glue_7        0x00206f70        0x0 exceptions.o
 .glue_7        0x00206f70        0x0 memory.o
 .glue_7        0x00206f70        0x0 language.o
 .glue_7        0x00206f70        0x0 sensors.o
 .glue_7        0x00206f70        0x0 poll.o
 .glue_7        0x00206f70        0x0 /usr/local/src/arm-elf-tools/bin/../arm-elf/lib/libc.a(memcpy.o)

.fini
 *(.fini)
                0x00206f70                PROVIDE (__etext, .)
                0x00206f70                PROVIDE (_etext, .)
                0x00206f70                PROVIDE (etext, .)

.rodata         0x00206f70       0x20
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00206f70       0x20 sensors.o

.rodata1
 *(.rodata1)

.ARM.extab
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x00206f90                __exidx_start = .

.ARM.exidx
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
                0x00206f90                __exidx_end = .

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame
 *(.eh_frame)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)
                0x00207090                . = (ALIGN (0x100) + (. & 0xff))

.eh_frame
 *(.eh_frame)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00207090        0x0
                0x00207090                PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                0x00207090                PROVIDE (__preinit_array_end, .)

.init_array     0x00207090        0x0
                0x00207090                PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*))
 *(.init_array)
                0x00207090                PROVIDE (__init_array_end, .)

.fini_array     0x00207090        0x0
                0x00207090                PROVIDE (__fini_array_start, .)
 *(.fini_array)
 *(SORT(.fini_array.*))
                0x00207090                PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin*.o(.ctors)
 *(EXCLUDE_FILE(*crtend*.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin*.o(.dtors)
 *(EXCLUDE_FILE(*crtend*.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got.plt)
 *(.got)

.data           0x00207090      0x840
                0x00207090                __data_start = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00207090        0x0 crt0.o
 .data          0x00207090      0x834 main.o
 .data          0x002078c4        0x0 native.o
 .data          0x002078c4        0x0 interpreter.o
 .data          0x002078c4        0x0 threads.o
 .data          0x002078c4        0x0 exceptions.o
 .data          0x002078c4        0xc memory.o
                0x002078c4                typeSize
 .data          0x002078d0        0x0 language.o
 .data          0x002078d0        0x0 sensors.o
 .data          0x002078d0        0x0 poll.o
 .data          0x002078d0        0x0 /usr/local/src/arm-elf-tools/bin/../arm-elf/lib/libc.a(memcpy.o)
 *(.gnu.linkonce.d.*personality*)

.data1
 *(.data1)
                0x002078d0                _edata = .
                0x002078d0                PROVIDE (edata, .)
                0x002078d0                __bss_start = .
                0x002078d0                __bss_start__ = .

.bss            0x002078d0      0x100
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x002078d0        0x0 crt0.o
 .bss           0x002078d0        0x4 main.o
                0x002078d0                sys_time
 .bss           0x002078d4        0x0 native.o
 .bss           0x002078d4        0x0 interpreter.o
 .bss           0x002078d4        0x0 threads.o
 .bss           0x002078d4       0x1c exceptions.o
 .bss           0x002078f0        0x8 memory.o
 .bss           0x002078f8        0x8 language.o
 .bss           0x00207900       0x18 sensors.o
                0x00207900                sensors
 .bss           0x00207918        0x0 poll.o
 .bss           0x00207918        0x0 /usr/local/src/arm-elf-tools/bin/../arm-elf/lib/libc.a(memcpy.o)
 *(COMMON)
 COMMON         0x00207918       0x10 main.o
                0x00207918                last_sys_time
                0x0020791c                region
                0x00207920                bootThread
                0x00207924                last_ad_time
 COMMON         0x00207928       0x25 interpreter.o
                0x00207928                stackTop
                0x0020792c                tempInt
                0x0020792e                gRequestCode
                0x0020792f                gMakeRequest
                0x00207930                tempBytePtr
                0x00207934                tempConstRec
                0x00207938                tempWordPtr
                0x0020793c                tempFloat
                0x00207940                localsBase
                0x00207944                pc
                0x00207948                tempStackWord
                0x0020794c                tempByte
 *fill*         0x0020794d        0x3 00
 COMMON         0x00207950       0x2e threads.o
                0x00207950                threadQ
                0x00207978                currentThread
                0x0020797c                gThreadCounter
                0x0020797d                gProgramNumber
 *fill*         0x0020797e        0x2 00
 COMMON         0x00207980       0x30 exceptions.o
                0x00207980                noSuchMethodError
                0x00207984                outOfMemoryError
                0x00207988                classCastException
                0x0020798c                nullPointerException
                0x00207990                illegalStateException
                0x00207994                illegalArgumentException
                0x00207998                arithmeticException
                0x0020799c                arrayIndexOutOfBoundsException
                0x002079a0                error
                0x002079a4                stackOverflowError
                0x002079a8                interruptedException
                0x002079ac                illegalMonitorStateException
 COMMON         0x002079b0        0x4 language.o
                0x002079b0                installedBinary
 COMMON         0x002079b4        0xc sensors.o
                0x002079b4                last_time
 COMMON         0x002079c0        0xe poll.o
                0x002079c0                old_sensor_values
                0x002079c6                throttle_count
                0x002079c7                throttle
                0x002079c8                poller
                0x002079cc                old_button_state
                0x002079d0                . = ALIGN ((. != 0x0)?0x4:0x1)
 *fill*         0x002079ce        0x2 00
                0x002079d0                _bss_end__ = .
                0x002079d0                __bss_end__ = .
                0x002079d0                . = ALIGN (0x4)
                0x002079d0                . = ALIGN (0x4)
                0x002079d0                __end__ = .
                0x002079d0                _end = .
                0x002079d0                PROVIDE (end, .)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0xb4
 *(.comment)
 .comment       0x00000000       0x12 main.o
 .comment       0x00000012       0x12 native.o
 .comment       0x00000024       0x12 interpreter.o
 .comment       0x00000036       0x12 threads.o
 .comment       0x00000048       0x12 exceptions.o
 .comment       0x0000005a       0x12 memory.o
 .comment       0x0000006c       0x12 language.o
 .comment       0x0000007e       0x12 sensors.o
 .comment       0x00000090       0x12 poll.o
 .comment       0x000000a2       0x12 /usr/local/src/arm-elf-tools/bin/../arm-elf/lib/libc.a(memcpy.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 /usr/local/src/arm-elf-tools/bin/../arm-elf/lib/libc.a(memcpy.o)

.debug_pubnames
                0x00000000       0x1d
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x1d /usr/local/src/arm-elf-tools/bin/../arm-elf/lib/libc.a(memcpy.o)

.debug_info     0x00000000      0x10a
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000      0x10a /usr/local/src/arm-elf-tools/bin/../arm-elf/lib/libc.a(memcpy.o)

.debug_abbrev   0x00000000       0xa6
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xa6 /usr/local/src/arm-elf-tools/bin/../arm-elf/lib/libc.a(memcpy.o)

.debug_line     0x00000000       0xd9
 *(.debug_line)
 .debug_line    0x00000000       0xd9 /usr/local/src/arm-elf-tools/bin/../arm-elf/lib/libc.a(memcpy.o)

.debug_frame    0x00000000       0x28
 *(.debug_frame)
 .debug_frame   0x00000000       0x28 /usr/local/src/arm-elf-tools/bin/../arm-elf/lib/libc.a(memcpy.o)

.debug_str      0x00000000       0xe3
 *(.debug_str)
 .debug_str     0x00000000       0xe3 /usr/local/src/arm-elf-tools/bin/../arm-elf/lib/libc.a(memcpy.o)

.debug_loc      0x00000000       0xdb
 *(.debug_loc)
 .debug_loc     0x00000000       0xdb /usr/local/src/arm-elf-tools/bin/../arm-elf/lib/libc.a(memcpy.o)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.stack          0x00080000        0x0
                0x00080000                _stack = .
 *(.stack)

.note.gnu.arm.ident
 *(.note.gnu.arm.ident)

.ARM.attributes
 *(.ARM.attributes)

/DISCARD/
 *(.note.GNU-stack)
OUTPUT(nxt_lejos elf32-littlearm)
