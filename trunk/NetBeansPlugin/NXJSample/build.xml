<?xml version="1.0" encoding="UTF-8"?>

<project name="NXJTemplate" default="default" basedir=".">
  <description>Builds, tests, and runs the project NXJTemplate3.</description>


  <property environment = "env"/>
  <property file="nbproject/project.properties"/>
  <property name="src" location="src"/>
  <property name="build" location="build"/>


<path id="lejos.pc">
    <fileset dir="${nxj.home}/lib/pc">
	<include name="**/*.jar" />
    </fileset>
</path>
  <path id="lejos.nxt">
	<fileset dir="${nxj.home}/lib/nxt">
		<include name="**/*.jar" />
	</fileset>
</path>

  <target name="checkHome">
        <echo> nxj-home="${nxj.home}"</echo>
    <echo> classes-jar="${nxj.classes.jar}"</echo>
        <echo> path id ="${nxj.home}/lib/pc"</echo>
    <fail message="NXJ_HOME is missing or does not point to classes.jar" >
      <condition>
        <not>
          <isset property="nxj.classes.jar"/>
        </not>
      </condition>
    </fail>
  </target>

  <target name="clean" description="clean up all generated files">
    <delete dir = "${build.dir}"/>
    <delete dir = "${dist.dir}"/>
    <mkdir dir="${build.dir}" />
    <mkdir dir =  "${dist.dir}"/>
  </target>

  <target name="compile" depends="checkHome,clean"
        description="compile the source directory " >
     <echo> compiling = ${src}  </echo>
     <echo> using  classes "${nxj.classes.jar}"</echo>
    <!-- Compile the java code from ${src} to ${build}  -->
    <javac srcdir="${src}" destdir="${build}">
      <bootclasspath>
        <pathelement location="${nxj.classes.jar}"/>
      </bootclasspath>
    </javac>
  </target>

   <target name="compile-single" depends="checkHome,clean"
        description="compile a single selected file " >
    <echo> compiling single = ${javac.includes} </echo>
   <fail unless="javac.includes">Must select a file in the IDE</fail>
    <!-- Compile the java code from ${src} to ${build}  -->
    <echo> using  classes "${nxj.classes.jar}"</echo>
    <javac srcdir="${src}" destdir="${build}" >
      <bootclasspath>
        <pathelement location="${nxj.classes.jar}"/>

      </bootclasspath>
      <include name="${javac.includes}"/>
    </javac>
  </target>
  
  <target name="link" depends="compile" description="link the binary ">
  <!-- Link the binary and create a signature file -->
      <echo> link class = ${class}</echo>
    <property name="binary" value="${class}.nxj" />
    <echo> binary name = ${binary}</echo>
      <java classname="lejos.pc.tools.NXJLink" failonerror="true">
          <classpath refid="lejos.pc" />
          <arg value="--bootclasspath" />
          <arg pathref="lejos.nxt" />
          <arg value="--classpath" />
          <arg path="${build}" />
          <arg value="--writeorder" />
          <arg value="LE" />
          <arg value="-o" />
          <arg value="${build}/${binary}" />
          <arg value="-v" />
          <arg value="${class}" />
    </java>
    <echo> success linked = ${class}</echo>
  </target>

  <target name="upload" depends="link" description="upload the binary">
    <echo> uploading ${class} </echo>
	<java classname="lejos.pc.tools.NXJUpload" fork="true" failonerror="true">
		<jvmarg value="-Djava.library.path=${nxj.library.path}" />
		<jvmarg value="-Dnxj.home=${nxj.home}" />
		<classpath refid="lejos.pc" />
		<arg value="${build}/${binary}" />
	</java>
  </target>

  <target name="run-single">
    <echo> run single </echo>
    <echo> run class = ${run.class} </echo>
    <antcall target="uploadandrun">
      <param name="class" value="${run.class}"/>
      <param name="binary" value="${run.class}.nxj" />
    </antcall>
  </target>

  <target name="run">
    <echo> run class = ${main.class}</echo>  
    <antcall target="uploadandrun">
      <param name="class" value="${main.class}"/>
    </antcall>
  </target>

  <target name="uploadandrun" depends="link"
        description="upload and run the binary" >
<java classname="lejos.pc.tools.NXJUpload" fork="true" failonerror="true">
			<jvmarg value="-Djava.library.path=${nxj.library.path}" />
			<jvmarg value="-Dnxj.home=${nxj.home}" />
			<classpath refid="lejos.pc" />
			<arg value="-r" />
			<arg value="${build}/${binary}" />
		</java>
  </target>

  <target  name="-javadoc-build" depends="clean" >
    <mkdir dir="${dist.javadoc.dir}"/>
    <javadoc additionalparam="${javadoc.additionalparam}" author="${javadoc.author}" charset="UTF-8" destdir="${dist.javadoc.dir}" docencoding="UTF-8"  failonerror="true" noindex="${javadoc.noindex}" nonavbar="${javadoc.nonavbar}" notree="${javadoc.notree}" private="${javadoc.private}" source="${javac.source}" splitindex="${javadoc.splitindex}" use="${javadoc.use}" useexternalfile="true" version="${javadoc.version}" windowtitle="${javadoc.windowtitle}">
      <classpath>
        <path path="${javac.classpath}"/>
      </classpath>
      <fileset dir="${src.dir}" excludes="${excludes}" includes="${includes}">
        <filename name="**/*.java"/>
      </fileset>
    </javadoc>
  </target>
  <target name="-javadoc-browse" depends="clean,-javadoc-build" if="netbeans.home"  unless="no.javadoc.preview">
    <nbbrowse file="${dist.javadoc.dir}/index.html"/>
  </target>
  <target name="javadoc" depends="clean,-javadoc-build,-javadoc-browse" description="Build Javadoc." />


<!--  used only for modifying the NXJplugin -->
    <target name="zipme" description="Zip the application to the sample project">
    <property name="build.classes.dir" location="/build"/>
     <property name="plugin" location="../NXJPlugin2/src/nxjplugincode/"/>
<echo> address=${plugin} </echo >
   <zip basedir="." destfile="${plugin}/NXJTemplateProject.zip">
        <exclude name="**/build/"/>
        <exclude name="**/dist/"/>
        <exclude name="**/nbproject/private/"/>
        </zip>
</target>



</project>