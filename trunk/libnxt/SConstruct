from glob import glob

auto_libs = ''

# Detect the system's endianness
from sys import byteorder
if byteorder == 'big':
	endian = '_NXT_BIG_ENDIAN'
else:
	endian = '_NXT_LITTLE_ENDIAN'

BuildEnv = Environment(CCFLAGS=['-Wall', '-std=gnu99',
				'-g', '-ggdb', '-D' + endian])
if auto_libs:
	BuildEnv.ParseConfig('pkg-config --cflags --libs ' + auto_libs)

BuildEnv.Command('flash_routine.h',
		 ['flash_routine.h.base',
		  'flash_write/flash.bin'],
		 './make_flash_header.py')

Default(BuildEnv.Library('nxt',
			 [x for x in glob('*.c')
			  if not x.startswith('main_')],
			 LIBS='usb'))

Default(BuildEnv.Program('fwflash', glob('main_fwflash.c'),
			 LIBS=['usb', 'nxt'], LIBPATH='.'))

Default(BuildEnv.Program('runc', glob('main_runc.c'),
			 LIBS=['usb', 'nxt'], LIBPATH='.'))
			 		 
Default(BuildEnv.Program('nxjflash', glob('main_nxjflash.c'),
			LIBS=['usb', 'nxt'], LIBPATH='.'))
			 
BuildEnv.Program('sambaget', glob('main_sambaget.c'),
		 LIBS=['usb', 'nxt'], LIBPATH='.')
		 
Default(BuildEnv.SharedLibrary('jlibnxt', glob('main_jlibnxt.c'),
		 LIBS=['usb', 'nxt'], LIBPATH='.'))
