<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>lejos</groupId>
        <artifactId>lejos-parent</artifactId>
        <version>0.9-SNAPSHOT</version>
        <relativePath>../parent/pom.xml</relativePath>
    </parent>

    <artifactId>pccomms</artifactId>

    <name>${project.artifactId} : Remote classes that execute on a PC.</name>
    <description>Remote classes that execute on a PC and communicate with the lejos jvm NXT hardware.</description>

    <scm>
        <connection>scm:svn:https://lejos.svn.sourceforge.net/svnroot/lejos/trunk/${project.artifactId}</connection>
        <developerConnection>scm:svn:https://lejos.svn.sourceforge.net/svnroot/lejos/trunk/${project.artifactId}</developerConnection>
    </scm>
    <url>http://lejos.sourceforge.net/</url>
    
    <packaging>jar</packaging>

    <build>
        <resources>
            <!-- copy to canonical source dir @todo better solution is to move project source folders under a common parent folder, eg: 'src/main/java'. -->
            <resource>
                <directory>lejos</directory>
                <targetPath>../../src/main/java/lejos</targetPath>
            </resource>

            <resource>
                <!-- @todo maybe move such resource files to canonical 'resource' tree? -->
                <directory>.</directory>
                <includes>
                    <include>lejos/util/jni/*.properties</include>
                    <include>lejos/pc/comm/*.bin</include>
                </includes>
            </resource>
        </resources>

        <plugins>

            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <!-- makes 'clean' phase also delete source/test files that were copied to canonical locations. @todo see todo above. -->
                    <filesets>
                        <fileset>
                            <directory>src</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <!-- For maven lifecycle order, see: http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#Lifecycle_Reference -->
                    
                    <!-- Copy common classes before compile -->
                    <execution>
                        <id>pre-compile</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <ant antfile="copy.xml" target="copy"/>
                            </target>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${source.version}</source>
                    <target>${target.version}</target>

                    <verbose>true</verbose>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>

                    <optimize>true</optimize>
                </configuration>
            </plugin>

        </plugins>
        
    </build>

    <dependencies>
        <dependency>
            <groupId>net.sf.bluecove</groupId>
            <artifactId>bluecove</artifactId>
            <version>2.1.0</version>
        </dependency>

        <dependency>
            <groupId>net.sf.bluecove</groupId>
            <artifactId>bluecove-gpl</artifactId>
            <version>2.1.0</version>
        </dependency>

        <dependency>
            <groupId>stax</groupId>
            <artifactId>stax-api</artifactId>
            <version>1.0.1</version>
        </dependency>
    </dependencies>

</project>
