<!-- build file for building the os dependent parts of the lejos distribution -->
<!-- do not change this file -->

<project name="leJOS distribution" default="build" basedir=".">
	
	<!-- Setting up the global properties for the build -->
	<property name="lejos.dist.root" value="${basedir}/.."/>
	<property name="lejos.dist.bin" value="${lejos.dist.root}/bin"/>
	<property name="lejos.dist.src" value="${lejos.dist.root}/src"/>
	<property name="plat.unix.src" value="${lejos.dist.src}/nxtvm/platform/unix"/>
	<property name="javavm.src" value="${lejos.dist.src}/nxtvm/javavm"/>
    <condition property="jni.include.dir" value="${java.home}/../include">
		<or>
			<os name="Linux"/>
			<os family="windows"/>
			<os name="SunOS"/>
		</or>			
	</condition>
	<condition property="jni.include.dir" value="/Developer/SDKs/MacOSX10.5.sdk/System/Library/Frameworks/JavaVM.framework/Versions/Current/Headers/">
		<and>
			<os family="mac"/>
			<matches pattern="^10\.5.*" string="${os.version}"/>
		</and>
	</condition>
	<condition property="jni.include.dir" value="/Developer/SDKs/MacOSX10.4u.sdk/System/Library/Frameworks/JavaVM.framework/Versions/Current/Headers/">
		<and>
			<os family="mac"/>
			<matches pattern="^10\.4.*" string="${os.version}"/>
		</and>
	</condition>
    <condition property="jni.sys.dir" value="${jni.include.dir}/linux">
		<os name="Linux"/>
	</condition>
    <condition property="jni.sys.dir" value="${jni.include.dir}/win32">
    	<os family="windows"/>
	</condition>
    <condition property="jni.sys.dir" value="${jni.include.dir}/solaris">
    	<os name="SunOS"/>
	</condition>
		
	<!-- cpptasks task & type def -->
	<taskdef resource="cpptasks.tasks">
	  <classpath>
	    <pathelement location="${builddir}/cpptasks.jar"/>
	  </classpath>
	</taskdef>
	<typedef resource="cpptasks.types">
	  <classpath>
	    <pathelement location="${builddir}/cpptasks.jar"/>
	  </classpath>
	</typedef>
	
	<!-- build the os dependent parts of the lejos distribution --> 
	<target name="build" depends ="clean,libnxt, jbluez, copy.binaries, clear" 
		description="build the os dependent parts of the lejos distribution">
		<echo message="Done."/>
	</target>

  	<!-- cleans the os dependent parts of the lejos distribution -->
	<target name="clean" description="cleans the os dependent parts of the lejos distribution">
	    <!-- move existing files to *.bak -->
		<echo message="saving existing files to .bak files"/>
		<move todir="${lejos.dist.bin}">
			<fileset dir="${lejos.dist.bin}">
				<include name="*.so"/>
				<include name="*.dylib"/>
		      	<exclude name="*.bak"/>
		    </fileset>
		    <mapper type="glob" from="*" to="*.bak"/>
		</move>
  	</target>
  	
  	<!-- clears the transient artifacts generated by the build -->
	<target name="clear" description="clears the transient artifacts generated by the build">
		<delete>
			<fileset dir="${lejos.dist.bin}">
				<include name="*.xml"/>	
		    </fileset>
		</delete>
  	</target>
  		
	<!-- builds libnxt -->
  	<target name="libnxt" description="builds libnxt">
  		<ant antfile="${lejos.dist.src}/libnxt/build.xml" dir="${lejos.dist.src}/libnxt" inheritall="true" />
  	</target>
  	
     <condition property="isMacOs">
	      <os family="mac"/>
	  </condition>

	<!-- builds jbluez -->
  	<target name="jbluez" description="builds jbluez"  unless="isMacOs">
  		<ant antfile="${lejos.dist.src}/jbluez/build.xml" dir="${lejos.dist.src}/jbluez" inheritall="true" />
  	</target>
	
	<!-- copies the binaries -->
	<target name="copy.binaries" description="copies the shared libraries">
		<copy todir="${lejos.dist.bin}">
      		<fileset dir="${lejos.dist.src}/libnxt">
      			<include name="libjlibnxt.so"/>
      			<include name="libjlibnxt.dylib"/>
      		</fileset>
		</copy>
		
		<copy todir="${lejos.dist.bin}">
      		<fileset dir="${lejos.dist.src}/jbluez">
      			<include name="libjbluez.so"/>
      		</fileset>
		</copy>
		
		<!-- adjust permissions -->
  		<chmod perm="755">
  			<fileset dir="${lejos.dist.bin}">
  	      	</fileset>
  		</chmod>
	</target>
</project>
