<!--
  ==================================================
  Buildfile for release of leJOS NXJ
  ==================================================
-->
<project name="leJOS NXJ release" default="release" basedir=".">

	<!-- Setting up the global properties for the build -->
	<property file="build.properties" />
	<property prefix="vars.classes" file="${project.classes}/build.properties" />
	<property prefix="vars.jtools" file="${project.jtools}/build.properties" />
	<property prefix="vars.pccomms" file="${project.pccomms}/build.properties" />
	<property prefix="vars.pctools" file="${project.pctools}/build.properties" />
	<property prefix="vars.scripts" file="${project.scripts}/build.properties" />
	<property prefix="vars.startup" file="${project.startup}/build.properties" />
	<property prefix="vars.charting" file="${project.charting}/build.properties" />

	<property name="sup.dir" value="lejos_nxj" />
	<property name="shared.dir" value="${build.dir}/bin_shared" />
	<property name="unix.dir" value="${build.dir}/bin_unix" />
	<property name="windows.dir" value="${build.dir}/bin_windows" />
	<property name="source.dir" value="${build.dir}/bin_windows" />

	<!-- release leJOS NXJ -->
	<target name="release" depends="clean,distribution.unix,distribution.windows,distribution.source" description="releases leJOS NXJ">
		<!-- notify -->
		<echo message="The packed distribution can be found in ${build.dir} now" />
	</target>

	<!-- cleans the distribution -->
	<target name="clean" description="clean up all generated files">
		<!-- delete transient release folders -->
		<delete dir="${build.dir}" />
	</target>

	<target name="subproject.scripts">
		<echo message="*** entering scripts project" />
		<ant inheritAll="false" dir="${project.scripts}" antfile="build.xml">
			<target name="clean" />
			<target name="all" />
		</ant>
		<copy todir="${unix.dir}/bin">
			<fileset dir="${project.scripts}/${vars.scripts.linux.dir}" />
		</copy>
		<copy todir="${windows.dir}/bin">
			<fileset dir="${project.scripts}/${vars.scripts.windows.dir}" />
		</copy>
		<echo message="*** leaving scripts project" />
	</target>

	<target name="subproject.classes">
		<echo message="*** entering classes project" />
		<ant inheritAll="false" dir="${project.classes}" antfile="build.xml">
			<target name="clean" />
			<target name="classes.jar" />
			<target name="classes.src.zip" />
		</ant>
		<copy todir="${shared.dir}/lib/nxt">
			<fileset file="${project.classes}/${vars.classes.classes.jar}" />
			<fileset file="${project.classes}/${vars.classes.classes.src.zip}" />
		</copy>
		<echo message="*** leaving classes project" />
	</target>

	<target name="subproject.jtools">
		<echo message="*** entering jtools project" />
		<ant inheritAll="false" dir="${project.jtools}" antfile="build.xml">
			<target name="clean" />
			<target name="classes.jar" />
			<target name="classes.src.zip" />
		</ant>
		<copy todir="${shared.dir}/lib/pc">
			<fileset file="${project.jtools}/${vars.jtools.classes.jar}" />
			<fileset file="${project.jtools}/${vars.jtools.classes.src.zip}" />
		</copy>
		<copy todir="${shared.dir}/lib/pc/3rdparty">
			<fileset dir="${project.jtools}/3rdparty/lib">
				<include name="*.jar" />
				<include name="*-src.zip" />
			</fileset>
		</copy>
		<echo message="*** leaving jtools project" />
	</target>

	<target name="subproject.pccomms">
		<echo message="*** entering pccomms project" />
		<ant inheritAll="false" dir="${project.pccomms}" antfile="build.xml">
			<target name="clean" />
			<target name="classes.jar" />
			<target name="classes.src.zip" />
		</ant>
		<copy todir="${shared.dir}/lib/pc">
			<fileset file="${project.pccomms}/${vars.pccomms.classes.jar}" />
			<fileset file="${project.pccomms}/${vars.pccomms.classes.src.zip}" />
		</copy>
		<copy todir="${shared.dir}/lib/pc/3rdparty">
			<fileset dir="${project.pccomms}/3rdparty/lib">
				<include name="*.jar" />
				<include name="*-src.zip" />
			</fileset>
		</copy>
		<echo message="*** leaving pccomms project" />
	</target>

	<target name="subproject.pctools" depends="subproject.pccomms, subproject.jtools">
		<echo message="*** entering pctools project" />
		<ant inheritAll="false" dir="${project.pctools}" antfile="build.xml">
			<target name="clean" />
			<target name="classes.jar" />
			<target name="classes.src.zip" />
		</ant>
		<copy todir="${shared.dir}/lib/pc">
			<fileset file="${project.pctools}/${vars.pctools.classes.jar}" />
			<fileset file="${project.pctools}/${vars.pctools.classes.src.zip}" />
		</copy>
		<copy todir="${shared.dir}/lib/pc/3rdparty">
			<fileset dir="${project.pctools}/3rdparty/lib">
				<include name="*.jar" />
				<include name="*-src.zip" />
			</fileset>
		</copy>
		<echo message="*** leaving pctools project" />
	</target>

	<target name="subproject.charting" depends="subproject.pctools">
		<echo message="*** entering charting logger project" />
		<ant inheritAll="false" dir="${project.charting}" antfile="build.xml">
			<target name="clean" />
			<target name="classes.jar" />
			<target name="classes.src.zip" />
		</ant>
		<copy todir="${shared.dir}/lib/pc">
			<fileset file="${project.charting}/${vars.charting.classes.jar}" />
			<fileset file="${project.charting}/${vars.charting.classes.src.zip}" />
		</copy>
		<copy todir="${shared.dir}/lib/pc/3rdparty">
			<fileset dir="${project.charting}/3rdparty/lib">
				<include name="*.jar" />
				<include name="*-src.zip" />
			</fileset>
		</copy>
		<echo message="*** leaving charting logger project" />
	</target>

	<target name="subproject.startup" depends="subproject.classes, subproject.pctools">
		<echo message="*** entering startup project" />
		<ant inheritAll="false" dir="${project.startup}" antfile="build.xml">
			<target name="clean" />
			<target name="link" />
		</ant>
		<copy todir="${shared.dir}/bin">
			<fileset file="${project.startup}/${vars.startup.startup.bin}" />
			<fileset file="${project.startup}/${vars.startup.startup.debug}" />
		</copy>
		<echo message="*** leaving startup project" />
	</target>

	<!-- copies the run scripts and other binaries -->
	<target name="scripts" depends="subproject.scripts" description="copies the run scripts (nxjc etc.)">
		<copy todir="${release.bin}">
			<fileset dir="${projects.root}/scripts/build/linux">
				<include name="*" />
			</fileset>
			<fileset dir="${projects.root}/scripts/build/windows">
				<include name="*.bat" />
			</fileset>
			<fileset dir="${projects.root}/release/install_scripts">
				<include name="*.bat" />
			</fileset>
		</copy>

		<copy todir="${release.bin}">
			<fileset dir="${projects.root}/snapshot/bin">
				<include name="lejos_nxt_rom.bin" />
			</fileset>
		</copy>

		<copy todir="${release.bin}">
			<fileset dir="${projects.root}/startup/build">
				<include name="StartUpText.bin" />
				<include name="StartUpText.nxd" />
			</fileset>
		</copy>

		<copy todir="${release.pc.libs}">
			<fileset dir="${projects.root}/snapshot/lib/pc">
				<include name="native/**/*.dll" />
				<include name="native/**/*.jnilib" />
			</fileset>
		</copy>
	</target>

	<!-- copies the samples -->
	<target name="samples" description="copies the samples">
		<copy todir="${release.projects}/samples">
			<fileset dir="${projects.root}/samples">
				<exclude name="**/*.nxj" />
				<exclude name="**/*.class" />
				<exclude name="**/.svn" />
				<exclude name=".settings/**" />
				<exclude name="build/**" />
				<exclude name="bin/**" />
				<exclude name="nbproject/private/**" />
			</fileset>
		</copy>
	</target>

	<!-- copies the example project -->
	<target name="example" description="copies the example project">
		<copy todir="${release.projects}/org.lejos.example">
			<fileset dir="${projects.root}/org.lejos.example">
				<exclude name="**/*.nxj" />
				<exclude name="**/.svn" />
				<exclude name=".settings/**" />
				<exclude name="build/**" />
				<exclude name="bin/**" />
				<exclude name="nbproject/private/**" />
			</fileset>
		</copy>
	</target>

	<!-- copies the pc samples -->
	<target name="pcsamples" description="copies the samples">
		<copy todir="${release.projects}/pcsamples">
			<fileset dir="${projects.root}/pcsamples">
				<exclude name="**/.svn" />
				<exclude name=".settings/**" />
				<exclude name=".externalToolBuilders/**" />
				<exclude name="build/**" />
				<exclude name="bin/**" />
				<exclude name="nbproject/private/**" />
			</fileset>
		</copy>
	</target>

	<!-- creates the platform API doc -->
	<target name="platform.doc" depends="" description="generate the platform API doc">
		<mkdir dir="${release.classes.docs}" />
		<copy todir="${release.classes.docs}">
			<fileset dir="${projects.root}/classes">
				<include name="doc" />
			</fileset>
		</copy>
	</target>

	<!-- creates the PC API doc -->
	<target name="pc.doc" depends="" description="generate the platform API doc">
		<mkdir dir="${release.pc.docs}" />
		<javadoc protected="true" windowtitle="leJOS NXJ PC API documentation" author="true" destdir="${release.pc.docs}" source="1.5" classpath="${release.3rdparty.libs}/bluecove.jar;${release.3rdparty.libs}/stax-api-1.0.1.jar" defaultexcludes="yes">
			<fileset dir="${projects.root}/pccomms">
				<include name="lejos/**/*.java" />
			</fileset>
		</javadoc>
	</target>
	
	<!-- TODO sample projects -->
	
	<target name="shared" depends="subproject.classes, subproject.jtools, subproject.pccomms, subproject.pctools, subproject.charting, subproject.startup, subproject.scripts">
		<copy todir="${unix.dir}">
			<fileset dir="${shared.dir}" />
			<fileset dir="${sup.dir}" />
		</copy>
		<copy todir="${windows.dir}">
			<fileset dir="${shared.dir}" />
			<fileset dir="${sup.dir}">
				<exclude name="build/**" />
			</fileset>
		</copy>
	</target>

	<!-- copies the lejos sources -->
	<target name="distribution.source" description="copies the lejos sources">
		
		<!-- TODO copy sources -->
		
		<tar destfile="${build.dir}/${lejos.source.version}.tar.gz" compression="gzip">
			<tarfileset dir="${source.dir}" />
		</tar>
	</target>
	
	<!-- packages the linux distribution -->
	<target name="distribution.unix" description="packages the linux distribution" depends="shared">
		<fixcrlf srcdir="${unix.dir}" eol="lf">
    		<include name="**/*.bat"/>
		    <include name="**/*.txt"/>
		    <include name="**/*.xml"/>
		    <include name="**/*.htm"/>
		    <include name="**/*.html"/>
		</fixcrlf>
		<!-- tar & gzip leJOS Unix distribution -->
		<tar destfile="${build.dir}/${lejos.unix.version}.tar.gz" compression="gzip">
			<tarfileset dir="${unix.dir}" filemode="755">
				<include name="lejos_nxj/bin/nxj*" />
			</tarfileset>
			<tarfileset dir="${unix.dir}">
				<exclude name="lejos_nxj/bin/nxj*" />
			</tarfileset>
		</tar>
	</target>

	<!-- packages the windows distribution -->
	<target name="distribution.windows" description="packages the windows distribution" depends="shared">
		<fixcrlf srcdir="${windows.dir}" eol="crlf">
    		<include name="**/*.bat"/>
		    <include name="**/*.txt"/>
		    <include name="**/*.xml"/>
		    <include name="**/*.htm"/>
		    <include name="**/*.html"/>
		</fixcrlf>
		<!-- zip leJOS windows distribution -->
		<zip destfile="${build.dir}/${lejos.windows.version}.zip">
			<fileset dir="${windows.dir}" />
		</zip>
	</target>

</project>
