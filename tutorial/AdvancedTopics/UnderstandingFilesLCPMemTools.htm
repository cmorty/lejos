<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html dir="ltr" xml:lang="en" lang="en" xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<!-- CSS -->
		<link rel="stylesheet" href="../r_css/lejos-tutorial.css" type="text/css" />

		<!-- ICON -->
		<link rel="shortcut icon" href="../favicon.ico" type="image/x-icon" />
		
	<TITLE>Advanced Topics: files, LCP, Memory, NXJ Tools</TITLE>
	<META NAME="GENERATOR" CONTENT="OpenOffice.org 2.4  (Win32)">
	<META NAME="AUTHOR" CONTENT="Roger">
	<META NAME="CREATED" CONTENT="20080820;13260000">
	<META NAME="CHANGED" CONTENT="20080820;17293889">
	<STYLE TYPE="text/css">
	<!--
		@page { size: 8.5in 11in; margin-left: 1.25in; margin-right: 1.25in; margin-top: 1in; margin-bottom: 1in }
		P { margin-bottom: 0.08in; direction: ltr; color: #000000; widows: 2; orphans: 2 }
		P.western { font-family: "Times New Roman", serif; font-size: 12pt; so-language: en-US }
		P.cjk { font-family: "Times New Roman", serif; font-size: 12pt }
		P.ctl { font-family: "Times New Roman", serif; font-size: 12pt; so-language: ar-SA }
		TD P { margin-bottom: 0.08in; direction: ltr; color: #000000; widows: 2; orphans: 2 }
		TD P.western { font-family: "Times New Roman", serif; font-size: 12pt; so-language: en-US }
		TD P.cjk { font-family: "Times New Roman", serif; font-size: 12pt }
		TD P.ctl { font-family: "Times New Roman", serif; font-size: 12pt; so-language: ar-SA }
		H1 { margin-bottom: 0.04in; direction: ltr; color: #ff6600; widows: 2; orphans: 2 }
		H1.western { font-family: "Arial", sans-serif; font-size: 16pt; so-language: en-US }
		H1.cjk { font-family: "Times New Roman", serif; font-size: 16pt }
		H1.ctl { font-family: "Arial", sans-serif; font-size: 16pt; so-language: ar-SA }
		H2 { margin-bottom: 0.08in; direction: ltr; color: #ff6600; widows: 2; orphans: 2 }
		H2.western { font-family: "Arial", sans-serif; font-size: 14pt; so-language: en-US; font-style: italic; font-weight: medium }
		H2.cjk { font-family: "Times New Roman", serif; font-size: 14pt; font-style: italic; font-weight: medium }
		H2.ctl { font-family: "Arial", sans-serif; font-size: 14pt; so-language: ar-SA; font-style: italic; font-weight: medium }
		H3 { margin-left: 0.2in; margin-bottom: 0.08in; direction: ltr; color: #ff6600; widows: 2; orphans: 2 }
		H3.western { font-family: "Arial", sans-serif; font-size: 13pt; so-language: en-GB; font-style: normal }
		H3.cjk { font-family: "Times New Roman", serif; font-size: 13pt; font-style: normal }
		H3.ctl { font-family: "Arial", sans-serif; font-size: 13pt; so-language: ar-SA; font-style: normal }
		P.body-text-3-western { margin-left: 0.2in; font-family: "Times New Roman", serif; font-size: 12pt; so-language: en-US }
		P.body-text-3-cjk { margin-left: 0.2in; font-family: "Times New Roman", serif; font-size: 12pt }
		P.body-text-3-ctl { margin-left: 0.2in; font-family: "Times New Roman", serif; font-size: 8pt; so-language: ar-SA }
		P.body-text-4-western { margin-left: 0.3in; font-family: "Times New Roman", serif; font-size: 12pt; so-language: en-US }
		P.body-text-4-cjk { margin-left: 0.3in; font-family: "Times New Roman", serif; font-size: 12pt }
		P.body-text-4-ctl { margin-left: 0.3in; font-family: "Times New Roman", serif; font-size: 8pt; so-language: ar-SA }
		A:link { color: #0000ff }
		A:visited { color: #800080 }
	-->
	</STYLE>
	</head>
	<body>
		<a id="top" name="top"></a>
		<!-- N1: HEADER -->
		<table cellpadding="0" cellspacing="0" class="n1t1">
			<tr>
				<td><img src="../r_media/images/tutorial_header1.jpg" /></td>
				<td align="right"><img src="../r_media/images/tutorial_header2.jpg" /></td>
			</tr>
		</table>
		<!-- N2: CONTENTS -> NAVIGATION SYSTEMS AND CONTENTS -->
		<table cellpadding="0" cellspacing="0" class="n2t1">
			<tr>
				<td class="n2t1r1c1">
				<P CLASS="western"><A HREF="#1.Advanced Topics: files, LCP, Memory, NXJ Tools|outline">Advanced
				Topics: files, LCP, Memory, NXJ Tools</A></P>
				<P CLASS="western" STYLE="margin-left: 0.17in"><A HREF="#1.1.Understanding the leJOS File System|outline">Understanding
				the leJOS File System</A></P>
				<P CLASS="western" STYLE="margin-left: 0.33in"><A HREF="#1.0.1.Flash|outline">Flash</A></P>
				<P CLASS="western" STYLE="margin-left: 0.33in"><A HREF="#1.0.2.File|outline">File</A></P>
				<P CLASS="western" STYLE="margin-left: 0.33in"><A HREF="#1.0.3.FileOutputstream|outline">FileOutputstream</A></P>
				<P CLASS="western" STYLE="margin-left: 0.33in"><A HREF="#1.0.4.FileInputstream|outline">FileInputstream</A></P>
				<P CLASS="western" STYLE="margin-left: 0.17in"><A HREF="#1.2.Understanding  LCP|outline">Understanding
				LCP</A></P>
				<P CLASS="western" STYLE="margin-left: 0.17in"><A HREF="#1.3.Understanding leJOS NXJ use of memory|outline">Understanding
				leJOS NXJ use of memory</A></P>
				<P CLASS="western" STYLE="margin-left: 0.17in"><A HREF="#1.4.Understanding the NXJ tools|outline">Understanding
				the NXJ tools</A></P>
				<P CLASS="western" STYLE="margin-left: 0.33in"><A HREF="#1.0.5.nxjflash|outline">nxjflash</A></P>
				<P CLASS="western" STYLE="margin-left: 0.33in"><A HREF="#1.0.6.nxjupload|outline">nxjupload</A></P>
				<P CLASS="western" STYLE="margin-left: 0.33in"><A HREF="#1.0.7.nxjlink|outline">nxjlink</A></P>
				<P CLASS="western" STYLE="margin-left: 0.33in"><A HREF="#1.0.8.nxj|outline">nxj</A></P>
				<P CLASS="western" STYLE="margin-left: 0.33in"><A HREF="#1.0.9.nxjc|outline">nxjc</A></P>
			
				</td>
				<td>
		<!-- DO NOT MANINPULATE -->
        <div id="BreadCrumbs">
            <a href="../index.htm" target="_top">Home Page</a>
        &gt;
            <a href="#"> Advanced Topics: files, LCP, Memory, NXJ Tools</a>

        </div>
        <div class="NavBit">
                <a target="_top" href="../AdvancedTopics/AdvancedHardware.htm">«&nbsp;Previous</a>&nbsp;&#8226;&nbsp;<a href="../index.htm">TOC</a>&nbsp;&#8226;&nbsp;<a href="../Behaviors/BehaviorProgramming.htm">Next&nbsp;»</a>
        </div>
		<!-- CONTENT TITLE -->
        <div id="PageTitle">Advanced Topics: files, LCP, Memory, NXJ Tools</div>
		<A NAME="1.Advanced Topics: files, LCP, Memory, NXJ Tools|outline"></A>

			<H2 CLASS="western"><A NAME="1.1.Understanding the leJOS File System|outline"></A>
			Understanding the leJOS File System</H2>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="body-text-3-western">leJOS NXJ implements a file system
			using flash memory. The flash memory is read and written in
			256-byte pages. The first two pages hold the file table
			(directory) and the rest of the pages hold user files. Files are
			held as a contiguous set of bytes &ndash; i.e they use a single
			range of page numbers with no gaps. This allows a file to be
			addressed as a region of memory.</P>
			<H3 LANG="en-GB" CLASS="western"><A NAME="1.0.1.Flash|outline"></A>
			Flash</H3>
			<P CLASS="body-text-3-western">The <B>flash</B> class has methods
			to read and write 256-byte pages of flash memory. It should not be
			used by user programs.</P>
			<H3 LANG="en-GB" CLASS="western"><A NAME="1.0.2.File|outline"></A>File</H3>
			<P CLASS="body-text-3-western">The File class has static methods
			that manipulate the file system as a whole and instance methods
			that give access to specify files.</P>
			<P CLASS="body-text-3-western">Static methods:</P>
			<UL>
				<LI><P CLASS="western">void defrag()<BR>removes unused pages in
				the file system.</P>
				<LI><P CLASS="western">void format()<BR>erases all the files and
				reformats the flash memory.</P>
				<LI><P CLASS="western">int freeMemory()<BR>returns the total free
				memory in the file system.</P>
				<LI><P CLASS="western">File[] listfiles()<BR>returns an array of
				files in the system</P>
			</UL>
			<P CLASS="body-text-3-western">To a create a new file, you first
			call the constructor</P>
			<UL>
				<LI><P CLASS="western">File(string name)</P>
			</UL>
			<P CLASS="body-text-3-western">then</P>
			<UL>
				<LI VALUE=1><P CLASS="western">create newFile();<BR>This method
				throws an ioException, so must be in a try/catch block.</P>
			</UL>
			<P CLASS="body-text-3-western">To read and write data, you need to
			use streams. The stream constructors also throw an IOException so
			they also must be in a try/catch block.</P>
			<P CLASS="body-text-3-western">The file streams read and write
			individual bytes, so you will usually want to use a data stream
			filter. 
			</P>
			<H3 LANG="en-GB" CLASS="western"><A NAME="1.0.3.FileOutputstream|outline"></A>
			FileOutputstream</H3>
			<P LANG="en-GB" CLASS="body-text-4-western">The constructors are:</P>
			<UL>
				<LI VALUE=1><P CLASS="western">FileOutputStream(File f) <BR>create
				a new OutputStream to write to this file, starting at the
				beginning of the file.methods:</P>
				<LI><P CLASS="western">FileOutputStream(File f, boolean&nbsp;append)
				<BR>create a new OutputStream to write to this file</P>
				<LI><P CLASS="western">void write(int&nbsp;b) <BR>write 1 byte to
				the file;</P>
				<LI><P CLASS="western">void flush() <BR>Flushes this output
				stream and forces any buffered output bytes to be written</P>
				<LI><P CLASS="western">void close()<BR>Write the buffer to flash
				memory and update the file parameters in flash. Be sure to call
				this method before your program exits. 
				</P>
			</UL>
			<P CLASS="body-text-4-western">Example:</P>
			<P CLASS="western"><SPAN ID="Frame1" DIR="LTR" STYLE="float: left; width: 6.2in; height: 6.77in; border: 1px solid #000000; padding: 0.05in 0.1in; background: #ffffff">
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>import</B></FONT></FONT><FONT COLOR="#000000">
				java.io.*;</FONT></FONT></FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<BR><BR>
				</P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>import</B></FONT></FONT><FONT COLOR="#000000">
				lejos.nxt.*;</FONT></FONT></FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>public</B></FONT></FONT><FONT COLOR="#000000">
				</FONT><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>class</B></FONT></FONT><FONT COLOR="#000000">
				FileWriteTest </FONT></FONT></FONT>
				</P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>{</FONT></FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>public</B></FONT></FONT><FONT COLOR="#000000">
				</FONT><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>static</B></FONT></FONT><FONT COLOR="#000000">
				</FONT><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>void</B></FONT></FONT><FONT COLOR="#000000">
				main(String[] args)</FONT></FONT></FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>{ </FONT></FONT>
				</P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>FileOutputStream
				out = </FONT><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>null</B></FONT></FONT>;
				<FONT COLOR="#339900">// declare outside the try block</FONT></FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>File data = </FONT><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>new</B></FONT></FONT>
				File(<FONT COLOR="#0000ff">&quot;log.dat&quot;</FONT>);</FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>try</B></FONT></FONT><FONT COLOR="#000000">
				</FONT></FONT></FONT>
				</P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>{</FONT></FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>data.createNewFile();</FONT></FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>out = </FONT><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>new</B></FONT></FONT>
				FileOutputStream(data);</FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>}
				</FONT><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>catch</B></FONT></FONT>(IOException
				e) {}</FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>DataOutputStream
				dataOut = </FONT><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>new</B></FONT></FONT>
				DataOutputStream(out);</FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>float</B></FONT></FONT><FONT COLOR="#000000">
				x = 1f;</FONT></FONT></FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>int</B></FONT></FONT><FONT COLOR="#000000">
				length = 8;</FONT></FONT></FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>try</B></FONT></FONT><FONT COLOR="#000000">
				</FONT><FONT COLOR="#339900">// write</FONT></FONT></FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>{ </FONT></FONT>
				</P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>for</B></FONT></FONT><FONT COLOR="#000000">(</FONT><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>int</B></FONT></FONT><FONT COLOR="#000000">
				i = 0 ; i &lt;length; i++ )</FONT></FONT></FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>{</FONT></FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>dataOut.writeFloat(x);</FONT></FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>LCD.drawString(</FONT><FONT COLOR="#0000ff">&quot;</FONT>
				<FONT COLOR="#0000ff">&quot;</FONT>+x,0,i);</FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>x = x*-2.2f; </FONT></FONT>
				</P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>}</FONT></FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>out.close(); </FONT><FONT COLOR="#339900">//
				flush the buffer and write the file</FONT></FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>} </FONT><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>catch</B></FONT></FONT>
				(IOException e) {</FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>LCD.drawString(</FONT><FONT COLOR="#0000ff">&quot;write
				error&quot;</FONT>, 0, 3);</FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>}</FONT></FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>Sound.beep();</FONT></FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>Button.waitForPress();</FONT></FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>}</FONT></FONT></P>
				<P CLASS="western" STYLE="margin-top: 0.02in"><FONT FACE="Courier New, monospace"><FONT SIZE=2>}</FONT></FONT></P>
			</SPAN><BR CLEAR=LEFT><BR><BR>
			</P>
			<P CLASS="body-text-4-western">After you run this example, look
			for the newly created file in the Files menu.</P>
			<H3 LANG="en-GB" CLASS="western"><A NAME="1.0.4.FileInputstream|outline"></A>
			FileInputstream</H3>
			<P LANG="en-GB" CLASS="body-text-4-western">The constructor is:</P>
			<UL>
				<LI><P LANG="en-GB" CLASS="western">FileInputStream( File afile)</P>
			</UL>
			<P LANG="en-GB" CLASS="body-text-4-western">methods:</P>
			<UL>
				<LI VALUE=1><P CLASS="western">int read()<BR>returns a value
				between 0 and 255, representing a single byte</P>
				<LI><P CLASS="western">int available()<BR>ret<SPAN LANG="en-GB">urns
				the number of bytes available to be read.</SPAN></P>
			</UL>
			<P CLASS="body-text-4-western"><BR><BR>
			</P>
			<P CLASS="body-text-4-western">Here is an example that reads the
			file</P>
			<P CLASS="western"><SPAN ID="Frame2" DIR="LTR" STYLE="float: left; width: 6.37in; height: 5.85in; border: 1px solid #000000; padding: 0.05in 0.1in; background: #ffffff">
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>import</B></FONT></FONT><FONT COLOR="#000000">
				java.io.*;</FONT></FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>import</B></FONT></FONT><FONT COLOR="#000000">
				lejos.nxt.*;</FONT></FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<BR><BR>
				</P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>public</B></FONT></FONT><FONT COLOR="#000000">
				</FONT><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>class</B></FONT></FONT><FONT COLOR="#000000">
				FileReadTest</FONT></FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>{</FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>public</B></FONT></FONT><FONT COLOR="#000000">
				</FONT><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>static</B></FONT></FONT><FONT COLOR="#000000">
				</FONT><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>void</B></FONT></FONT><FONT COLOR="#000000">
				main(String[] args)</FONT></FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>{</FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>File data = </FONT><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>new</B></FONT></FONT>
				File(<FONT COLOR="#0000ff">&quot;log.dat&quot;</FONT>);</FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>int</B></FONT></FONT><FONT COLOR="#000000">
				i = 0;</FONT></FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><FONT SIZE=2><B>try</B></FONT></FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>{</FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>InputStream is =
				</FONT><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>new</B></FONT></FONT>
				FileInputStream(data);</FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>DataInputStream
				din = </FONT><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>new</B></FONT></FONT>
				DataInputStream(is);</FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>while</B></FONT></FONT><FONT COLOR="#000000">
				(is.available() &gt; 3)</FONT><FONT COLOR="#339900">// at least 4
				bytes left to read</FONT></FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>{</FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>LCD.drawInt(is.available(),
				4, 10, 0);</FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>float</B></FONT></FONT><FONT COLOR="#000000">
				x = din.readFloat();</FONT></FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>LCD.drawString(</FONT><FONT COLOR="#0000ff">&quot;&quot;</FONT>
				+ x, 0, i);</FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>i++;</FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>}</FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>din.close();</FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>} </FONT><FONT COLOR="#993300"><FONT FACE="Monospaced, Times New Roman, serif"><B>catch</B></FONT></FONT>
				(IOException ioe)</FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>{</FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>LCD.drawString(</FONT><FONT COLOR="#0000ff">&quot;read
				exception&quot;</FONT>, 0, 0);</FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>}</FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>Button.waitForPress();</FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in; margin-bottom: 0.02in">
				<FONT FACE="Courier New, monospace"><FONT SIZE=2>}</FONT></FONT></P>
				<P CLASS="western" ALIGN=JUSTIFY STYLE="margin-top: 0.02in"><FONT FACE="Courier New, monospace"><FONT SIZE=2>}</FONT></FONT></P>
			</SPAN><BR CLEAR=LEFT><BR><BR>
			</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western"><A HREF="#1.Advanced Topics: files, LCP, Memory, NXJ Tools|outline"><FONT COLOR="#0000ff"><U>Back
			to top</U></FONT></A></P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western"><BR><BR>
			</P>
			<H2 CLASS="western"><A NAME="1.2.Understanding  LCP|outline"></A>Understanding
			LCP</H2>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">LEGO defines a protocol called the LEGO
			MINDSTORMS NXT Communications Protocol (LCP) which is used to send
			commands to the standard LEGO firmware. The specification is
			available at <A HREF="http://mindstorms.lego.com/Overview/NXTreme.aspx"><FONT COLOR="#0000ff"><U>http://mindstorms.lego.com/Overview/NXTreme.aspx</U></FONT></A>
			in the Bluetooth Development Kit. The commands are separated into
			direct commands and system commands. The direct commands are
			described in a separate document: LEGO MINDSTORMS NXT : Direct
			Commands. 
			</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">Direct commands are those that are designed for
			user programs and tools to use to control robots. The system
			commands are designed for tools that upload and download files and
			do other administrative tasks.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">leJOS NXJ emulates many of the direct and
			systems commands so that many tools that work with the standard
			LEGO firmware also work with leJOS.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">Many of the leJOS NXJ tools including nxj,
			nxjuload, nxjbrowse and nxjmonitor use LCP. leJOS NXJ has some
			minor additions to LCP to make its tools work better.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">The implementation of LCP is in the
			lejos.nxt.comm.LCP class. As leJOS sensors and motors work a bit
			differently than the standard firmware, the semantics of LCP on
			leJOS are not always identical to the standard LEGO firmware.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">The start-up menu &ndash; StartUpTextjava &ndash;
			uses LCP to support the leJOS NXJ tools and third-party tools.
			This means that LCP commands can be executed over Bluetooth or USB
			when the menu is running.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western"><A HREF="#1.Advanced Topics: files, LCP, Memory, NXJ Tools|outline"><FONT COLOR="#0000ff"><U>Back
			to top</U></FONT></A></P>
			<P CLASS="western"><BR><BR>
			</P>
			<H2 CLASS="western"><A NAME="1.3.Understanding leJOS NXJ use of memory|outline"></A>
			Understanding leJOS NXJ use of memory</H2>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">The NXT has 256kb of flash memory and 64kb of
			RAM.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">Flash memory can be read like RAM (access is a
			bit slower) but can only be written in 256-byte pages by specific
			hardware instructions,. Flash memory cannot be read while a page
			is being written.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">The leJOS NXJ firmware is written in a
			combination of C and ARM assembler code. It consists of the
			initialization code, the Java VM and device drivers for all the
			hardware subsystems. The leJOS firmware is a complete firmware
			replacement and has no reliance on the standard LEGO firmware. The
			first 32kb of flash memory is allocated to the leJOS NXJ firmware.
			Most code is executed from flash memory, but a`small amount (e.g.
			the code that writes pages of flash memory) is copied to RAM.
			Read-only data is held in flash memory but read/write data is
			copied to RAM. The firmware uses a fixed size stack and interrupt
			stack.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">The leJOS NXJ Java VM executes one Java program
			at a time. This can either be a user program or the leJOS start-up
			menu. One Java program can execute another. When this is done the
			first Java program is removed from memory, and the second one is
			then executed. This is how the start-up menu executes user
			programs. 
			</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">The start-up menu occupies up to 48kb of memory
			that starts at address 32k (i.e. after the end of the firmware).
			The last word of the 48kb allocated to the start-up menu holds the
			size of the start-up menu).</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">Java programs execute from flash memory. Static
			read-only data is held in flash memory. Static read-write data is
			copied to RAM. Objects are created in a heap that starts at the
			top of the RAM and grows downwards. The Java stack starts at the
			bottom of free RAM memory and grows up. A garbage collector frees
			memory used by unreferenced objects when the heap becomes full.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western"><A HREF="#1.Advanced Topics: files, LCP, Memory, NXJ Tools|outline"><FONT COLOR="#0000ff"><U>Back
			to top</U></FONT></A></P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western"><BR><BR>
			</P>
			<H2 CLASS="western"><A NAME="1.4.Understanding the NXJ tools|outline"></A>
			Understanding the NXJ tools</H2>
			<P CLASS="western"><BR><BR>
			</P>
			<H3 LANG="en-GB" CLASS="western"><A NAME="1.0.5.nxjflash|outline"></A>
			nxjflash</H3>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">In order to flash firmware to the NXT, it was
			necessary that the NXT must be in firmware update mode. If you
			<BR>have the standard LEGO firmware installed (or if you have a
			very recent version of leJOS), then the nxjflash program will do
			this automatically for you. If not or if there is some problem
			with the automatic method then you will need to place the NXT into
			firmware update mode by pressing the reset button for 4 seconds or
			more. This causes the NXT to run a small boot assistant program
			called SAM-BA. The was written by Atmel, the maker of the ARM
			chipset that the NXT uses. SAM-BA includes a USB driver and
			accepts commands sent over the USB link. These command allows data
			to be uploaded to RAM and code to be executed. Early version of
			leJOS used this mechanism to run in RAM before there was a flash
			version of leJOS NXJ. The latest version of nxjflash will put the
			NXT into update mode if it is not already so. 
			</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">On Microsoft Windows and MAC OS X, the standard
			LEGO USB drivers are used. These come with the LEGO software,
			which is why this software must be installed. On Microsoft
			windows, when the NXT is in firmware update mode, a USB cable is
			attached to your PC and the NXT is switched on (by pressing the
			orange button), if you go to Control Panel &gt; System &gt;
			Hardware &gt; Device Manager you will see under &ldquo;Lego
			Devices&rdquo; an entry for the USB driver, labelled &ldquo;LEGO
			MINDSTORMS NXT Firmware Update Mode&rdquo;.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">nxjflash uses the libusb library to drive the
			USB interface. On Linux libusb provides the USB driver. On
			Microsoft Windows, you need to run the libusb-win32 filter driver.
			This allows nxjflash to drive the LEGO MINDSTORMS NXT Firmware
			Update Mode USB driver.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western"><A NAME="DDE_LINK"></A>nxjflash drives libusb
			via a library written by David Anderson, called libnxt. This
			supports SAM-BA commands. To flash new firmware, it uploads the
			firmware image a 256-byte page at a time and then executes a small
			RAM-resident routine to write the page to flash memory. In this
			way the leJOS NXJ firmware, lejos_nxt_rom.bin is written to flash
			memory. This occupies the first 32kb of flash memory.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">nxjflash also uploads the leJOS NXJ start-up
			menu StartUpText.bin. This menu is written in Java and built like
			any other leJOS NXJ Java programs. It implements the leJOS NXJ
			menu system and supports threads for executing Lego Communication
			Protocol (LCP) commands over USB and Bluetooth. StartUpText.bin
			resides in flash memory starting at address 32k. 48kb of flash
			memory is reserved for it. The highest address word in the 49k.
			When both the firmware and the menu have been uploaded, nxjflash
			sends a SAM-BA command to the NXT causing it to jump to address
			zero and the leJOS NXJ firmware executes.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western"><A HREF="#1.Advanced Topics: files, LCP, Memory, NXJ Tools|outline"><FONT COLOR="#0000ff"><U>Back
			to top</U></FONT></A></P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western"><BR><BR>
			</P>
			<H3 LANG="en-GB" CLASS="western"><A NAME="1.0.6.nxjupload|outline"></A>
			nxjupload</H3>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">nxjupload uploads programs or other files over
			USB or Bluetooth. It is a command line interface that is suitable
			for use from command windows, ant scripts, and as an external
			command from IDEs such as Eclipse.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">nxjupload sends LCP system commands to the NXT
			to upload the file. The commands are OPEN_WRITE, WRITE and CLOSE.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">The call of nxjupload looks like:</P>
			<UL>
				<LI><P CLASS="western">nxjupload [options] &lt;binary-file&gt;</P>
			</UL>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">By default nxjupload first looks for a NXT
			connected by USB. If it does not find one, it tries Bluetooth. It
			does a Bluetooth inquiry looking for NXTs. It it finds any it
			tries to connect to each one, and uploads the file to the first
			one it successfully connects to. This means that if you have
			multiple NXTs, it will upload to the one that is currently
			switched on.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">This behaviour can be modified by the following
			options:</P>
			<P CLASS="western"><BR><BR>
			</P>
			<OL>
				<LI><P CLASS="western">-b or &ndash;bluetooth: only Bluetooth is
				tried</P>
				<LI><P CLASS="western">-u or &ndash;usb: only USB is tried</P>
				<LI><P CLASS="western">-n or --name: the upload is done to the
				named NXT. A Bluetooth inquiry is done, but only the named NXT is
				looked for.</P>
				<LI><P CLASS="western">-d or &ndash;address &lt;address&gt;: the
				upload is to the device with this Bluetooth address. USB is not
				tried and no Bluetooth inquiry is done.</P>
				<LI><P CLASS="western">-r or &ndash;run: run the program after
				upload by sending a STARTPROGRAM LCP command.</P>
			</OL>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">nxjupload uses the apache Commons CLI command
			line processor.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western"><A HREF="#1.Advanced Topics: files, LCP, Memory, NXJ Tools|outline"><FONT COLOR="#0000ff"><U>Back
			to top</U></FONT></A></P>
			<P CLASS="western"><BR><BR>
			</P>
			<H3 LANG="en-GB" CLASS="western"><A NAME="1.0.7.nxjlink|outline"></A>
			nxjlink</H3>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">nxjlink call the linker (class
			js.tinyvm.TinyVM). 
			</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">The call looks like:</P>
			<UL>
				<LI VALUE=1><P CLASS="western">nxjlink [options] class &ndash;o
				&lt;binary file&gt;</P>
			</UL>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">The -cp or --classpath option is used to
			specify where the linker looks for classes. Note that the linker
			classpath is separate to the classpath uses to execute
			js.tinyVM.TinyVM. 
			</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">The linker first looks for the specified class
			in the linker classpath, and then looks for all classes that this
			references to form a &ldquo;closure&rdquo; of the classes. The
			linker class path should include classes.jar and all the user
			classes in the program. The class specified on the command line
			must be the one containing the main method. The Jakarta apache
			Byte Code Engineering Library (BCEL) is used to process the class
			files.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">The linker omits methods that have not been
			referenced unless the &ndash;a or &ndash;all flag is specified.
			The way this is done uses a simple algorithm and does not manage
			to omit all unreferenced methods. 
			</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">The linker produces a leJOS NXJ binary file and
			writs it to the file specified in the &ndash;o parameter.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">nxjlink needs to know the byte order of the
			processor it is producing the binary for. For the NXT this is set
			by &ldquo;&ndash;writeorder LE&rdquo; for Little-Endian.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">If the &ndash;v or &ndash;verbose flag is set,
			a list of the classes and methods in the binary is output to
			standard out. This is very useful for debugging.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western">nxjlink uses the apache Commons CLI library for
			command line processing.</P>
			<H3 LANG="en-GB" CLASS="western"><A NAME="1.0.8.nxj|outline"></A>nxj</H3>
			<P CLASS="western">The nxj command links and uploads the program
			file. It takes the same parameters as nxjlink.</P>
			<H3 LANG="en-GB" CLASS="western">Nxjc</H3>
			<P CLASS="body-text-3-western">This command invokes the compiler. 
			It takes the same parameters as  standard java.</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western"><BR><BR>
			</P>
			<P CLASS="western"><A HREF="#1.Advanced Topics: files, LCP, Memory, NXJ Tools|outline"><FONT COLOR="#0000ff"><U>Back
			to top</U></FONT></A></P>
				

<!-- DO NOT TOUCH -->				
				<br/>
        <div class="NavBit">
                <a target="_top" href="../AdvancedTopics/AdvancedHardware.htm">«&nbsp;Previous</a>&nbsp;&#8226;&nbsp;<a href="../index.htm">TOC</a>&nbsp;&#8226;&nbsp;<a href="../Behaviors/BehaviorProgramming.htm">Next&nbsp;»</a>
        </div>
		<br />
				<td>
			</tr>
		</table>
	</body>
</html>