<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 10 (filtered)">
<title>leJOS NXJ Tutorial</title>

<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
h1
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:Arial;
	font-weight:bold;}
h2
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:Arial;
	font-weight:bold;
	font-style:italic;}
h3
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:.2in;
	page-break-after:avoid;
	font-size:13.0pt;
	font-family:Arial;
	font-weight:bold;}
h4
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:.3in;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:Arial;
	font-weight:bold;
	font-style:italic;}
h5
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	font-size:13.0pt;
	font-family:"Times New Roman";
	font-weight:bold;
	font-style:italic;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:12.0pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:24.0pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoToc4, li.MsoToc4, div.MsoToc4
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:.5in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoToc5, li.MsoToc5, div.MsoToc5
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:48.0pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoToc6, li.MsoToc6, div.MsoToc6
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:60.0pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoToc7, li.MsoToc7, div.MsoToc7
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:1.0in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoToc8, li.MsoToc8, div.MsoToc8
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:84.0pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoToc9, li.MsoToc9, div.MsoToc9
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:96.0pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoListBullet, li.MsoListBullet, div.MsoListBullet
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:.25in;
	text-indent:-.25in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:.1in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:.2in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	background:navy;
	font-size:10.0pt;
	font-family:Tahoma;}
p
	{margin-right:0in;
	margin-left:0in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
code
	{font-family:"Courier New";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Courier New";}
span.Heading1Char
	{font-family:Arial;
	font-weight:bold;}
span.Heading2Char
	{font-family:Arial;
	font-weight:bold;
	font-style:italic;}
span.Char
	{font-family:Arial;
	font-weight:bold;}
p.BodyText4, li.BodyText4, div.BodyText4
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:.3in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.ap-api-parameter, li.ap-api-parameter, div.ap-api-parameter
	{margin-right:0in;
	margin-left:0in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.ap-api-code, li.ap-api-code, div.ap-api-code
	{margin-right:0in;
	margin-left:0in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.ap-api-tabletext, li.ap-api-tabletext, div.ap-api-tabletext
	{margin-right:0in;
	margin-left:0in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
span.Heading1colorChar
	{font-family:Arial;
	color:#FF6600;
	font-weight:bold;}
p.Heading1color, li.Heading1color, div.Heading1color
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:Arial;
	color:#FF6600;
	font-weight:bold;}
p.N1, li.N1, div.N1
	{margin-right:0in;
	margin-left:0in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.N2, li.N2, div.N2
	{margin-right:0in;
	margin-left:.1in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.N3, li.N3, div.N3
	{margin-right:0in;
	margin-left:.2in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
span.Heading2ColorChar
	{font-family:Arial;
	color:#FF6600;
	font-weight:bold;
	font-style:italic;}
p.Heading2Color, li.Heading2Color, div.Heading2Color
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:Arial;
	color:#FF6600;
	font-weight:bold;
	font-style:italic;}
p.Nd, li.Nd, div.Nd
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.Heading3color, li.Heading3color, div.Heading3color
	{margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:.2in;
	page-break-after:avoid;
	font-size:13.0pt;
	font-family:Arial;
	color:#FF6600;
	font-weight:bold;}
span.Heading3Char
	{font-family:Arial;
	font-weight:bold;}
@page Section1
	{size:10.3in 11.0in;
	margin:56.9pt 1.25in 58.3pt 1.25in;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body lang=EN-US link=blue vlink=purple>

<div class=Section1>

<p class=MsoNormal><a name="_Toc198023428"></a><a name="_Toc198023332"></a><a
name="_Toc198023182"></a><a name="_Toc198022804"></a><a name="_Toc198214986"></a><a
name="_Toc198221544"></a><a name="_Toc198222006"></a><a name="_Toc198297548">&nbsp;</a></p>

<p class=MsoNormal>&nbsp;</p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width=1164
 style='width:873.0pt;border-collapse:collapse'>
 <tr>
  <td width=108 valign=top style='width:81.0pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoToc1>&nbsp;</p>
  <p class=MsoToc1><a href="#_Toc200100837">Hardware: I/O and Sensors</a></p>
  <p class=MsoToc2><a href="#_Toc200100838">LCD</a></p>
  <p class=MsoToc3><a href="#_Toc200100839">Text LCD methods</a></p>
  <p class=MsoToc3><a href="#_Toc200100840">LCD graphics</a></p>
  <p class=MsoToc2><a href="#_Toc200100841">Buttons</a></p>
  <p class=MsoToc2><a href="#_Toc200100842">Sound</a></p>
  <p class=MsoToc2><a href="#_Toc200100843">Battery</a></p>
  <p class=MsoToc1><a href="#_Toc200100844">Sensors</a></p>
  <p class=MsoToc2><a href="#_Toc200100845">Touch Sensor</a></p>
  <p class=MsoToc2><a href="#_Toc200100846">Light Sensor</a></p>
  <p class=MsoToc2><a href="#_Toc200100847">Sound Sensor</a></p>
  <p class=MsoToc2><a href="#_Toc200100848">Ultrasonic Sensor</a></p>
  <p class=MsoToc3><a href="#_Toc200100849">Program: multiple echoes</a></p>
  <p class=MsoNormal></p>
  </td>
  <td width=1056 valign=top style='width:11.0in;padding:0in 5.4pt 0in 5.4pt'>
  <p class=Heading1color><a name="_Toc200100837"><span class=Heading2ColorChar><span
  lang=EN-GB style='font-style:normal'>Hardware: I/O and Sensors</span></span></a></p>
  <p class=MsoBodyText>This section covers the classes for user input and
  output, and also the NXT sensors.  The NXT hardware has buttons for input and
  a Liquid Crystal Display and a small speaker for output.  LejosNXJ provides
  software abstractions for all these bits of hardware.</p>
  <p class=Heading2Color><a name="_Toc200100838"></a><a name="_Toc198969299"></a><a
  name="_Toc198970801">LCD</a> </p>
  <p class=MsoBodyText3><span class=BodyText2CharChar>The LCD class  has no
  instances (there being only one LCD on the NXT) so all the methods are
  static.<br>
  It</span> can be used in text mode and graphics mode.</p>
  <h3><a name="_Toc200100839"><span lang=EN-GB>Text LCD methods</span></a></h3>
  <p class=MsoBodyText3>As a text display, the NXT LCD screen is 16 characters
  wide and eight characters deep. It is addressed using (x, y) co-ordinates as
  follows:</p>
  <p class=MsoBodyText3 style='margin-left:0in'>
  <table cellpadding=0 cellspacing=0 align=left>
   <tr>
    <td width=48 height=18></td>
   </tr>
   <tr>
    <td></td>
    <td><img width=384 height=182 src="LCD_Sensors_files/image001.gif"></td>
   </tr>
  </table>
  <a name="_top"></a>&nbsp;</p>
  <p class=MsoBodyText3 style='margin-left:0in'>&nbsp;</p>
  <p class=MsoBodyText3 style='margin-left:0in'>&nbsp;</p>
  <p class=MsoBodyText3 style='margin-left:0in'>&nbsp;</p>
  <p class=MsoBodyText3 style='margin-left:0in'>&nbsp;</p>
  <br clear=ALL>
  <p class=MsoBodyText3 style='margin-left:0in'>                    x ranges
  from 0 to 15, and y from 0 to 7.</p>
  <p class=MsoBodyText3 style='margin-left:0in'>&nbsp;</p>
  <p class=MsoBodyText3>The methods to write to the LCD in text mode are:-</p>
  <ul style='margin-top:0in' type=disc>
   <li class=MsoNormal> <a
       href="../../../../lejosbeta5/lejos_nxj/docs/apidocs/lejos/nxt/LCD.html#drawString(java.lang.String, int, int)">drawString</a>(<a
       href="../../../../lejosbeta5/lejos_nxj/docs/apidocs/java/lang/String.html"
       title="class in java.lang">String</a>&nbsp;str, int&nbsp;x, int&nbsp;y);<br>
       This draws a string of text to the LCD screen starting at text
       co-ordinate (x, y).</li>
   <li class=MsoNormal><a
       href="../../../../lejosbeta5/lejos_nxj/docs/apidocs/lejos/nxt/LCD.html#drawString(java.lang.String, int, int, boolean)">drawString</a>(<a
       href="../../../../lejosbeta5/lejos_nxj/docs/apidocs/java/lang/String.html"
       title="class in java.lang">String</a>&nbsp;str, int&nbsp;x, int&nbsp;y, boolean&nbsp;invert);<br>
       This variant of drawString supports inverting  the text drawing white
       characters on a black background.</li>
   <li class=MsoNormal> <a
       href="../../../../lejosbeta5/lejos_nxj/docs/apidocs/lejos/nxt/LCD.html#drawInt(int, int, int)">drawInt</a>(int&nbsp;i,
       int&nbsp;x, int&nbsp;y);<br>
       This draws an integer starting at co-ordinate (x,y).  The integer is
       left aligned and takes up as many characters as are necessary.</li>
   <li class=MsoNormal><a
       href="../../../../lejosbeta5/lejos_nxj/docs/apidocs/lejos/nxt/LCD.html#drawInt(int, int, int, int)">drawInt</a>(int&nbsp;i,
       int&nbsp;places, int&nbsp;x, int&nbsp;y);<br>
       This variant of drawInt right-aligns the integer and always uses the
       number of characters indicated by places.</li>
   <li class=MsoNormal><a
       href="../../../../lejosbeta5/lejos_nxj/docs/apidocs/lejos/nxt/LCD.html#drawChar(char, int, int, boolean)">drawChar</a>(char&nbsp;c,
       int&nbsp;x, int&nbsp;y, boolean&nbsp;invert);<br>
       This draws a character at text co-ordinate (x, y) with optional
       inversion of the character.</li>
   <li class=MsoNormal><a
       href="../../../../lejosbeta5/lejos_nxj/docs/apidocs/lejos/nxt/LCD.html#clear()">clear</a>();<br>
       Clears the display.</li>
  </ul>
  <p class=MsoBodyText3>Example:</p>
  <p class=MsoBodyText2><a name="_Toc198969300"></a><img width=749 height=427
  src="LCD_Sensors_files/image002.gif"></p>
  <p class=MsoBodyText2 style='margin-left:0in'><span lang=EN-GB>&nbsp;</span></p>
  <h3><a name="_Toc200100840"><span lang=EN-GB>LCD graphics</span></a><span
  lang=EN-GB> </span></h3>
  <p class=MsoBodyText3><span lang=EN-GB>To display graphics on the LCD screen,
  you can  use the Graphics class from the package  </span>javax.microedition.lcdui. 
  <span lang=EN-GB>The API for the class is </span><a
  href="http://lejos.sourceforge.net/p_technologies/nxt/nxj/api/javax/microedition/lcdui/Graphics.html"><span
  lang=EN-GB>here</span></a><span lang=EN-GB>.  The LCD screen is 100 pixels
  wide and 64 pixels high, and all Graphics methods use this coordinate
  system.  With this class, you can draw lines, rectangles, arcs, and position
  strings with pixel accuracy. </span></p>
  <p class=MsoBodyText3><span lang=EN-GB>&nbsp;</span></p>
  <p class=MsoBodyText3><span lang=EN-GB>&nbsp;</span></p>
  <p class=MsoBodyText3><span lang=EN-GB>&nbsp;</span></p>
  <p class=MsoBodyText3><span lang=EN-GB>&nbsp;</span></p>
  <p class=MsoToc1><a name="_Toc198969301"></a><a name="_Toc198970802"></a><a
  href="#_top">Back to Top </a></p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=Heading2Color><a name="_Toc200100841">Buttons</a></p>
  <p class=MsoBodyText2>The Button class has four instances,  accessed by
  static fields:</p>
  <ul style='margin-top:0in' type=disc>
   <li class=MsoNormal>Button.ENTER</li>
   <li class=MsoNormal>Button.ESCAPE</li>
   <li class=MsoNormal>Button.LEFT</li>
   <li class=MsoNormal>Button.RIGHT</li>
  </ul>
  <p class=MsoBodyText2>To test if a button is pressed, you use:</p>
  <p class=MsoBodyText2>boolean isPressed();</p>
  <p class=MsoBodyText2>Example</p>
  <p class=MsoNormal>
  <table cellpadding=0 cellspacing=0 align=left>
   <tr>
    <td width=26 height=8></td>
   </tr>
   <tr>
    <td></td>
    <td width=643 height=395 bgcolor=white style='border:.75pt solid black;
    vertical-align:top;background:white'><span style='position:absolute;
    z-index:3'>
    <table cellpadding=0 cellspacing=0 width="100%">
     <tr>
      <td>
      <div style='padding:3.6pt 7.2pt 3.6pt 7.2pt'>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      9.0pt;font-family:"Courier New";color:#7F0055'>import</span></b><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'> lejos.nxt.*;</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      9.0pt;font-family:"Courier New"'>&nbsp;</span></p>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      9.0pt;font-family:"Courier New";color:#7F0055'>public</span></b><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'> </span><b><span
      style='font-size:9.0pt;font-family:"Courier New";color:#7F0055'>class</span></b><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'> ButtonPresses</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      9.0pt;font-family:"Courier New";color:black'>{</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      9.0pt;font-family:"Courier New";color:black'>    </span><b><span
      style='font-size:9.0pt;font-family:"Courier New";color:#7F0055'>void</span></b><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'>  public
      static void main (String[] args)</span></p>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      9.0pt;font-family:"Courier New";color:#7F0055'>    throws</span></b><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'> Exception</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      9.0pt;font-family:"Courier New";color:black'>    {</span></p>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      9.0pt;font-family:"Courier New";color:#7F0055'>        while</span></b><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'> (</span><b><span
      style='font-size:9.0pt;font-family:"Courier New";color:#7F0055'>true</span></b><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'>) {</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      9.0pt;font-family:"Courier New";color:black'>            LCD.<i>clear</i>();</span></p>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      9.0pt;font-family:"Courier New";color:#7F0055'>            If</span></b><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'> (Button.</span><i><span
      style='font-size:9.0pt;font-family:"Courier New";color:#0000C0'>ENTER</span></i><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'>.isPressed())
      LCD.<i>drawString</i>(</span><span style='font-size:9.0pt;font-family:
      "Courier New";color:#2A00FF'>&quot;ENTER&quot;</span><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'>,0,0);</span></p>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      9.0pt;font-family:"Courier New";color:#7F0055'>            if</span></b><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'> (Button.</span><i><span
      style='font-size:9.0pt;font-family:"Courier New";color:#0000C0'>ESCAPE</span></i><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'>.isPressed())
      LCD.<i>drawString</i>(</span><span style='font-size:9.0pt;font-family:
      "Courier New";color:#2A00FF'>&quot;ESCAPE&quot;</span><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'>,0,0);</span></p>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      9.0pt;font-family:"Courier New";color:#7F0055'>            if</span></b><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'> (Button.</span><i><span
      style='font-size:9.0pt;font-family:"Courier New";color:#0000C0'>LEFT</span></i><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'>.isPressed())
      LCD.<i>drawString</i>(</span><span style='font-size:9.0pt;font-family:
      "Courier New";color:#2A00FF'>&quot;LEFT&quot;</span><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'>,0,0);</span></p>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      9.0pt;font-family:"Courier New";color:#7F0055'>            if</span></b><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'> (Button.</span><i><span
      style='font-size:9.0pt;font-family:"Courier New";color:#0000C0'>RIGHT</span></i><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'>.isPressed())
      LCD.<i>drawString</i>(</span><span style='font-size:9.0pt;font-family:
      "Courier New";color:#2A00FF'>&quot;RIGHT&quot;</span><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'>,0,0);</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      9.0pt;font-family:"Courier New";color:black'>        }            </span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      9.0pt;font-family:"Courier New";color:black'>    }</span></p>
      <p class=MsoNormal><span style='font-size:9.0pt;font-family:"Courier New";
      color:black'>}</span></p>
      </div>
      </td>
     </tr>
    </table>
    </span>&nbsp;</td>
   </tr>
  </table>
   &nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal align=right style='text-align:right'>&nbsp;</p>
  <br clear=ALL>
  <p class=MsoBodyText2>To wait for a specific button to be pressed and
  released, you use:</p>
  <ul style='margin-top:0in' type=disc>
   <li class=MsoNormal>void waitForPressAndRelease() throws InterruptedException;</li>
  </ul>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoBodyText2>Example:</p>
  <p class=MsoNormal>
  <table cellpadding=0 cellspacing=0 align=left>
   <tr>
    <td width=19 height=4></td>
   </tr>
   <tr>
    <td></td>
    <td width=410 height=300 bgcolor=white style='border:.75pt solid black;
    vertical-align:top;background:white'><span style='position:absolute;
    z-index:4'>
    <table cellpadding=0 cellspacing=0 width="100%">
     <tr>
      <td>
      <div style='padding:3.6pt 7.2pt 3.6pt 7.2pt'>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      9.0pt;font-family:"Courier New";color:#7F0055'>import</span></b><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'> lejos.nxt.*;</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      9.0pt;font-family:"Courier New"'>&nbsp;</span></p>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      9.0pt;font-family:"Courier New";color:#7F0055'>public</span></b><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'> </span><b><span
      style='font-size:9.0pt;font-family:"Courier New";color:#7F0055'>class</span></b><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'> ButtonTest</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      9.0pt;font-family:"Courier New";color:black'>{</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      9.0pt;font-family:"Courier New";color:black'>    </span><b><span
      style='font-size:9.0pt;font-family:"Courier New";color:#7F0055'>void</span></b><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'>  public
      static void main (String[] args)</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      9.0pt;font-family:"Courier New";color:black'>    </span><b><span
      style='font-size:9.0pt;font-family:"Courier New";color:#7F0055'>throws</span></b><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'> Exception</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      9.0pt;font-family:"Courier New";color:black'>    {</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      9.0pt;font-family:"Courier New";color:black'>        Button.</span><i><span
      style='font-size:9.0pt;font-family:"Courier New";color:#0000C0'>ENTER</span></i><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'>.waitForPressAndRelease();         </span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      9.0pt;font-family:"Courier New";color:black'>        LCD.<i>drawString</i>(</span><span
      style='font-size:9.0pt;font-family:"Courier New";color:#2A00FF'>&quot;Finished&quot;</span><span
      style='font-size:9.0pt;font-family:"Courier New";color:black'>, 3, 4);</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      9.0pt;font-family:"Courier New";color:black'>        Thread.<i>sleep</i>(2000);</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      9.0pt;font-family:"Courier New";color:black'>    }</span></p>
      <p class=MsoNormal><span style='font-size:9.0pt;font-family:"Courier New";
      color:black'>}</span></p>
      </div>
      </td>
     </tr>
    </table>
    </span>&nbsp;</td>
   </tr>
  </table>
   &nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <br clear=ALL>
  <p class=MsoBodyText2>To wait for any button to be pressed, you do:</p>
  <ul style='margin-top:0in' type=disc>
   <li class=MsoNormal>static  int waitForPress();<br>
       The returns the id code  of the button that is pressed.</li>
  </ul>
  <p class=MsoNormal style='margin-left:.5in'><b>button           </b>ENTER     LEFT        RIGHT     ESCAPE</p>
  <p class=MsoNormal style='margin-left:.5in'><b>Code             </b>1               2               4   8</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoBodyText2>To specify a listener to listen for button events for
  this button, you: use</p>
  <ul style='margin-top:0in' type=disc>
   <li class=MsoNormal>void addButtonListener (ButtonListener aListener)<br>
       <br>
       See Listeners and Events below for how button listeners work.</li>
  </ul>
  <p class=MsoBodyText2>&nbsp;</p>
  <p class=MsoBodyText2>To read the current state of all the buttons, you do:</p>
  <ul style='margin-top:0in' type=disc>
   <li class=MsoNormal>static int readButtons();<br>
       The  return value is the sum of the codes of the buttons that are
       pressed. </li>
  </ul>
  <p class=MsoBodyText2><code>&nbsp;</code></p>
  <p class=MsoToc1><a href="LCD_Sensors.htm">Back to Top</a></p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=Heading2Color><a name="_Toc200100842"></a><a name="_Toc198969302"></a><a
  name="_Toc198970803">Sound</a></p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>This class controls the single speaker so it has no
  instances and  all the methods are static.</p>
  <p class=MsoNormal>To play a single tone, use</p>
  <ul style='margin-top:0in' type=disc>
   <li class=MsoNormal><code><b> void </b></code><a
       href="http://lejos.sourceforge.net/p_technologies/nxt/nxj/api/lejos/nxt/Sound.html#playTone(int,%20int)"><b><span
       style='font-family:"Courier New"'>playTone</span></b></a><code>(int&nbsp;aFrequency,
       int&nbsp;aDuration);</code></li>
  </ul>
  <p class=MsoNormal>Example:</p>
  <p class=MsoNormal>
  <table cellpadding=0 cellspacing=0 align=left>
   <tr>
    <td width=0 height=0></td>
   </tr>
   <tr>
    <td></td>
    <td width=666 height=554 bgcolor=white style='border:.75pt solid black;
    vertical-align:top;background:white'><span style='position:absolute;
    z-index:8'>
    <table cellpadding=0 cellspacing=0 width="100%">
     <tr>
      <td>
      <div style='padding:3.6pt 7.2pt 3.6pt 7.2pt'>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      10.0pt;font-family:"Courier New";color:#7F0055'>import</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> lejos.nxt.*;</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New"'>&nbsp;</span></p>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      10.0pt;font-family:"Courier New";color:#7F0055'>public</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>class</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> Tune {</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New"'>&nbsp;</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New"'>&nbsp;</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>   </span><span
      style='font-size:10.0pt;font-family:"Courier New";color:#3F7F5F'>// NOTE:
      This tune was generated from a midi using Guy </span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>   </span><span
      style='font-size:10.0pt;font-family:"Courier New";color:#3F7F5F'>// Truffelli's
      Brick Music Studio www.aga.it/~guy/lego</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>   </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>private</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>static</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>final</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>short</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> [] </span><i><span
      style='font-size:10.0pt;font-family:"Courier New";color:#0000C0'>note</span></i><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> = {</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>    2349,115, 0,5,
      1760,165, 0,35, 1760,28, 0,13, 1976,23, </span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>    0,18, 1760,18, 0,23,
      1568,15, 0,25, 1480,103, 0,18, 1175,180, 0,20, 1760,18, </span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>    0,23, 1976,20, 0,20,
      1760,15, 0,25, 1568,15, 0,25, 2217,98, 0,23, 1760,88, </span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>    0,33, 1760,75, 0,5,
      1760,20, 0,20, 1760,20, 0,20, 1976,18, 0,23, 1760,18, </span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>    0,23, 2217,225, 0,15,
      2217,218};</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New"'>&nbsp;</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>   </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>void</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'>  public
      static void main(String [] args) {</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>      </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>for</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'>(</span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>int</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> i=0;i&lt;</span><i><span
      style='font-size:10.0pt;font-family:"Courier New";color:#0000C0'>note</span></i><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'>.</span><span
      style='font-size:10.0pt;font-family:"Courier New";color:#0000C0'>length</span><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'>; i+=2) {</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>         </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>final</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>short</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> w = </span><i><span
      style='font-size:10.0pt;font-family:"Courier New";color:#0000C0'>note</span></i><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'>[i+1];</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>         </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>final</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>int</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> n = </span><i><span
      style='font-size:10.0pt;font-family:"Courier New";color:#0000C0'>note</span></i><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'>[i];</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>         </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>if</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> (n != 0) Sound.<i>playTone</i>(n,
      w*10);</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>         </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>try</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> { Thread.<i>sleep</i>(w*10);
      } </span><b><span style='font-size:10.0pt;font-family:"Courier New";
      color:#7F0055'>catch</span></b><span style='font-size:10.0pt;font-family:
      "Courier New";color:black'> (InterruptedException e) {}</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>      }</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>   }</span></p>
      </div>
      </td>
     </tr>
    </table>
    </span>&nbsp;</td>
   </tr>
  </table>
  <code>&nbsp;</code></p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <br clear=ALL>
  <p class=MsoNormal></p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>There are two ways to play system sounds.   One is:</p>
  <ul style='margin-top:0in' type=disc>
   <li class=MsoNormal>void systemSound (boolean aQueued, int aCode);<br>
       The aQueued parameter is ignored on the NXT, it is here to be backwards
       compatible with the RXC.</li>
  </ul>
  <p class=MsoNormal>The values of code are:</p>
  <p class=MsoNormal style='margin-left:5.65pt'>code = 0             Short beep</p>
  <p class=MsoNormal style='margin-left:5.65pt'>code = 1             Double
  beep</p>
  <p class=MsoNormal style='margin-left:5.65pt'>code = 2             Descending
  arpeggio</p>
  <p class=MsoNormal style='margin-left:5.65pt'>code = 3             Ascending
  arpeggio</p>
  <p class=MsoNormal style='margin-left:5.65pt'>code = 4             Long, low
  buzz</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoBodyText2>Iindividual methods to play a particular system sound,
  if you dont remember the code, are</p>
  <ul style='margin-top:0in' type=disc>
   <li class=MsoNormal>void beep();</li>
   <li class=MsoNormal>void twoBeeps();</li>
   <li class=MsoNormal>void beepSequence();</li>
   <li class=MsoNormal>void beepSequenceUp();</li>
   <li class=MsoNormal>void buzz();int playSample(File aWAVfile) </li>
   <li class=MsoNormal>int playSample(File aWAVfile, int volume) </li>
  </ul>
  <p class=MsoNormal style='margin-left:.25in'>&nbsp;</p>
  <p class=MsoNormal>This is also a method to produce a rest when playing a
  tune; time in milliseconds</p>
  <ul style='margin-top:0in' type=disc>
   <li class=MsoNormal>void pause(int time);<br>
       You can use this method anytime you want your program wait, and dont
       want to bother with the try/catch block required by System.sleep();</li>
  </ul>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoBodyText2>leJOS NXJ has methods that can also play 8-bit WAV
  files.</p>
  <ul style='margin-top:0in' type=disc>
   <li class=MsoNormal>int playSample(File aWAVfile) </li>
   <li class=MsoNormal>int playSample(File aWAVfile, int volume) </li>
  </ul>
  <p class=MsoBodyText3>The return value of milliseconds the sample will play
  for or &lt; 0 if there is an error.</p>
  <p class=MsoBodyText3>&nbsp;</p>
  <p class=MsoBodyText3>To play a musical note, use  </p>
  <ul style='margin-top:0in' type=disc>
   <li class=MsoNormal>void <a
       href="http://lejos.sourceforge.net/p_technologies/nxt/nxj/api/lejos/nxt/Sound.html#playNote(int[],%20int,%20int)"><b><span
       style='font-family:"Courier New"'>playNote</span></b></a>(int[]&nbsp;inst,int&nbsp;freq,
       int&nbsp;len)<br>
       The  <i>inst</i> array contains the attack, decay, sustain and release 
       parameters for the note. The static constants for some predefined
       instruments are: FLUTE, PIANO  and XYLOPHONE.  You can also experiment
       with defining you own.</li>
  </ul>
  <pre style='margin-left:.25in'><span style='font-size:12.0pt;font-family:
  "Times New Roman"'>&nbsp;</span></pre>
  <p class=MsoBodyText3>&nbsp;</p>
  <p class=MsoToc1><a href="LCD_Sensors.htm">Back to Top</a></p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=Heading2Color><a name="_Toc200100843"></a><a name="_Toc198969309"></a><a
  name="_Toc198970804"></a>Battery</p>
  <p class=MsoNormal>There are two static methods to get the battery voltage:</p>
  <ul style='margin-top:0in' type=disc>
   <li class=MsoNormal>  int getVoltageMilliVolt();</li>
   <li class=MsoNormal>  float getVoltage()</li>
  </ul>
  <p class=MsoNormal>Example:</p>
  <p class=MsoNormal>
  <table cellpadding=0 cellspacing=0 align=left>
   <tr>
    <td width=26 height=16></td>
   </tr>
   <tr>
    <td></td>
    <td width=530 height=227 bgcolor=white style='border:.75pt solid black;
    vertical-align:top;background:white'><span style='position:absolute;
    z-index:9'>
    <table cellpadding=0 cellspacing=0 width="100%">
     <tr>
      <td>
      <div style='padding:3.6pt 7.2pt 3.6pt 7.2pt'>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      10.0pt;font-family:"Courier New";color:#7F0055'>import</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> lejos.nxt.*;</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New"'>&nbsp;</span></p>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      10.0pt;font-family:"Courier New";color:#7F0055'>public</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>class</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> BatteryTest
      {</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>    </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>void</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> main
      (String[] args) </span><b><span style='font-size:10.0pt;font-family:"Courier New";
      color:#7F0055'>throws</span></b><span style='font-size:10.0pt;font-family:
      "Courier New";color:black'> Exception {</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>        LCD.<i>drawString</i>(</span><span
      style='font-size:10.0pt;font-family:"Courier New";color:#2A00FF'>&quot;</span><span
       style='font-size:10.0pt;font-family:"Courier New";color:#2A00FF'>Battery</span><span
      style='font-size:10.0pt;font-family:"Courier New";color:#2A00FF'>: &quot;</span><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> + Battery.<i>getVoltage</i>(),0,0);</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>        Thread.<i>sleep</i>(2000);</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>    }</span></p>
      <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
      color:black'>}</span></p>
      </div>
      </td>
     </tr>
    </table>
    </span>&nbsp;</td>
   </tr>
  </table>
   &nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <br clear=ALL>
  <p class=MsoToc1><a href="LCD_Sensors.htm">Back to Top</a></p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=Heading1color><a name="_Toc200100844"></a><a name="_Toc198969303"></a><a
  name="_Toc198970805"><span lang=EN-GB>Sensors</span></a></p>
  <p class=MsoNormal>The NXT comes with four sensors; the touch sensor, the
  sound sensor, the light sensor and the ultrasonic sensor.  LejosNXJ provides
  software abstractions of all these sensor types, as well as many provided by
  third parties.</p>
  <p class=MsoNormal>A physical sensor must be connected to a port, and the
  sensor object must know which port this is.  To provide this information, you
  create an instance of the sensor, and pass this information in its
  constructor.  The possibilities are: SensorPort.S1, S2, S3 or S4.</p>
  <p class=Heading2Color><a name="_Toc200100845"></a><a name="_Toc198969304"></a><a
  name="_Toc198970806">Touch Sensor</a></p>
  <p class=MsoBodyText2>To use a touch sensor, you create an instance of  using
  the constructor:</p>
  <ul style='margin-top:0in' type=disc>
   <li class=MsoNormal>TouchSensor(SensorPort port);</li>
  </ul>
  <p class=MsoBodyText2>To test is the touch sensor is pressed, you use the isPressed()
  method:</p>
  <ul style='margin-top:0in' type=disc>
   <li class=MsoNormal>boolean isPressed();</li>
  </ul>
  <p class=MsoBodyText2>Example:<b><span style='font-size:9.0pt;font-family:
  "Courier New";color:#7F0055'> </span></b></p>
  <p class=MsoBodyText2><b><span style='font-size:9.0pt;font-family:"Courier New";
  color:#7F0055'><img width=752 height=297 src="LCD_Sensors_files/image003.gif"></span></b></p>
  <p class=MsoBodyText2>&nbsp;</p>
  <p class=MsoBodyText2>&nbsp;</p>
  <p class=MsoToc1><a href="LCD_Sensors.htm">Back to Top</a></p>
  <p class=MsoNormal><a name="_Toc198970807"></a><a name="_Toc198970360"></a><a
  name="_Toc198969305"></a></p>
  <p class=Heading2Color><a name="_Toc200100846"></a><a name="_Toc198969306"></a><a
  name="_Toc198970808">Light Sensor</a></p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoBodyText2>To use a light sensor, you create an instance of it
  using the constructor:</p>
  <ul style='margin-top:0in' type=disc>
   <li class=MsoNormal>public LightSensor(SensorPort port);</li>
  </ul>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>Example:</p>
  <p class=MsoNormal>
  <table cellpadding=0 cellspacing=0 align=left>
   <tr>
    <td width=23 height=1></td>
   </tr>
   <tr>
    <td></td>
    <td width=522 height=423 bgcolor=white style='border:.75pt solid black;
    vertical-align:top;background:white'><span style='position:absolute;
    z-index:10'>
    <table cellpadding=0 cellspacing=0 width="100%">
     <tr>
      <td>
      <div style='padding:3.6pt 7.2pt 3.6pt 7.2pt'>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      10.0pt;font-family:"Courier New";color:#7F0055'>import</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> lejos.nxt.*;</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New"'>&nbsp;</span></p>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      10.0pt;font-family:"Courier New";color:#7F0055'>public</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>class</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> LightTest
      {</span></p>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      10.0pt;font-family:"Courier New";color:#7F0055'>     void</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> main
      (String[] args)</span></p>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      10.0pt;font-family:"Courier New";color:#7F0055'>    throws</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> Exception</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>    {</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>      LightSensor light = </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>new</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> LightSensor(SensorPort.</span><i><span
      style='font-size:10.0pt;font-family:"Courier New";color:#0000C0'>S1</span></i><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'>);</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>            </span></p>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      10.0pt;font-family:"Courier New";color:#7F0055'>      while</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> (</span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>true</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'>) {</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>          LCD.<i>drawInt</i>(light.readValue(),
      4, 0, 0);</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>          LCD.<i>drawInt</i>(light.readNormalizedValue(),
      4, 0, 1);</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>          LCD.<i>drawInt</i>(SensorPort.</span><i><span
      style='font-size:10.0pt;font-family:"Courier New";color:#0000C0'>S1</span></i><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'>.readRawValue(),
      4,  0, 2);</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>          LCD.<i>drawInt</i>(SensorPort.</span><i><span
      style='font-size:10.0pt;font-family:"Courier New";color:#0000C0'>S1</span></i><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'>.<span
      style='background:silver'>readValue</span>(), 4,  0, 3);</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>          Thread.sleep(2000);</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>      }</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>    }</span></p>
      <p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
      color:black'>}</span></p>
      </div>
      </td>
     </tr>
    </table>
    </span>&nbsp;</td>
   </tr>
  </table>
   &nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <br clear=ALL>
  <p class=MsoToc1><a href="LCD_Sensors.htm">Back to Top</a></p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=Heading2Color><a name="_Toc200100847"></a><a name="_Toc198969307"></a><a
  name="_Toc198970809">Sound Sensor</a></p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>The sound sensor supports two modes: DB and DBA.   These
  modes give  different frequency response, so that it may be possible to get
  an idea of the frequency of a sound by switching between modes. </p>
  <p class=MsoNormal>There are two constructors:</p>
  <p class=MsoNormal style='margin-left:.6in;text-indent:-.25in'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span>SoundSensor(SensorPort port) <br>
  creates a sound sensor using DB mode.</p>
  <p class=MsoNormal style='margin-left:.6in;text-indent:-.25in'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span>SoundSensor(SensorPort port, dba)<br>
  creates a sound sensor using DBA mode if the second parameter is <b><i>true</i></b>.</p>
  <p class=MsoBodyText2>You can switch modes with:</p>
  <p class=MsoNormal style='margin-left:48.6pt;text-indent:-.25in'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span>void setDBA(boolean dba)</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoBodyText2>Example using DB mode only:</p>
  <p class=MsoNormal>
  <table cellpadding=0 cellspacing=0 align=left>
   <tr>
    <td width=40 height=0></td>
   </tr>
   <tr>
    <td></td>
    <td><img width=590 height=393 src="LCD_Sensors_files/image004.gif"
    alt="Text Box: import lejos.nxt.*;&#13;&#10;&#13;&#10;public class SoundScope {&#13;&#10;	&#13;&#10;      void main (String[] args)	throws Exception {&#13;&#10;        SoundSensor sound = new SoundSensor(SensorPort.S1);&#13;&#10;		&#13;&#10;        while (!Button.ESCAPE.isPressed()) {&#13;&#10;            LCD.clear();&#13;&#10;            for(int i=0;i&lt;100;i++) {&#13;&#10;                LCD.setPixel(1,i,60 - (sound.readValue()/2));&#13;&#10;                Thread.sleep(20);&#13;&#10;            }&#13;&#10;	 }&#13;&#10;    }&#13;&#10;}&#13;&#10;"></td>
   </tr>
  </table>
  <br clear=ALL>
  </p>
  <p class=MsoNormal>The above example gives a graphical display of the way the
  sound reading varies over a two-second period.</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoToc1><a href="LCD_Sensors.htm">Back to Top</a></p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=Heading2Color><a name="_Toc200100848"></a><a name="_Toc198969308"></a><a
  name="_Toc198970810">Ultrasonic Sensor</a></p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoBodyText>To create an instance  use the constructor:</p>
  <p class=MsoNormal style='margin-left:48.6pt;text-indent:-.25in'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span>UltrasonicSensor( Port aSensorPort); </p>
  <p class=MsoBodyText>The sensor operates in two modes, continuous (defalt)
  and ping.  When in continuous mode the sensor sends out pings as often as it
  can and the most recently obtained result is available via a call to</p>
  <p class=MsoNormal style='margin-left:48.6pt;text-indent:-.25in'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span>int getDistance()<br>
  The return value is in centimeters.  If no echo was detected, the returned
  value is 255.  The maximum range of the sensor is about 170 cm.  </p>
  <p class=MsoBodyText>When in ping mode, a ping is sent only when a call is
  made to</p>
  <p class=MsoNormal style='margin-left:48.6pt;text-indent:-.25in'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span>void ping()<br>
  This sets the sensor in ping mode and sends a single ping and up to 8 echoes
  are captured.  These may be read by making a call to</p>
  <p class=MsoNormal style='margin-left:48.6pt;text-indent:-.25in'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span>int readDistances(int [] distances);<br>
  You provide an integer array of length that contains the data after the
  method returns.  A delay of approximately 20ms is required between the call
  to ping and getDistances. This delay is not included in the method. Calls to getDistances
  before this period may result in an error or no data being returned. The
  normal getDistance call may also be used with ping, returning information for
  the first echo. <br>
  Calling  ping()  will disable the default continuous mode. Toto switch back
  to continuous mode, call</p>
  <p class=MsoNormal style='margin-left:48.6pt;text-indent:-.25in'><span
  style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span>int continuous()</p>
  <p class=MsoNormal>Example:</p>
  <p class=MsoNormal>
  <table cellpadding=0 cellspacing=0 align=left>
   <tr>
    <td width=20 height=2></td>
   </tr>
   <tr>
    <td></td>
    <td width=505 height=332 bgcolor=white style='border:.75pt solid black;
    vertical-align:top;background:white'><span style='position:absolute;
    z-index:6'>
    <table cellpadding=0 cellspacing=0 width="100%">
     <tr>
      <td>
      <div style='padding:3.6pt 7.2pt 3.6pt 7.2pt'>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      10.0pt;font-family:"Courier New";color:#7F0055'>import</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> <span
      style='background:silver'>lejos.nxt.*</span>;</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New"'>&nbsp;</span></p>
      <p class=MsoNormal style='text-autospace:none'><b><span style='font-size:
      10.0pt;font-family:"Courier New";color:#7F0055'>public</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>class</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'> SonicTest
      {      </span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>    </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>void</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'>
      main(String[] args) </span><b><span style='font-size:10.0pt;font-family:
      "Courier New";color:#7F0055'>throws</span></b><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'> Exception {</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>        UltrasonicSensor
      sonic = </span><b><span style='font-size:10.0pt;font-family:"Courier New";
      color:#7F0055'>new</span></b></p>
      <p class=MsoNormal style='margin-left:1.0in;text-indent:.5in;text-autospace:
      none'><span style='font-size:10.0pt;font-family:"Courier New";color:black'> UltrasonicSensor(SensorPort.</span><i><span
      style='font-size:10.0pt;font-family:"Courier New";color:#0000C0'>S1</span></i><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'>);</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>            </span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>        </span><b><span
      style='font-size:10.0pt;font-family:"Courier New";color:#7F0055'>while</span></b><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'>(!<span
      style='background:silver'>Button</span>.</span><i><span style='font-size:
      10.0pt;font-family:"Courier New";color:#0000C0'>ESCAPE</span></i><span
      style='font-size:10.0pt;font-family:"Courier New";color:black'>.isPressed())
      {</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>            LCD.<i>clear</i>();</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>            LCD.<i>drawInt</i>(sonic.getDistance(),
      0, 3);</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>        }</span></p>
      <p class=MsoNormal style='text-autospace:none'><span style='font-size:
      10.0pt;font-family:"Courier New";color:black'>    } </span></p>
      <p class=MsoNormal><span style='font-size:9.0pt;font-family:"Courier New";
      color:black'>}</span></p>
      </div>
      </td>
     </tr>
    </table>
    </span>&nbsp;</td>
   </tr>
  </table>
   &nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <br clear=ALL>
  <p class=Heading3color><a name="_Toc200100849"><span lang=EN-GB>Program:
  multiple echoes</span></a></p>
  <p class=MsoBodyText2>Write a program that displays the distances from
  multiple echoes in a column. The program should make four calls to ping(),
  and display the four columns of results, then wait for a button press.   Exit
  if the ESCAPE button was pressed. </p>
  <p class=MsoToc1>&nbsp;</p>
  <p class=MsoNormal><a href="LCD_Sensors_files/USPingTest.html" target="_blank"><b>Solution</b></a></p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoNormal>&nbsp;</p>
  <p class=MsoToc1><a href="LCD_Sensors.htm">Back to Top</a></p>
  <p class=MsoToc1>&nbsp;</p>
  </td>
  <a name="_Hardware:_I/O_and_Sensors"></a>
 </tr>
</table>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>&nbsp;</b></p>

<p class=MsoNormal>&nbsp;</p>

<h1><span class=Heading2ColorChar><span style='color:windowtext;font-style:
normal'>&nbsp;</span></span></h1>

<p class=MsoNormal>&nbsp;</p>

</div>

</body>

</html>
