<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en">
<head><!-- CSS -->		
	<link rel="stylesheet" href="../r_css/lejos-tutorial.css" type="text/css" /><!-- ICON -->
	<link rel="shortcut icon" href="../favicon.ico" type="image/x-icon" />		
	<title>Compiling and Running Programs</title>
	<meta name="AUTHOR" content="Roger Glassey" />
	<meta name="AUTHOR" content="Lawrie Griffiths" />
</head>
<body>
	<a id="top" name="top"></a>
	<!-- N1: HEADER -->
	<table class="n1t1" cellpadding="0" cellspacing="0">
		<tr>
			<td><img src="../r_media/images/tutorial_header1.jpg" /></td>
			<td align="right"><img src="../r_media/images/tutorial_header2.jpg" /></td>
		</tr>
	</table>
	<!-- N2: CONTENTS -> NAVIGATION SYSTEMS AND CONTENTS -->
	<table class="n2t1" cellpadding="0" cellspacing="0">
		<tr>
			<td class="n2t1r1c1">
				<div class="nolinkLESSON">Compiling and Running Programs </div>
				<div class="linkAHEAD"><a href="#1">Using the leJOS NXJ command line tools</a></div>
				<div class="linkAHEAD2"><a href="#2">nxjc &#8211; compile  a program</a></div>
				<div class="linkAHEAD2"><a href="#3">nxjlink &#8211; link a program</a></div>
				<div class="linkAHEAD2"><a href="#4">nxjupload &#8211; upload a program</a></div>
				<div class="linkAHEAD2"><a href="#5">nxj &#8211; link, upload and run a program</a></div>
				<div class="linkAHEAD"><a href="#6">Using PC API command line tools</a></div>
				<div class="linkAHEAD2"><a href="#7">nxjpcc &#8211; compile a PC API program </a></div>
				<div class="linkAHEAD2"><a href="#8">nxjpc &#8211; run a PC API program  </a></div>
			</td>
			<td>
				<!-- DO NOT MANINPULATE -->
        		<div id="BreadCrumbs">
            		<a href="../index.htm" target="_top">Home Page</a> &gt; <a href="#">Compiling and Running NXJ programs</a>

        		</div>
        		<div class="NavBit">
                	<a target="_top" href="../Preliminaries/GettingStarted.htm">«&nbsp;Previous</a>&nbsp;&#8226;&nbsp;<a href="../index.htm">TOC</a>&nbsp;&#8226;&nbsp;<a href="../MenuSystem/MenuSystem.htm">Next&nbsp;»</a>
        		</div>
				<div id="PageTitle">Compiling and Running Programs</Div>
				<p>This section describes how to compile and run leJOS NXJ programs from a command window.</p>
				
				<p>Keep in mind, there are two APIs which are compiled and run differently depending where they will run.  For programs that will run:</p> 
				<ul class="BlueArrows">
					<li>On the NXT brick, use <a href="1">leJOS NXJ command line tools</a></li>
					<li>On your PC (and connect via bluetooth or USB) <a href="#6">PC API command line tools</a></li>
				</ul>
				<p>These command line tools will set up the CLASSPATH and the java library path for you so the appropriate resources will be found.  If you are not using these scripts but compiling or running in other ways, the CLASSPATH and java library path needs to be set. 
				<ul class="BlueArrows">
					<li>On the NXT brick, <code>classes.jar</code> needs to be on the BOOTCLASSPATH</li>
					<li>On your PC (and connect via bluetooth or USB), <code>pccomm.jar</code> and <code>bluecove.jar</code> (Linux users also need to include <code>bluecove-gpl</code>) need to be there and <code>classes.jar</code> must be removed from the BOOTCLASSPATH.</li>
				</ul> 
				
				
				<p>While command line tools are very useful, programming for leJOS NXJ is best
				done using an Integrated Development Environment. IDEs have
				syntax-directed editors that immediately show you any syntax
				errors in your program, rather than waiting until you compile the
				program and then showing a list of errors. This, together with
				color coding of the source, automatic formatting of the code,
				prompting for method names and signatures, expanding and
				collapsing parts of your program, and many other editing features,
				makes creating your program a much faster and more enjoyable
				experience. But the advantages of the IDE do not end there: they
				also help you with creating and building projects, debugging,
				generating documentation, and creating user interfaces. Java IDEs
				put all the Sun Java tools and a variety of third-party tools at
				your fingertips. They make supporting new tools simple, either by
				use of plug-ins or by integration of external tools.</p>
				<p>IDEs are easy to set up and use and
				you should use them for all your leJOS programming &#8211; even
				the simplest of projects.</p>
				<p>You can produce leJOS NXJ programs with any Java IDE. This tutorial currently has sections on how to use two of the most popular Jave IDEs: Eclipse and Netbeans.
				</p>
				<p>To learn how to create, compile and run your programs from an Integrated Development Environment, go to one of the following sections:</p>
				<ul class="BlueArrows">
					<li><a href="UsingEclipse.htm">Eclipse</a></li>
					<li><a href="UsingNetbeans.htm">Netbeans</a></li>
				</ul>	
				<a name="1"></a>
				<h4>Using the leJOS NXJ command line tools</h4>
				<p>The tools for compiling, linking and uploading leJOS NXJ programs are:</p>
				<ul class="BlueArrows">
					<li>nxjc</li>
					<li>nxjlink</li>
					<li>nxjupload</li>
					<li>nxj</li>
				</ul>
				<p>Note that you normally only need to use the <code>nxjc</code> and <code>nxj</code> commands,
				   as <code>nxj</code> does the equivalent of <code>nxjlink</code> followed by <code>nxjupload</code>.</p>
				<p>You need to open a command window to run these commands.</p>
				
				<!-- WEB TOOL TO GO TO TOP OF THE DOCUMENT -->
				<a href="#top">Back to top</a>
				<p/>
				
				<a name="2"></a>
				<h5>nxjc &#8211; compile a program</h5>
				<p>Compiles one or more java files.</p>
				<p>Usage: nxjc &lt;java-files&gt;</p>
				<p>Example: </p>
				<code>nxjc View.java</code>
				<p>nxjc calls javac with parameters:</p>
				<ul class="BlueArrows">
					<li>-bootclasspath &lt;path to classes.jar&gt;</li>
					<li>&lt;java-files&gt;</li>
				</ul>
				<p>-bootclasspath is set because leJOS does not use the standard java.lang classes
						but has its own versions in classes.jar.</p>
						
				<!-- WEB TOOL TO GO TO TOP OF THE DOCUMENT -->
				<a href="#top">Back to top</a>
				<p/>
		
				<a name="3"></a>
				<h5>nxjlink &#8211; link a program</h5>
				<p>Calls the leJOS NXJ linker.</p>
				<p>Usage:  nxjlink [-v|--verbose] [-g|--debug] [-a|--all] main-class &#8211;o &lt;binary&gt;</p>
				<p>Example:</p>
				<code>nxjlink -v Tune -o Tune.nxj</code>
				<p>Links the specified main class with any
						classes that it references in the current directory and with the
						standard leJOS classes from classes.jar to produce a binary NXJ
						program that can be uploaded and run.</p>
				<p>The -v or --verbose flag
						causes a list of class names and method signatures  included in the
						binary   to be sent to the standard output. This output is extremely useful for debugging.</p>
				<p>The -g or --debug flag causes a debug monitor to be included with the program. This allows the program
				   to be interrupted while is running (by pressing ENTER+ESCAPE) and gives stack dumps when untrapped
				   exceptions occur.</p>
				<p>The linker removes methods that are
						not used. Specify &#8211;a or &#8211;all to include all  methods
						whether they are used or not. This should never be necessary.</p>
				<p>Use the -h or --help flag to print out the options.</p>
				
				<!-- WEB TOOL TO GO TO TOP OF THE DOCUMENT -->
				<a href="#top">Back to top</a>
				<p/>
				
				<a name="4"></a>
				<h5>nxjupload &#8211; upload a program</h5>
				<p>Usage: nxjupload [-b|--bluetooth] [-u|--usb] [-d|--address address] [-n|--name name]  [-r|--run]	&lt;binary&gt;</p>
				<p>Example:</p>
				<p>nxjupload  Tune.nxj</p>
				<p>Uploads the binary (.nxj) file. By default USB is tried first and then Bluetooth. If the --bluetooth
					flag is specified, only Bluetooth is tried. If --usb is specified, only USB
					is tried.</p>
				<p>When Bluetooth is used, a search
					for Bluetooth devices is done, unless the -address flag is
					set, when a device with the given address is connected to.</p>
				<p>The --name parameter limits
					the search for a NXT with the given name. If this is not
					specified, nxjupload tries to connect to each NXT that it finds
					and will upload to the first NXT that is successfully connects to.</p>
				<p>If the --run parameter is
					specified, the program is run after it has been uploaded.</p>
		
						<!-- WEB TOOL TO GO TO TOP OF THE DOCUMENT -->
				<a href="#top">Back to top</a>
				<p/>
				
				<a name="5"></a>
				<h5>nxj &#8211; link, upload and run a program</h5>
				<p>Usage: nxj [options] main-class</p>
				<p >Example:	</p>
				<code>nxj -r Tune</code>
				<p> The nxj command links and uploads a leJOS NXJ program. It is the equivalent of nxjlink followed by nxjupload.</p>
			
				<p>Any of the options for <code>nxjlink</code> and <code>nxjupload</code> can be specified.</p>
				<p>The default binary name is &lt;main-class&gt;.nxj, e.g. Tune.nxj.</p>
				
				<!-- WEB TOOL TO GO TO TOP OF THE DOCUMENT -->
				<a href="#top">Back to top</a>
				<p/>
                 
                <a name="6"></a>
				<h4>Using PC API command line tools</h4>
				<p>The tools for compiling and running leJOS PC API programs are:</p>
				<ul class="BlueArrows">
					<li>nxjpcc</li>
					<li>nxjpc</li>
				</ul>
			 
				<p>Reminder: If you are compiling or running a PC API program without using these tools, you need <code>pccomm.jar</code> and <code>bluecove.jar</code> (Linux users also need <code>bluecove-gpl</code>) in your CLASSPATH and <code>classes.jar</code> must be removed. Also, the <code>java library path</code> needs to be set.
				</p>
				<!-- WEB TOOL TO GO TO TOP OF THE DOCUMENT -->
				<a href="#top">Back to top</a>
				<p/>
				
				<a name="7"></a>
				<h5>nxjpcc &#8211; compile a PC API program for your pc</h5>
				<p>Compiles one or more PC API java files.</p>
				<p>Example: </p>
				<p><code>nxjpcc -sourcepath /lejos_nxj_09/projects/pcsamples/SensorTest SensorTest.java</code></p>
			 
						
				<!-- WEB TOOL TO GO TO TOP OF THE DOCUMENT -->
				<a href="#top">Back to top</a>
				<p/>
		
				<a name="8"></a>
				<h5>nxjpc &#8211; run a PC API program on your pc</h5>
				<p>Calls java to run your PC API program.</p>
				<p>Example:</p>
				<p><code>nxjpc SensorTest</code></p>
				
				
				<!-- WEB TOOL TO GO TO TOP OF THE DOCUMENT -->
				<a href="#top">Back to top</a>
				<p/> 
                 
				<!-- END CONTENT AREA -->

				<!-- NAVIGATION TOOL -->				
        		<div class="NavBit">
               		<a target="_top" href="../Preliminaries/GettingStarted.htm">«&nbsp;Previous</a>&nbsp;&#8226;&nbsp;<a href="../index.htm">TOC</a>&nbsp;&#8226;&nbsp;<a href="../MenuSystem/MenuSystem.htm">Next&nbsp;»</a>
        		</div>
				<br />
			</td>
		</tr>
	</table>
</body>
</html>